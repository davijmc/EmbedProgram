

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 16:31:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F2520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F2520 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	smallconst
    80  000600                     __psmallconst:
    81                           	callstack 0
    82  000600  00                 	db	0
    83  000601                     _valor:
    84                           	callstack 0
    85  000601  3F                 	db	63
    86  000602  06                 	db	6
    87  000603  5B                 	db	91
    88  000604  4F                 	db	79
    89  000605  66                 	db	102
    90  000606  6D                 	db	109
    91  000607  7D                 	db	125
    92  000608  07                 	db	7
    93  000609  7F                 	db	127
    94  00060A  6F                 	db	111
    95  00060B  77                 	db	119
    96  00060C  7C                 	db	124
    97  00060D  39                 	db	57
    98  00060E  5E                 	db	94
    99  00060F  79                 	db	121
   100  000610  71                 	db	113
   101  000611                     __end_of_valor:
   102                           	callstack 0
   103  000611                     _charKey:
   104                           	callstack 0
   105  000611  55                 	db	85
   106  000612  4C                 	db	76
   107  000613  44                 	db	68
   108  000614  52                 	db	82
   109  000615  53                 	db	83
   110  000616  58                 	db	88
   111  000617  41                 	db	65
   112  000618  42                 	db	66
   113  000619  59                 	db	89
   114  00061A  73                 	db	115
   115  00061B                     __end_of_charKey:
   116                           	callstack 0
   117  0000                     _T0CON	set	4053
   118  0000                     _TMR0L	set	4054
   119  0000                     _TMR0H	set	4055
   120  0000                     _INTCON	set	4082
   121  0000                     _ADCON1	set	4033
   122  0000                     _TRISE	set	3990
   123  0000                     _TRISC	set	3988
   124  0000                     _TRISB	set	3987
   125  0000                     _TRISA	set	3986
   126  0000                     _PORTE	set	3972
   127  0000                     _PORTC	set	3970
   128  0000                     _PORTB	set	3969
   129  0000                     _PORTA	set	3968
   130  0000                     _TRISD	set	3989
   131  0000                     _PORTD	set	3971
   132  00061B                     STR_2:
   133  00061B  20                 	db	32
   134  00061C  54                 	db	84	;'T'
   135  00061D  3A                 	db	58	;':'
   136  00061E  00                 	db	0
   137  00061F                     STR_3:
   138  00061F  48                 	db	72	;'H'
   139  000620  3A                 	db	58	;':'
   140  000621  00                 	db	0
   141  000622                     STR_1:
   142  000622  56                 	db	86	;'V'
   143  000623  3A                 	db	58	;':'
   144  000624  00                 	db	0
   145  000625  00                 	db	0	; dummy byte at the end
   146  0000                     
   147                           ; #config settings
   148                           
   149                           	psect	cinit
   150  0019B8                     __pcinit:
   151                           	callstack 0
   152  0019B8                     start_initialization:
   153                           	callstack 0
   154  0019B8                     __initialization:
   155                           	callstack 0
   156                           
   157                           ; Clear objects allocated to COMRAM (24 bytes)
   158  0019B8  EE00  F001         	lfsr	0,__pbssCOMRAM
   159  0019BC  0E18               	movlw	24
   160  0019BE                     clear_0:
   161  0019BE  6AEE               	clrf	postinc0,c
   162  0019C0  06E8               	decf	wreg,f,c
   163  0019C2  E1FD               	bnz	clear_0
   164  0019C4                     end_of_initialization:
   165                           	callstack 0
   166  0019C4                     __end_of__initialization:
   167                           	callstack 0
   168  0019C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169  0019C6  6EF8               	movwf	tblptru,c
   170  0019C8  0100               	movlb	0
   171  0019CA  EF7B  F006         	goto	_main	;jump to C main() function
   172                           
   173                           	psect	bssCOMRAM
   174  000001                     __pbssCOMRAM:
   175                           	callstack 0
   176  000001                     kpDebounce@oldRead:
   177                           	callstack 0
   178  000001                     	ds	2
   179  000003                     kpDebounce@newRead:
   180                           	callstack 0
   181  000003                     	ds	2
   182  000005                     _keys:
   183                           	callstack 0
   184  000005                     	ds	2
   185  000007                     _vel:
   186                           	callstack 0
   187  000007                     	ds	2
   188  000009                     _alt:
   189                           	callstack 0
   190  000009                     	ds	2
   191  00000B                     _tempo:
   192                           	callstack 0
   193  00000B                     	ds	2
   194  00000D                     _leitura:
   195                           	callstack 0
   196  00000D                     	ds	2
   197  00000F                     _v3:
   198                           	callstack 0
   199  00000F                     	ds	1
   200  000010                     _v2:
   201                           	callstack 0
   202  000010                     	ds	1
   203  000011                     _v1:
   204                           	callstack 0
   205  000011                     	ds	1
   206  000012                     _v0@ssd$F459:
   207                           	callstack 0
   208  000012                     	ds	1
   209  000013                     _display:
   210                           	callstack 0
   211  000013                     	ds	1
   212  000014                     kpDebounce@tempo:
   213                           	callstack 0
   214  000014                     	ds	1
   215  000015                     _started:
   216                           	callstack 0
   217  000015                     	ds	1
   218  000016                     _falha:
   219                           	callstack 0
   220  000016                     	ds	1
   221  000017                     _estado:
   222                           	callstack 0
   223  000017                     	ds	1
   224  000018                     _v0:
   225                           	callstack 0
   226  000018                     	ds	1
   227                           
   228                           	psect	cstackCOMRAM
   229  000019                     __pcstackCOMRAM:
   230                           	callstack 0
   231  000019                     ??_kpReadKey:
   232  000019                     ?_kpRead:
   233                           	callstack 0
   234  000019                     ?_digitalRead:
   235                           	callstack 0
   236  000019                     ?___awdiv:
   237                           	callstack 0
   238  000019                     ssdDigit@pos:
   239                           	callstack 0
   240  000019                     atraso_ms@num:
   241                           	callstack 0
   242  000019                     digitalWrite@pin:
   243                           	callstack 0
   244  000019                     digitalRead@pin:
   245                           	callstack 0
   246  000019                     pinMode@pin:
   247                           	callstack 0
   248  000019                     delayMicro@a:
   249                           	callstack 0
   250  000019                     delayMili@a:
   251                           	callstack 0
   252  000019                     ___awdiv@dividend:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x0
   256  000019                     	ds	1
   257  00001A                     ssdDigit@val:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x1
   261  00001A                     	ds	1
   262  00001B                     ??_digitalRead:
   263  00001B                     ??_delayMili:
   264  00001B                     atraso_ms@i:
   265                           	callstack 0
   266  00001B                     digitalWrite@value:
   267                           	callstack 0
   268  00001B                     pinMode@type:
   269                           	callstack 0
   270  00001B                     ___awdiv@divisor:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x2
   274  00001B                     	ds	1
   275  00001C                     kpReadKey@i:
   276                           	callstack 0
   277  00001C                     delayMili@i:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x3
   281  00001C                     	ds	1
   282  00001D                     ??_pinMode:
   283  00001D                     ??_digitalWrite:
   284  00001D                     atraso_ms@j:
   285                           	callstack 0
   286  00001D                     ___awdiv@counter:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x4
   290  00001D                     	ds	1
   291  00001E                     ??_LeTeclado:
   292  00001E                     atraso_ms@k:
   293                           	callstack 0
   294  00001E                     ___awdiv@sign:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x5
   298  00001E                     	ds	1
   299  00001F                     soWrite@value:
   300                           	callstack 0
   301  00001F                     ___awdiv@quotient:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x6
   305  00001F                     	ds	2
   306  000021                     ?___awmod:
   307                           	callstack 0
   308  000021                     soWrite@i:
   309                           	callstack 0
   310  000021                     ___awmod@dividend:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x8
   314  000021                     	ds	1
   315  000022                     ??_kpDebounce:
   316  000022                     ??_ssdUpdate:
   317  000022                     pushNibble@rs:
   318                           	callstack 0
   319  000022                     pushByte@rs:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x9
   323  000022                     	ds	1
   324  000023                     ___awmod@divisor:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0xA
   328  000023                     	ds	1
   329  000024                     ??_pushByte:
   330  000024                     pushNibble@value:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0xB
   334  000024                     	ds	1
   335  000025                     pushByte@value:
   336                           	callstack 0
   337  000025                     ___awmod@counter:
   338                           	callstack 0
   339  000025                     kpDebounce@i:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0xC
   343  000025                     	ds	1
   344  000026                     lcdCommand@value:
   345                           	callstack 0
   346  000026                     lcdChar@value:
   347                           	callstack 0
   348  000026                     ___awmod@sign:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0xD
   352  000026                     	ds	1
   353  000027                     lcdString@msg:
   354                           	callstack 0
   355  000027                     lcdNumber@value:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0xE
   359  000027                     	ds	2
   360  000029                     ??_lcdString:
   361  000029                     lcdNumber@i:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x10
   365  000029                     	ds	2
   366  00002B                     lcdString@i:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x12
   370  00002B                     	ds	2
   371  00002D                     ??_main:
   372                           
   373                           ; 1 bytes @ 0x14
   374  00002D                     	ds	2
   375  00002F                     main@x:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x16
   379  00002F                     	ds	2
   380                           
   381 ;;
   382 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   383 ;;
   384 ;; *************** function _main *****************
   385 ;; Defined at:
   386 ;;		line 83 in file "main.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;  x               2   22[COMRAM] int 
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   400 ;;      Params:         0       0       0       0       0       0       0
   401 ;;      Locals:         2       0       0       0       0       0       0
   402 ;;      Temps:          2       0       0       0       0       0       0
   403 ;;      Totals:         4       0       0       0       0       0       0
   404 ;;Total ram usage:        4 bytes
   405 ;; Hardware stack levels required when called: 6
   406 ;; This function calls:
   407 ;;		_LeTeclado
   408 ;;		_atraso_ms
   409 ;;		_kpDebounce
   410 ;;		_kpInit
   411 ;;		_lcdCommand
   412 ;;		_lcdInit
   413 ;;		_lcdNumber
   414 ;;		_lcdString
   415 ;;		_soInit
   416 ;;		_ssdDigit
   417 ;;		_ssdInit
   418 ;;		_ssdUpdate
   419 ;;		_timerInit
   420 ;; This function is called by:
   421 ;;		Startup code after reset
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           	psect	text0
   426  000CF6                     __ptext0:
   427                           	callstack 0
   428  000CF6                     _main:
   429                           	callstack 25
   430  000CF6                     
   431                           ;main.c: 84:     int x = 0;
   432  000CF6  0E00               	movlw	0
   433  000CF8  6E30               	movwf	(main@x+1)^0,c
   434  000CFA  0E00               	movlw	0
   435  000CFC  6E2F               	movwf	main@x^0,c
   436                           
   437                           ;main.c: 85:     TRISD = 0x00;
   438  000CFE  0E00               	movlw	0
   439  000D00  6E95               	movwf	149,c	;volatile
   440                           
   441                           ;main.c: 86:     PORTD = 0x00;
   442  000D02  0E00               	movlw	0
   443  000D04  6E83               	movwf	131,c	;volatile
   444  000D06                     
   445                           ;main.c: 88:     soInit();
   446  000D06  EC31  F00C         	call	_soInit	;wreg free
   447  000D0A                     
   448                           ;main.c: 89:     kpInit();
   449  000D0A  EC50  F00C         	call	_kpInit	;wreg free
   450  000D0E                     
   451                           ;main.c: 90:     lcdInit();
   452  000D0E  ECE0  F009         	call	_lcdInit	;wreg free
   453  000D12                     
   454                           ;main.c: 91:     ssdInit();
   455  000D12  EC93  F00B         	call	_ssdInit	;wreg free
   456  000D16                     
   457                           ;main.c: 92:     timerInit();
   458  000D16  ECEC  F00C         	call	_timerInit	;wreg free
   459  000D1A                     
   460                           ;main.c: 94:     lcdCommand(0x01);
   461  000D1A  0E01               	movlw	1
   462  000D1C  ECCD  F00C         	call	_lcdCommand
   463  000D20  EFE2  F006         	goto	l2479
   464  000D24                     l2455:
   465                           
   466                           ;main.c: 98:                 if(vel < 45){
   467  000D24  5008               	movf	(_vel+1)^0,w,c
   468  000D26  E107               	bnz	u2391
   469  000D28  0E2D               	movlw	45
   470  000D2A  5C07               	subwf	_vel^0,w,c
   471  000D2C  B0D8               	btfsc	status,0,c
   472  000D2E  EF9B  F006         	goto	u2391
   473  000D32  EF9D  F006         	goto	u2390
   474  000D36                     u2391:
   475  000D36  EF9F  F006         	goto	l2459
   476  000D3A                     u2390:
   477  000D3A                     
   478                           ;main.c: 99:                     falha = 1;
   479  000D3A  0E01               	movlw	1
   480  000D3C  6E16               	movwf	_falha^0,c
   481  000D3E                     l2459:
   482                           
   483                           ;main.c: 101:                 if(tempo >= 3){
   484  000D3E  500C               	movf	(_tempo+1)^0,w,c
   485  000D40  E109               	bnz	u2400
   486  000D42  0E03               	movlw	3
   487  000D44  5C0B               	subwf	_tempo^0,w,c
   488  000D46  A0D8               	btfss	status,0,c
   489  000D48  EFA8  F006         	goto	u2401
   490  000D4C  EFAA  F006         	goto	u2400
   491  000D50                     u2401:
   492  000D50  EF07  F007         	goto	l2489
   493  000D54                     u2400:
   494  000D54                     
   495                           ;main.c: 102:                     estado = 2;
   496  000D54  0E02               	movlw	2
   497  000D56  6E17               	movwf	_estado^0,c
   498  000D58  EF07  F007         	goto	l2489
   499  000D5C                     l2463:
   500                           
   501                           ;main.c: 106:                 if(alt < 30){
   502  000D5C  500A               	movf	(_alt+1)^0,w,c
   503  000D5E  E107               	bnz	u2411
   504  000D60  0E1E               	movlw	30
   505  000D62  5C09               	subwf	_alt^0,w,c
   506  000D64  B0D8               	btfsc	status,0,c
   507  000D66  EFB7  F006         	goto	u2411
   508  000D6A  EFB9  F006         	goto	u2410
   509  000D6E                     u2411:
   510  000D6E  EF07  F007         	goto	l2489
   511  000D72                     u2410:
   512  000D72                     l2465:
   513                           
   514                           ;main.c: 107:                     falha = 2;
   515  000D72  0E02               	movlw	2
   516  000D74  6E16               	movwf	_falha^0,c
   517  000D76  EF07  F007         	goto	l2489
   518  000D7A                     l2467:
   519                           
   520                           ;main.c: 111:                 if((tempo > 5)&&(vel <= 5)&&(alt<1001)){
   521  000D7A  500C               	movf	(_tempo+1)^0,w,c
   522  000D7C  E109               	bnz	u2420
   523  000D7E  0E06               	movlw	6
   524  000D80  5C0B               	subwf	_tempo^0,w,c
   525  000D82  A0D8               	btfss	status,0,c
   526  000D84  EFC6  F006         	goto	u2421
   527  000D88  EFC8  F006         	goto	u2420
   528  000D8C                     u2421:
   529  000D8C  EFB9  F006         	goto	l2465
   530  000D90                     u2420:
   531  000D90  5008               	movf	(_vel+1)^0,w,c
   532  000D92  E107               	bnz	u2431
   533  000D94  0E06               	movlw	6
   534  000D96  5C07               	subwf	_vel^0,w,c
   535  000D98  B0D8               	btfsc	status,0,c
   536  000D9A  EFD1  F006         	goto	u2431
   537  000D9E  EFD3  F006         	goto	u2430
   538  000DA2                     u2431:
   539  000DA2  EFB9  F006         	goto	l2465
   540  000DA6                     u2430:
   541  000DA6  0EE9               	movlw	233
   542  000DA8  5C09               	subwf	_alt^0,w,c
   543  000DAA  0E03               	movlw	3
   544  000DAC  580A               	subwfb	(_alt+1)^0,w,c
   545  000DAE  B0D8               	btfsc	status,0,c
   546  000DB0  EFDC  F006         	goto	u2441
   547  000DB4  EFDE  F006         	goto	u2440
   548  000DB8                     u2441:
   549  000DB8  EFB9  F006         	goto	l2465
   550  000DBC                     u2440:
   551  000DBC                     
   552                           ;main.c: 112:                     estado = 4;
   553  000DBC  0E04               	movlw	4
   554  000DBE  6E17               	movwf	_estado^0,c
   555                           
   556                           ;main.c: 113:                 }else{
   557  000DC0  EF07  F007         	goto	l2489
   558  000DC4                     l2479:
   559  000DC4  5017               	movf	_estado^0,w,c
   560  000DC6  6E2D               	movwf	??_main^0,c
   561  000DC8  6A2E               	clrf	(??_main+1)^0,c
   562                           
   563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   564                           ; Switch size 1, requested type "simple"
   565                           ; Number of cases is 1, Range of values is 0 to 0
   566                           ; switch strategies available:
   567                           ; Name         Instructions Cycles
   568                           ; simple_byte            4     3 (average)
   569                           ;	Chosen strategy is simple_byte
   570  000DCA  502E               	movf	(??_main+1)^0,w,c
   571  000DCC  0A00               	xorlw	0	; case 0
   572  000DCE  B4D8               	btfsc	status,2,c
   573  000DD0  EFEC  F006         	goto	l2615
   574  000DD4  EF07  F007         	goto	l2489
   575  000DD8                     l2615:
   576                           
   577                           ; Switch size 1, requested type "simple"
   578                           ; Number of cases is 3, Range of values is 1 to 3
   579                           ; switch strategies available:
   580                           ; Name         Instructions Cycles
   581                           ; simple_byte           10     6 (average)
   582                           ;	Chosen strategy is simple_byte
   583  000DD8  502D               	movf	??_main^0,w,c
   584  000DDA  0A01               	xorlw	1	; case 1
   585  000DDC  B4D8               	btfsc	status,2,c
   586  000DDE  EF92  F006         	goto	l2455
   587  000DE2  0A03               	xorlw	3	; case 2
   588  000DE4  B4D8               	btfsc	status,2,c
   589  000DE6  EFAE  F006         	goto	l2463
   590  000DEA  0A01               	xorlw	1	; case 3
   591  000DEC  B4D8               	btfsc	status,2,c
   592  000DEE  EFBD  F006         	goto	l2467
   593  000DF2  EF07  F007         	goto	l2489
   594  000DF6                     l2481:
   595                           
   596                           ;main.c: 120:                 PORTD = 0b00000010;
   597  000DF6  0E02               	movlw	2
   598  000DF8  6E83               	movwf	131,c	;volatile
   599                           
   600                           ;main.c: 121:                 break;
   601  000DFA  EF20  F007         	goto	l2491
   602  000DFE                     l2483:
   603                           
   604                           ;main.c: 123:                 PORTD = 0b00000011;
   605  000DFE  0E03               	movlw	3
   606  000E00  6E83               	movwf	131,c	;volatile
   607                           
   608                           ;main.c: 124:                 break;
   609  000E02  EF20  F007         	goto	l2491
   610  000E06                     l2485:
   611                           
   612                           ;main.c: 126:                 PORTD = 0b00000001;
   613  000E06  0E01               	movlw	1
   614  000E08  6E83               	movwf	131,c	;volatile
   615                           
   616                           ;main.c: 127:                 break;
   617  000E0A  EF20  F007         	goto	l2491
   618  000E0E                     l2489:
   619  000E0E  5016               	movf	_falha^0,w,c
   620  000E10  6E2D               	movwf	??_main^0,c
   621  000E12  6A2E               	clrf	(??_main+1)^0,c
   622                           
   623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   624                           ; Switch size 1, requested type "simple"
   625                           ; Number of cases is 1, Range of values is 0 to 0
   626                           ; switch strategies available:
   627                           ; Name         Instructions Cycles
   628                           ; simple_byte            4     3 (average)
   629                           ;	Chosen strategy is simple_byte
   630  000E14  502E               	movf	(??_main+1)^0,w,c
   631  000E16  0A00               	xorlw	0	; case 0
   632  000E18  B4D8               	btfsc	status,2,c
   633  000E1A  EF11  F007         	goto	l2617
   634  000E1E  EF20  F007         	goto	l2491
   635  000E22                     l2617:
   636                           
   637                           ; Switch size 1, requested type "simple"
   638                           ; Number of cases is 3, Range of values is 0 to 2
   639                           ; switch strategies available:
   640                           ; Name         Instructions Cycles
   641                           ; simple_byte           10     6 (average)
   642                           ;	Chosen strategy is simple_byte
   643  000E22  502D               	movf	??_main^0,w,c
   644  000E24  0A00               	xorlw	0	; case 0
   645  000E26  B4D8               	btfsc	status,2,c
   646  000E28  EFFB  F006         	goto	l2481
   647  000E2C  0A01               	xorlw	1	; case 1
   648  000E2E  B4D8               	btfsc	status,2,c
   649  000E30  EFFF  F006         	goto	l2483
   650  000E34  0A03               	xorlw	3	; case 2
   651  000E36  B4D8               	btfsc	status,2,c
   652  000E38  EF03  F007         	goto	l2485
   653  000E3C  EF20  F007         	goto	l2491
   654  000E40                     l2491:
   655                           
   656                           ;main.c: 129:         if(falha == 0){
   657  000E40  5016               	movf	_falha^0,w,c
   658  000E42  A4D8               	btfss	status,2,c
   659  000E44  EF26  F007         	goto	u2451
   660  000E48  EF28  F007         	goto	u2450
   661  000E4C                     u2451:
   662  000E4C  EF2C  F007         	goto	l2497
   663  000E50                     u2450:
   664  000E50                     
   665                           ;main.c: 130:             LeTeclado();
   666  000E50  EC61  F005         	call	_LeTeclado	;wreg free
   667  000E54                     
   668                           ;main.c: 131:             kpDebounce();
   669  000E54  ECE3  F008         	call	_kpDebounce	;wreg free
   670  000E58                     l2497:
   671                           
   672                           ;main.c: 133:         lcdCommand(0x80);
   673  000E58  0E80               	movlw	128
   674  000E5A  ECCD  F00C         	call	_lcdCommand
   675                           
   676                           ;main.c: 134:         lcdString("V:");
   677  000E5E  0E22               	movlw	low STR_1
   678  000E60  6E27               	movwf	lcdString@msg^0,c
   679  000E62  0E06               	movlw	high STR_1
   680  000E64  6E28               	movwf	(lcdString@msg+1)^0,c
   681  000E66  ECBE  F00B         	call	_lcdString	;wreg free
   682  000E6A                     
   683                           ;main.c: 135:         lcdNumber(vel);
   684  000E6A  C007  F027         	movff	_vel,lcdNumber@value
   685  000E6E  C008  F028         	movff	_vel+1,lcdNumber@value+1
   686  000E72  ECCE  F00A         	call	_lcdNumber	;wreg free
   687  000E76                     
   688                           ;main.c: 136:         lcdString(" T:");
   689  000E76  0E1B               	movlw	low STR_2
   690  000E78  6E27               	movwf	lcdString@msg^0,c
   691  000E7A  0E06               	movlw	high STR_2
   692  000E7C  6E28               	movwf	(lcdString@msg+1)^0,c
   693  000E7E  ECBE  F00B         	call	_lcdString	;wreg free
   694                           
   695                           ;main.c: 137:         lcdNumber(tempo);
   696  000E82  C00B  F027         	movff	_tempo,lcdNumber@value
   697  000E86  C00C  F028         	movff	_tempo+1,lcdNumber@value+1
   698  000E8A  ECCE  F00A         	call	_lcdNumber	;wreg free
   699                           
   700                           ;main.c: 139:         lcdCommand(0xC0);
   701  000E8E  0EC0               	movlw	192
   702  000E90  ECCD  F00C         	call	_lcdCommand
   703  000E94                     
   704                           ;main.c: 140:         lcdString("H:");
   705  000E94  0E1F               	movlw	low STR_3
   706  000E96  6E27               	movwf	lcdString@msg^0,c
   707  000E98  0E06               	movlw	high STR_3
   708  000E9A  6E28               	movwf	(lcdString@msg+1)^0,c
   709  000E9C  ECBE  F00B         	call	_lcdString	;wreg free
   710  000EA0                     
   711                           ;main.c: 141:         lcdNumber(alt);
   712  000EA0  C009  F027         	movff	_alt,lcdNumber@value
   713  000EA4  C00A  F028         	movff	_alt+1,lcdNumber@value+1
   714  000EA8  ECCE  F00A         	call	_lcdNumber	;wreg free
   715  000EAC                     
   716                           ;main.c: 143:         v0 = estado;
   717  000EAC  C017  F018         	movff	_estado,_v0
   718  000EB0                     
   719                           ;main.c: 144:         ssdDigit(x, 0);
   720  000EB0  0E00               	movlw	0
   721  000EB2  6E19               	movwf	ssdDigit@pos^0,c
   722  000EB4  502F               	movf	main@x^0,w,c
   723  000EB6  EC67  F00B         	call	_ssdDigit
   724  000EBA                     
   725                           ;main.c: 145:         ssdDigit(x, 1);
   726  000EBA  0E01               	movlw	1
   727  000EBC  6E19               	movwf	ssdDigit@pos^0,c
   728  000EBE  502F               	movf	main@x^0,w,c
   729  000EC0  EC67  F00B         	call	_ssdDigit
   730  000EC4                     
   731                           ;main.c: 146:         ssdDigit(x, 2);
   732  000EC4  0E02               	movlw	2
   733  000EC6  6E19               	movwf	ssdDigit@pos^0,c
   734  000EC8  502F               	movf	main@x^0,w,c
   735  000ECA  EC67  F00B         	call	_ssdDigit
   736  000ECE                     
   737                           ;main.c: 147:         ssdDigit(v0, 3);
   738  000ECE  0E03               	movlw	3
   739  000ED0  6E19               	movwf	ssdDigit@pos^0,c
   740  000ED2  5018               	movf	_v0^0,w,c
   741  000ED4  EC67  F00B         	call	_ssdDigit
   742                           
   743                           ;main.c: 148:         ssdUpdate();
   744  000ED8  EC78  F007         	call	_ssdUpdate	;wreg free
   745  000EDC                     
   746                           ;main.c: 149:         atraso_ms(100);
   747  000EDC  0E00               	movlw	0
   748  000EDE  6E1A               	movwf	(atraso_ms@num+1)^0,c
   749  000EE0  0E64               	movlw	100
   750  000EE2  6E19               	movwf	atraso_ms@num^0,c
   751  000EE4  EC08  F00B         	call	_atraso_ms	;wreg free
   752                           
   753                           ;main.c: 150:     }
   754  000EE8  EFE2  F006         	goto	l2479
   755  000EEC  EF00  F000         	goto	start
   756  000EF0                     __end_of_main:
   757                           	callstack 0
   758                           
   759 ;; *************** function _timerInit *****************
   760 ;; Defined at:
   761 ;;		line 55 in file "timer.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, status,2, status,0
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   775 ;;      Params:         0       0       0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0       0       0
   778 ;;      Totals:         0       0       0       0       0       0       0
   779 ;;Total ram usage:        0 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_main
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text1
   789  0019D8                     __ptext1:
   790                           	callstack 0
   791  0019D8                     _timerInit:
   792                           	callstack 30
   793  0019D8                     
   794                           ;timer.c: 57:  T0CON = 0b00001000;
   795  0019D8  0E08               	movlw	8
   796  0019DA  6ED5               	movwf	213,c	;volatile
   797  0019DC                     
   798                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
   799  0019DC  8ED5               	bsf	213,7,c	;volatile
   800  0019DE  0012               	return		;funcret
   801  0019E0                     __end_of_timerInit:
   802                           	callstack 0
   803                           
   804 ;; *************** function _ssdUpdate *****************
   805 ;; Defined at:
   806 ;;		line 50 in file "ssd.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   820 ;;      Params:         0       0       0       0       0       0       0
   821 ;;      Locals:         0       0       0       0       0       0       0
   822 ;;      Temps:          2       0       0       0       0       0       0
   823 ;;      Totals:         2       0       0       0       0       0       0
   824 ;;Total ram usage:        2 bytes
   825 ;; Hardware stack levels used: 1
   826 ;; Hardware stack levels required when called: 3
   827 ;; This function calls:
   828 ;;		_digitalWrite
   829 ;;		_soWrite
   830 ;; This function is called by:
   831 ;;		_main
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text2
   836  000EF0                     __ptext2:
   837                           	callstack 0
   838  000EF0                     _ssdUpdate:
   839                           	callstack 27
   840  000EF0                     
   841                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
   842  000EF0  0E00               	movlw	0
   843  000EF2  6E1A               	movwf	(digitalWrite@pin+1)^0,c
   844  000EF4  0E18               	movlw	24
   845  000EF6  6E19               	movwf	digitalWrite@pin^0,c
   846  000EF8  0E00               	movlw	0
   847  000EFA  6E1C               	movwf	(digitalWrite@value+1)^0,c
   848  000EFC  0E00               	movlw	0
   849  000EFE  6E1B               	movwf	digitalWrite@value^0,c
   850  000F00  EC3A  F004         	call	_digitalWrite	;wreg free
   851                           
   852                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
   853  000F04  0E00               	movlw	0
   854  000F06  6E1A               	movwf	(digitalWrite@pin+1)^0,c
   855  000F08  0E19               	movlw	25
   856  000F0A  6E19               	movwf	digitalWrite@pin^0,c
   857  000F0C  0E00               	movlw	0
   858  000F0E  6E1C               	movwf	(digitalWrite@value+1)^0,c
   859  000F10  0E00               	movlw	0
   860  000F12  6E1B               	movwf	digitalWrite@value^0,c
   861  000F14  EC3A  F004         	call	_digitalWrite	;wreg free
   862                           
   863                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
   864  000F18  0E00               	movlw	0
   865  000F1A  6E1A               	movwf	(digitalWrite@pin+1)^0,c
   866  000F1C  0E1A               	movlw	26
   867  000F1E  6E19               	movwf	digitalWrite@pin^0,c
   868  000F20  0E00               	movlw	0
   869  000F22  6E1C               	movwf	(digitalWrite@value+1)^0,c
   870  000F24  0E00               	movlw	0
   871  000F26  6E1B               	movwf	digitalWrite@value^0,c
   872  000F28  EC3A  F004         	call	_digitalWrite	;wreg free
   873                           
   874                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
   875  000F2C  0E00               	movlw	0
   876  000F2E  6E1A               	movwf	(digitalWrite@pin+1)^0,c
   877  000F30  0E1B               	movlw	27
   878  000F32  6E19               	movwf	digitalWrite@pin^0,c
   879  000F34  0E00               	movlw	0
   880  000F36  6E1C               	movwf	(digitalWrite@value+1)^0,c
   881  000F38  0E00               	movlw	0
   882  000F3A  6E1B               	movwf	digitalWrite@value^0,c
   883  000F3C  EC3A  F004         	call	_digitalWrite	;wreg free
   884                           
   885                           ;ssd.c: 60:     soWrite(0x00);
   886  000F40  0E00               	movlw	0
   887  000F42  6E20               	movwf	(soWrite@value+1)^0,c
   888  000F44  0E00               	movlw	0
   889  000F46  6E1F               	movwf	soWrite@value^0,c
   890  000F48  ECE9  F00B         	call	_soWrite	;wreg free
   891                           
   892                           ;ssd.c: 62:     switch (display)
   893  000F4C  EF10  F008         	goto	l2339
   894  000F50                     l2311:
   895                           
   896                           ;ssd.c: 65:             soWrite(valor[v0]);
   897  000F50  0E01               	movlw	low _valor
   898  000F52  2412               	addwf	_v0@ssd$F459^0,w,c
   899  000F54  6EF6               	movwf	tblptrl,c
   900  000F56  6AF7               	clrf	tblptrh,c
   901  000F58  0E06               	movlw	high _valor
   902  000F5A  22F7               	addwfc	tblptrh,f,c
   903  000F5C                     	if	0	;There are less than 3 active tblptr bytes
   904  000F5C                     	endif
   905  000F5C  0008               	tblrd		*
   906  000F5E  50F5               	movf	tablat,w,c
   907  000F60  6E1F               	movwf	soWrite@value^0,c
   908  000F62  6A20               	clrf	(soWrite@value+1)^0,c
   909  000F64  ECE9  F00B         	call	_soWrite	;wreg free
   910  000F68                     
   911                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
   912  000F68  0E00               	movlw	0
   913  000F6A  6E1A               	movwf	(digitalWrite@pin+1)^0,c
   914  000F6C  0E18               	movlw	24
   915  000F6E  6E19               	movwf	digitalWrite@pin^0,c
   916  000F70  0E00               	movlw	0
   917  000F72  6E1C               	movwf	(digitalWrite@value+1)^0,c
   918  000F74  0E01               	movlw	1
   919  000F76  6E1B               	movwf	digitalWrite@value^0,c
   920  000F78  EC3A  F004         	call	_digitalWrite	;wreg free
   921  000F7C                     
   922                           ;ssd.c: 67:             display = 1;
   923  000F7C  0E01               	movlw	1
   924  000F7E  6E13               	movwf	_display^0,c
   925                           
   926                           ;ssd.c: 68:             break;
   927  000F80  EF2D  F008         	goto	l400
   928  000F84                     l2317:
   929                           
   930                           ;ssd.c: 71:             soWrite(valor[v1]);
   931  000F84  0E01               	movlw	low _valor
   932  000F86  2411               	addwf	_v1^0,w,c
   933  000F88  6EF6               	movwf	tblptrl,c
   934  000F8A  6AF7               	clrf	tblptrh,c
   935  000F8C  0E06               	movlw	high _valor
   936  000F8E  22F7               	addwfc	tblptrh,f,c
   937  000F90                     	if	0	;There are less than 3 active tblptr bytes
   938  000F90                     	endif
   939  000F90  0008               	tblrd		*
   940  000F92  50F5               	movf	tablat,w,c
   941  000F94  6E1F               	movwf	soWrite@value^0,c
   942  000F96  6A20               	clrf	(soWrite@value+1)^0,c
   943  000F98  ECE9  F00B         	call	_soWrite	;wreg free
   944  000F9C                     
   945                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
   946  000F9C  0E00               	movlw	0
   947  000F9E  6E1A               	movwf	(digitalWrite@pin+1)^0,c
   948  000FA0  0E19               	movlw	25
   949  000FA2  6E19               	movwf	digitalWrite@pin^0,c
   950  000FA4  0E00               	movlw	0
   951  000FA6  6E1C               	movwf	(digitalWrite@value+1)^0,c
   952  000FA8  0E01               	movlw	1
   953  000FAA  6E1B               	movwf	digitalWrite@value^0,c
   954  000FAC  EC3A  F004         	call	_digitalWrite	;wreg free
   955  000FB0                     
   956                           ;ssd.c: 73:             display = 2;
   957  000FB0  0E02               	movlw	2
   958  000FB2  6E13               	movwf	_display^0,c
   959                           
   960                           ;ssd.c: 74:             break;
   961  000FB4  EF2D  F008         	goto	l400
   962  000FB8                     l2323:
   963                           
   964                           ;ssd.c: 77:             soWrite(valor[v2]);
   965  000FB8  0E01               	movlw	low _valor
   966  000FBA  2410               	addwf	_v2^0,w,c
   967  000FBC  6EF6               	movwf	tblptrl,c
   968  000FBE  6AF7               	clrf	tblptrh,c
   969  000FC0  0E06               	movlw	high _valor
   970  000FC2  22F7               	addwfc	tblptrh,f,c
   971  000FC4                     	if	0	;There are less than 3 active tblptr bytes
   972  000FC4                     	endif
   973  000FC4  0008               	tblrd		*
   974  000FC6  50F5               	movf	tablat,w,c
   975  000FC8  6E1F               	movwf	soWrite@value^0,c
   976  000FCA  6A20               	clrf	(soWrite@value+1)^0,c
   977  000FCC  ECE9  F00B         	call	_soWrite	;wreg free
   978  000FD0                     
   979                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
   980  000FD0  0E00               	movlw	0
   981  000FD2  6E1A               	movwf	(digitalWrite@pin+1)^0,c
   982  000FD4  0E1A               	movlw	26
   983  000FD6  6E19               	movwf	digitalWrite@pin^0,c
   984  000FD8  0E00               	movlw	0
   985  000FDA  6E1C               	movwf	(digitalWrite@value+1)^0,c
   986  000FDC  0E01               	movlw	1
   987  000FDE  6E1B               	movwf	digitalWrite@value^0,c
   988  000FE0  EC3A  F004         	call	_digitalWrite	;wreg free
   989  000FE4                     
   990                           ;ssd.c: 79:             display = 3;
   991  000FE4  0E03               	movlw	3
   992  000FE6  6E13               	movwf	_display^0,c
   993                           
   994                           ;ssd.c: 80:             break;
   995  000FE8  EF2D  F008         	goto	l400
   996  000FEC                     l2329:
   997                           
   998                           ;ssd.c: 83:             soWrite(valor[v3]);
   999  000FEC  0E01               	movlw	low _valor
  1000  000FEE  240F               	addwf	_v3^0,w,c
  1001  000FF0  6EF6               	movwf	tblptrl,c
  1002  000FF2  6AF7               	clrf	tblptrh,c
  1003  000FF4  0E06               	movlw	high _valor
  1004  000FF6  22F7               	addwfc	tblptrh,f,c
  1005  000FF8                     	if	0	;There are less than 3 active tblptr bytes
  1006  000FF8                     	endif
  1007  000FF8  0008               	tblrd		*
  1008  000FFA  50F5               	movf	tablat,w,c
  1009  000FFC  6E1F               	movwf	soWrite@value^0,c
  1010  000FFE  6A20               	clrf	(soWrite@value+1)^0,c
  1011  001000  ECE9  F00B         	call	_soWrite	;wreg free
  1012  001004                     
  1013                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  1014  001004  0E00               	movlw	0
  1015  001006  6E1A               	movwf	(digitalWrite@pin+1)^0,c
  1016  001008  0E1B               	movlw	27
  1017  00100A  6E19               	movwf	digitalWrite@pin^0,c
  1018  00100C  0E00               	movlw	0
  1019  00100E  6E1C               	movwf	(digitalWrite@value+1)^0,c
  1020  001010  0E01               	movlw	1
  1021  001012  6E1B               	movwf	digitalWrite@value^0,c
  1022  001014  EC3A  F004         	call	_digitalWrite	;wreg free
  1023  001018                     l2333:
  1024                           
  1025                           ;ssd.c: 85:             display = 0;
  1026  001018  0E00               	movlw	0
  1027  00101A  6E13               	movwf	_display^0,c
  1028                           
  1029                           ;ssd.c: 86:             break;
  1030  00101C  EF2D  F008         	goto	l400
  1031  001020                     l2339:
  1032  001020  5013               	movf	_display^0,w,c
  1033  001022  6E22               	movwf	??_ssdUpdate^0,c
  1034  001024  6A23               	clrf	(??_ssdUpdate+1)^0,c
  1035                           
  1036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1037                           ; Switch size 1, requested type "simple"
  1038                           ; Number of cases is 1, Range of values is 0 to 0
  1039                           ; switch strategies available:
  1040                           ; Name         Instructions Cycles
  1041                           ; simple_byte            4     3 (average)
  1042                           ;	Chosen strategy is simple_byte
  1043  001026  5023               	movf	(??_ssdUpdate+1)^0,w,c
  1044  001028  0A00               	xorlw	0	; case 0
  1045  00102A  B4D8               	btfsc	status,2,c
  1046  00102C  EF1A  F008         	goto	l2619
  1047  001030  EF0C  F008         	goto	l2333
  1048  001034                     l2619:
  1049                           
  1050                           ; Switch size 1, requested type "simple"
  1051                           ; Number of cases is 4, Range of values is 0 to 3
  1052                           ; switch strategies available:
  1053                           ; Name         Instructions Cycles
  1054                           ; simple_byte           13     7 (average)
  1055                           ;	Chosen strategy is simple_byte
  1056  001034  5022               	movf	??_ssdUpdate^0,w,c
  1057  001036  0A00               	xorlw	0	; case 0
  1058  001038  B4D8               	btfsc	status,2,c
  1059  00103A  EFA8  F007         	goto	l2311
  1060  00103E  0A01               	xorlw	1	; case 1
  1061  001040  B4D8               	btfsc	status,2,c
  1062  001042  EFC2  F007         	goto	l2317
  1063  001046  0A03               	xorlw	3	; case 2
  1064  001048  B4D8               	btfsc	status,2,c
  1065  00104A  EFDC  F007         	goto	l2323
  1066  00104E  0A01               	xorlw	1	; case 3
  1067  001050  B4D8               	btfsc	status,2,c
  1068  001052  EFF6  F007         	goto	l2329
  1069  001056  EF0C  F008         	goto	l2333
  1070  00105A                     l400:
  1071  00105A  0012               	return		;funcret
  1072  00105C                     __end_of_ssdUpdate:
  1073                           	callstack 0
  1074                           
  1075 ;; *************** function _ssdInit *****************
  1076 ;; Defined at:
  1077 ;;		line 94 in file "ssd.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1091 ;;      Params:         0       0       0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0
  1094 ;;      Totals:         0       0       0       0       0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; Hardware stack levels required when called: 2
  1098 ;; This function calls:
  1099 ;;		_pinMode
  1100 ;;		_soInit
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text3
  1107  001726                     __ptext3:
  1108                           	callstack 0
  1109  001726                     _ssdInit:
  1110                           	callstack 28
  1111  001726                     
  1112                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1113  001726  0E00               	movlw	0
  1114  001728  6E1A               	movwf	(pinMode@pin+1)^0,c
  1115  00172A  0E18               	movlw	24
  1116  00172C  6E19               	movwf	pinMode@pin^0,c
  1117  00172E  0E00               	movlw	0
  1118  001730  6E1C               	movwf	(pinMode@type+1)^0,c
  1119  001732  0E00               	movlw	0
  1120  001734  6E1B               	movwf	pinMode@type^0,c
  1121  001736  EC13  F003         	call	_pinMode	;wreg free
  1122                           
  1123                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1124  00173A  0E00               	movlw	0
  1125  00173C  6E1A               	movwf	(pinMode@pin+1)^0,c
  1126  00173E  0E19               	movlw	25
  1127  001740  6E19               	movwf	pinMode@pin^0,c
  1128  001742  0E00               	movlw	0
  1129  001744  6E1C               	movwf	(pinMode@type+1)^0,c
  1130  001746  0E00               	movlw	0
  1131  001748  6E1B               	movwf	pinMode@type^0,c
  1132  00174A  EC13  F003         	call	_pinMode	;wreg free
  1133                           
  1134                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1135  00174E  0E00               	movlw	0
  1136  001750  6E1A               	movwf	(pinMode@pin+1)^0,c
  1137  001752  0E1A               	movlw	26
  1138  001754  6E19               	movwf	pinMode@pin^0,c
  1139  001756  0E00               	movlw	0
  1140  001758  6E1C               	movwf	(pinMode@type+1)^0,c
  1141  00175A  0E00               	movlw	0
  1142  00175C  6E1B               	movwf	pinMode@type^0,c
  1143  00175E  EC13  F003         	call	_pinMode	;wreg free
  1144                           
  1145                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1146  001762  0E00               	movlw	0
  1147  001764  6E1A               	movwf	(pinMode@pin+1)^0,c
  1148  001766  0E1B               	movlw	27
  1149  001768  6E19               	movwf	pinMode@pin^0,c
  1150  00176A  0E00               	movlw	0
  1151  00176C  6E1C               	movwf	(pinMode@type+1)^0,c
  1152  00176E  0E00               	movlw	0
  1153  001770  6E1B               	movwf	pinMode@type^0,c
  1154  001772  EC13  F003         	call	_pinMode	;wreg free
  1155                           
  1156                           ;ssd.c: 102:     soInit();
  1157  001776  EC31  F00C         	call	_soInit	;wreg free
  1158  00177A  0012               	return		;funcret
  1159  00177C                     __end_of_ssdInit:
  1160                           	callstack 0
  1161                           
  1162 ;; *************** function _ssdDigit *****************
  1163 ;; Defined at:
  1164 ;;		line 34 in file "ssd.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  val             1    wreg     unsigned char 
  1167 ;;  pos             1    0[COMRAM] unsigned char 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  val             1    1[COMRAM] unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1179 ;;      Params:         1       0       0       0       0       0       0
  1180 ;;      Locals:         1       0       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0
  1182 ;;      Totals:         2       0       0       0       0       0       0
  1183 ;;Total ram usage:        2 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text4
  1193  0016CE                     __ptext4:
  1194                           	callstack 0
  1195  0016CE                     _ssdDigit:
  1196                           	callstack 30
  1197                           
  1198                           ;incstack = 0
  1199                           ;ssdDigit@val stored from wreg
  1200  0016CE  6E1A               	movwf	ssdDigit@val^0,c
  1201  0016D0                     
  1202                           ;ssd.c: 35:     if (pos == 0) {
  1203  0016D0  5019               	movf	ssdDigit@pos^0,w,c
  1204  0016D2  A4D8               	btfss	status,2,c
  1205  0016D4  EF6E  F00B         	goto	u2251
  1206  0016D8  EF70  F00B         	goto	u2250
  1207  0016DC                     u2251:
  1208  0016DC  EF72  F00B         	goto	l2297
  1209  0016E0                     u2250:
  1210  0016E0                     
  1211                           ;ssd.c: 36:         v0 = val;
  1212  0016E0  C01A  F012         	movff	ssdDigit@val,_v0@ssd$F459
  1213  0016E4                     l2297:
  1214                           
  1215                           ;ssd.c: 38:     if (pos == 1) {
  1216  0016E4  0419               	decf	ssdDigit@pos^0,w,c
  1217  0016E6  A4D8               	btfss	status,2,c
  1218  0016E8  EF78  F00B         	goto	u2261
  1219  0016EC  EF7A  F00B         	goto	u2260
  1220  0016F0                     u2261:
  1221  0016F0  EF7C  F00B         	goto	l2301
  1222  0016F4                     u2260:
  1223  0016F4                     
  1224                           ;ssd.c: 39:         v1 = val;
  1225  0016F4  C01A  F011         	movff	ssdDigit@val,_v1
  1226  0016F8                     l2301:
  1227                           
  1228                           ;ssd.c: 41:     if (pos == 2) {
  1229  0016F8  0E02               	movlw	2
  1230  0016FA  1819               	xorwf	ssdDigit@pos^0,w,c
  1231  0016FC  A4D8               	btfss	status,2,c
  1232  0016FE  EF83  F00B         	goto	u2271
  1233  001702  EF85  F00B         	goto	u2270
  1234  001706                     u2271:
  1235  001706  EF87  F00B         	goto	l2305
  1236  00170A                     u2270:
  1237  00170A                     
  1238                           ;ssd.c: 42:         v2 = val;
  1239  00170A  C01A  F010         	movff	ssdDigit@val,_v2
  1240  00170E                     l2305:
  1241                           
  1242                           ;ssd.c: 44:     if (pos == 3) {
  1243  00170E  0E03               	movlw	3
  1244  001710  1819               	xorwf	ssdDigit@pos^0,w,c
  1245  001712  A4D8               	btfss	status,2,c
  1246  001714  EF8E  F00B         	goto	u2281
  1247  001718  EF90  F00B         	goto	u2280
  1248  00171C                     u2281:
  1249  00171C  EF92  F00B         	goto	l390
  1250  001720                     u2280:
  1251  001720                     
  1252                           ;ssd.c: 45:         v3 = val;
  1253  001720  C01A  F00F         	movff	ssdDigit@val,_v3
  1254  001724                     l390:
  1255  001724  0012               	return		;funcret
  1256  001726                     __end_of_ssdDigit:
  1257                           	callstack 0
  1258                           
  1259 ;; *************** function _lcdString *****************
  1260 ;; Defined at:
  1261 ;;		line 57 in file "lcd.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  msg             2   14[COMRAM] PTR unsigned char 
  1264 ;;		 -> STR_3(3), STR_2(4), STR_1(3), 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  i               2   18[COMRAM] int 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1276 ;;      Params:         2       0       0       0       0       0       0
  1277 ;;      Locals:         2       0       0       0       0       0       0
  1278 ;;      Temps:          2       0       0       0       0       0       0
  1279 ;;      Totals:         6       0       0       0       0       0       0
  1280 ;;Total ram usage:        6 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 5
  1283 ;; This function calls:
  1284 ;;		_lcdChar
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text5
  1291  00177C                     __ptext5:
  1292                           	callstack 0
  1293  00177C                     _lcdString:
  1294                           	callstack 25
  1295  00177C                     
  1296                           ;lcd.c: 58:  int i = 0;
  1297  00177C  0E00               	movlw	0
  1298  00177E  6E2C               	movwf	(lcdString@i+1)^0,c
  1299  001780  0E00               	movlw	0
  1300  001782  6E2B               	movwf	lcdString@i^0,c
  1301                           
  1302                           ;lcd.c: 59:  while (msg[i] != 0) {
  1303  001784  EFD4  F00B         	goto	l2285
  1304  001788                     l2281:
  1305                           
  1306                           ;lcd.c: 60:   lcdChar(msg[i]);
  1307  001788  502B               	movf	lcdString@i^0,w,c
  1308  00178A  2427               	addwf	lcdString@msg^0,w,c
  1309  00178C  6E29               	movwf	??_lcdString^0,c
  1310  00178E  502C               	movf	(lcdString@i+1)^0,w,c
  1311  001790  2028               	addwfc	(lcdString@msg+1)^0,w,c
  1312  001792  6E2A               	movwf	(??_lcdString+1)^0,c
  1313  001794  C029  FFF6         	movff	??_lcdString,tblptrl
  1314  001798  C02A  FFF7         	movff	??_lcdString+1,tblptrh
  1315  00179C                     	if	0	;tblptru may be non-zero
  1316  00179C                     	endif
  1317  00179C                     	if	0	;tblptru may be non-zero
  1318  00179C                     	endif
  1319  00179C  0008               	tblrd		*
  1320  00179E  50F5               	movf	tablat,w,c
  1321  0017A0  ECBE  F00C         	call	_lcdChar
  1322  0017A4                     
  1323                           ;lcd.c: 61:   i++;
  1324  0017A4  4A2B               	infsnz	lcdString@i^0,f,c
  1325  0017A6  2A2C               	incf	(lcdString@i+1)^0,f,c
  1326  0017A8                     l2285:
  1327                           
  1328                           ;lcd.c: 59:  while (msg[i] != 0) {
  1329  0017A8  502B               	movf	lcdString@i^0,w,c
  1330  0017AA  2427               	addwf	lcdString@msg^0,w,c
  1331  0017AC  6E29               	movwf	??_lcdString^0,c
  1332  0017AE  502C               	movf	(lcdString@i+1)^0,w,c
  1333  0017B0  2028               	addwfc	(lcdString@msg+1)^0,w,c
  1334  0017B2  6E2A               	movwf	(??_lcdString+1)^0,c
  1335  0017B4  C029  FFF6         	movff	??_lcdString,tblptrl
  1336  0017B8  C02A  FFF7         	movff	??_lcdString+1,tblptrh
  1337  0017BC                     	if	0	;tblptru may be non-zero
  1338  0017BC                     	endif
  1339  0017BC                     	if	0	;tblptru may be non-zero
  1340  0017BC                     	endif
  1341  0017BC  0008               	tblrd		*
  1342  0017BE  50F5               	movf	tablat,w,c
  1343  0017C0  0900               	iorlw	0
  1344  0017C2  A4D8               	btfss	status,2,c
  1345  0017C4  EFE6  F00B         	goto	u2231
  1346  0017C8  EFE8  F00B         	goto	u2230
  1347  0017CC                     u2231:
  1348  0017CC  EFC4  F00B         	goto	l2281
  1349  0017D0                     u2230:
  1350  0017D0  0012               	return		;funcret
  1351  0017D2                     __end_of_lcdString:
  1352                           	callstack 0
  1353                           
  1354 ;; *************** function _lcdNumber *****************
  1355 ;; Defined at:
  1356 ;;		line 64 in file "lcd.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  value           2   14[COMRAM] int 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  i               2   16[COMRAM] int 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1370 ;;      Params:         2       0       0       0       0       0       0
  1371 ;;      Locals:         2       0       0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0
  1373 ;;      Totals:         4       0       0       0       0       0       0
  1374 ;;Total ram usage:        4 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 5
  1377 ;; This function calls:
  1378 ;;		___awdiv
  1379 ;;		___awmod
  1380 ;;		_lcdChar
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text6
  1387  00159C                     __ptext6:
  1388                           	callstack 0
  1389  00159C                     _lcdNumber:
  1390                           	callstack 25
  1391  00159C                     
  1392                           ;lcd.c: 65:  int i = 10000;
  1393  00159C  0E27               	movlw	39
  1394  00159E  6E2A               	movwf	(lcdNumber@i+1)^0,c
  1395  0015A0  0E10               	movlw	16
  1396  0015A2  6E29               	movwf	lcdNumber@i^0,c
  1397                           
  1398                           ;lcd.c: 66:  while (i > 0) {
  1399  0015A4  EFFA  F00A         	goto	l2291
  1400  0015A8                     l2289:
  1401                           
  1402                           ;lcd.c: 67:   lcdChar((value / i) % 10 + 48);
  1403  0015A8  C029  F01B         	movff	lcdNumber@i,___awdiv@divisor
  1404  0015AC  C02A  F01C         	movff	lcdNumber@i+1,___awdiv@divisor+1
  1405  0015B0  C027  F019         	movff	lcdNumber@value,___awdiv@dividend
  1406  0015B4  C028  F01A         	movff	lcdNumber@value+1,___awdiv@dividend+1
  1407  0015B8  EC7E  F009         	call	___awdiv	;wreg free
  1408  0015BC  C019  F021         	movff	?___awdiv,___awmod@dividend
  1409  0015C0  C01A  F022         	movff	?___awdiv+1,___awmod@dividend+1
  1410  0015C4  0E00               	movlw	0
  1411  0015C6  6E24               	movwf	(___awmod@divisor+1)^0,c
  1412  0015C8  0E0A               	movlw	10
  1413  0015CA  6E23               	movwf	___awmod@divisor^0,c
  1414  0015CC  EC3A  F00A         	call	___awmod	;wreg free
  1415  0015D0  5021               	movf	?___awmod^0,w,c
  1416  0015D2  0F30               	addlw	48
  1417  0015D4  ECBE  F00C         	call	_lcdChar
  1418                           
  1419                           ;lcd.c: 68:   i /= 10;
  1420  0015D8  C029  F019         	movff	lcdNumber@i,___awdiv@dividend
  1421  0015DC  C02A  F01A         	movff	lcdNumber@i+1,___awdiv@dividend+1
  1422  0015E0  0E00               	movlw	0
  1423  0015E2  6E1C               	movwf	(___awdiv@divisor+1)^0,c
  1424  0015E4  0E0A               	movlw	10
  1425  0015E6  6E1B               	movwf	___awdiv@divisor^0,c
  1426  0015E8  EC7E  F009         	call	___awdiv	;wreg free
  1427  0015EC  C019  F029         	movff	?___awdiv,lcdNumber@i
  1428  0015F0  C01A  F02A         	movff	?___awdiv+1,lcdNumber@i+1
  1429  0015F4                     l2291:
  1430                           
  1431                           ;lcd.c: 66:  while (i > 0) {
  1432  0015F4  BE2A               	btfsc	(lcdNumber@i+1)^0,7,c
  1433  0015F6  EF07  F00B         	goto	u2240
  1434  0015FA  502A               	movf	(lcdNumber@i+1)^0,w,c
  1435  0015FC  E106               	bnz	u2241
  1436  0015FE  0429               	decf	lcdNumber@i^0,w,c
  1437  001600  B0D8               	btfsc	status,0,c
  1438  001602  EF05  F00B         	goto	u2241
  1439  001606  EF07  F00B         	goto	u2240
  1440  00160A                     u2241:
  1441  00160A  EFD4  F00A         	goto	l2289
  1442  00160E                     u2240:
  1443  00160E  0012               	return		;funcret
  1444  001610                     __end_of_lcdNumber:
  1445                           	callstack 0
  1446                           
  1447 ;; *************** function _lcdChar *****************
  1448 ;; Defined at:
  1449 ;;		line 52 in file "lcd.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  value           1    wreg     unsigned char 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  value           1   13[COMRAM] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1463 ;;      Params:         0       0       0       0       0       0       0
  1464 ;;      Locals:         1       0       0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0
  1466 ;;      Totals:         1       0       0       0       0       0       0
  1467 ;;Total ram usage:        1 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; Hardware stack levels required when called: 4
  1470 ;; This function calls:
  1471 ;;		_delayMicro
  1472 ;;		_pushByte
  1473 ;; This function is called by:
  1474 ;;		_lcdString
  1475 ;;		_lcdNumber
  1476 ;;		_printf
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text7
  1481  00197C                     __ptext7:
  1482                           	callstack 0
  1483  00197C                     _lcdChar:
  1484                           	callstack 25
  1485                           
  1486                           ;incstack = 0
  1487                           ;lcdChar@value stored from wreg
  1488  00197C  6E26               	movwf	lcdChar@value^0,c
  1489  00197E                     
  1490                           ;lcd.c: 53:  pushByte(value, 1);
  1491  00197E  0E00               	movlw	0
  1492  001980  6E23               	movwf	(pushByte@rs+1)^0,c
  1493  001982  0E01               	movlw	1
  1494  001984  6E22               	movwf	pushByte@rs^0,c
  1495  001986  5026               	movf	lcdChar@value^0,w,c
  1496  001988  EC3A  F00B         	call	_pushByte
  1497  00198C                     
  1498                           ;lcd.c: 54:  delayMicro(80);
  1499  00198C  0E00               	movlw	0
  1500  00198E  6E1A               	movwf	(delayMicro@a+1)^0,c
  1501  001990  0E50               	movlw	80
  1502  001992  6E19               	movwf	delayMicro@a^0,c
  1503  001994  ECF0  F00C         	call	_delayMicro	;wreg free
  1504  001998  0012               	return		;funcret
  1505  00199A                     __end_of_lcdChar:
  1506                           	callstack 0
  1507                           
  1508 ;; *************** function ___awmod *****************
  1509 ;; Defined at:
  1510 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  dividend        2    8[COMRAM] int 
  1513 ;;  divisor         2   10[COMRAM] int 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  sign            1   13[COMRAM] unsigned char 
  1516 ;;  counter         1   12[COMRAM] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  2    8[COMRAM] int 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1526 ;;      Params:         4       0       0       0       0       0       0
  1527 ;;      Locals:         2       0       0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0
  1529 ;;      Totals:         6       0       0       0       0       0       0
  1530 ;;Total ram usage:        6 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_lcdNumber
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text8
  1540  001474                     __ptext8:
  1541                           	callstack 0
  1542  001474                     ___awmod:
  1543                           	callstack 29
  1544  001474  0E00               	movlw	0
  1545  001476  6E26               	movwf	___awmod@sign^0,c
  1546  001478  BE22               	btfsc	(___awmod@dividend+1)^0,7,c
  1547  00147A  EF43  F00A         	goto	u1940
  1548  00147E  EF41  F00A         	goto	u1941
  1549  001482                     u1941:
  1550  001482  EF49  F00A         	goto	l2129
  1551  001486                     u1940:
  1552  001486  6C21               	negf	___awmod@dividend^0,c
  1553  001488  1E22               	comf	(___awmod@dividend+1)^0,f,c
  1554  00148A  B0D8               	btfsc	status,0,c
  1555  00148C  2A22               	incf	(___awmod@dividend+1)^0,f,c
  1556  00148E  0E01               	movlw	1
  1557  001490  6E26               	movwf	___awmod@sign^0,c
  1558  001492                     l2129:
  1559  001492  BE24               	btfsc	(___awmod@divisor+1)^0,7,c
  1560  001494  EF50  F00A         	goto	u1950
  1561  001498  EF4E  F00A         	goto	u1951
  1562  00149C                     u1951:
  1563  00149C  EF54  F00A         	goto	l2133
  1564  0014A0                     u1950:
  1565  0014A0  6C23               	negf	___awmod@divisor^0,c
  1566  0014A2  1E24               	comf	(___awmod@divisor+1)^0,f,c
  1567  0014A4  B0D8               	btfsc	status,0,c
  1568  0014A6  2A24               	incf	(___awmod@divisor+1)^0,f,c
  1569  0014A8                     l2133:
  1570  0014A8  5023               	movf	___awmod@divisor^0,w,c
  1571  0014AA  1024               	iorwf	(___awmod@divisor+1)^0,w,c
  1572  0014AC  B4D8               	btfsc	status,2,c
  1573  0014AE  EF5B  F00A         	goto	u1961
  1574  0014B2  EF5D  F00A         	goto	u1960
  1575  0014B6                     u1961:
  1576  0014B6  EF81  F00A         	goto	l2149
  1577  0014BA                     u1960:
  1578  0014BA  0E01               	movlw	1
  1579  0014BC  6E25               	movwf	___awmod@counter^0,c
  1580  0014BE  EF65  F00A         	goto	l2139
  1581  0014C2                     l2137:
  1582  0014C2  90D8               	bcf	status,0,c
  1583  0014C4  3623               	rlcf	___awmod@divisor^0,f,c
  1584  0014C6  3624               	rlcf	(___awmod@divisor+1)^0,f,c
  1585  0014C8  2A25               	incf	___awmod@counter^0,f,c
  1586  0014CA                     l2139:
  1587  0014CA  AE24               	btfss	(___awmod@divisor+1)^0,7,c
  1588  0014CC  EF6A  F00A         	goto	u1971
  1589  0014D0  EF6C  F00A         	goto	u1970
  1590  0014D4                     u1971:
  1591  0014D4  EF61  F00A         	goto	l2137
  1592  0014D8                     u1970:
  1593  0014D8                     l2141:
  1594  0014D8  5023               	movf	___awmod@divisor^0,w,c
  1595  0014DA  5C21               	subwf	___awmod@dividend^0,w,c
  1596  0014DC  5024               	movf	(___awmod@divisor+1)^0,w,c
  1597  0014DE  5822               	subwfb	(___awmod@dividend+1)^0,w,c
  1598  0014E0  A0D8               	btfss	status,0,c
  1599  0014E2  EF75  F00A         	goto	u1981
  1600  0014E6  EF77  F00A         	goto	u1980
  1601  0014EA                     u1981:
  1602  0014EA  EF7B  F00A         	goto	l2145
  1603  0014EE                     u1980:
  1604  0014EE  5023               	movf	___awmod@divisor^0,w,c
  1605  0014F0  5E21               	subwf	___awmod@dividend^0,f,c
  1606  0014F2  5024               	movf	(___awmod@divisor+1)^0,w,c
  1607  0014F4  5A22               	subwfb	(___awmod@dividend+1)^0,f,c
  1608  0014F6                     l2145:
  1609  0014F6  90D8               	bcf	status,0,c
  1610  0014F8  3224               	rrcf	(___awmod@divisor+1)^0,f,c
  1611  0014FA  3223               	rrcf	___awmod@divisor^0,f,c
  1612  0014FC  2E25               	decfsz	___awmod@counter^0,f,c
  1613  0014FE  EF6C  F00A         	goto	l2141
  1614  001502                     l2149:
  1615  001502  5026               	movf	___awmod@sign^0,w,c
  1616  001504  B4D8               	btfsc	status,2,c
  1617  001506  EF87  F00A         	goto	u1991
  1618  00150A  EF89  F00A         	goto	u1990
  1619  00150E                     u1991:
  1620  00150E  EF8D  F00A         	goto	l2153
  1621  001512                     u1990:
  1622  001512  6C21               	negf	___awmod@dividend^0,c
  1623  001514  1E22               	comf	(___awmod@dividend+1)^0,f,c
  1624  001516  B0D8               	btfsc	status,0,c
  1625  001518  2A22               	incf	(___awmod@dividend+1)^0,f,c
  1626  00151A                     l2153:
  1627  00151A  C021  F021         	movff	___awmod@dividend,?___awmod
  1628  00151E  C022  F022         	movff	___awmod@dividend+1,?___awmod+1
  1629  001522  0012               	return		;funcret
  1630  001524                     __end_of___awmod:
  1631                           	callstack 0
  1632                           
  1633 ;; *************** function ___awdiv *****************
  1634 ;; Defined at:
  1635 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  dividend        2    0[COMRAM] int 
  1638 ;;  divisor         2    2[COMRAM] int 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  quotient        2    6[COMRAM] int 
  1641 ;;  sign            1    5[COMRAM] unsigned char 
  1642 ;;  counter         1    4[COMRAM] unsigned char 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  2    0[COMRAM] int 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, status,0
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1652 ;;      Params:         4       0       0       0       0       0       0
  1653 ;;      Locals:         4       0       0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0
  1655 ;;      Totals:         8       0       0       0       0       0       0
  1656 ;;Total ram usage:        8 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		_lcdNumber
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text9
  1666  0012FC                     __ptext9:
  1667                           	callstack 0
  1668  0012FC                     ___awdiv:
  1669                           	callstack 29
  1670  0012FC  0E00               	movlw	0
  1671  0012FE  6E1E               	movwf	___awdiv@sign^0,c
  1672  001300  BE1C               	btfsc	(___awdiv@divisor+1)^0,7,c
  1673  001302  EF87  F009         	goto	u1880
  1674  001306  EF85  F009         	goto	u1881
  1675  00130A                     u1881:
  1676  00130A  EF8D  F009         	goto	l2085
  1677  00130E                     u1880:
  1678  00130E  6C1B               	negf	___awdiv@divisor^0,c
  1679  001310  1E1C               	comf	(___awdiv@divisor+1)^0,f,c
  1680  001312  B0D8               	btfsc	status,0,c
  1681  001314  2A1C               	incf	(___awdiv@divisor+1)^0,f,c
  1682  001316  0E01               	movlw	1
  1683  001318  6E1E               	movwf	___awdiv@sign^0,c
  1684  00131A                     l2085:
  1685  00131A  BE1A               	btfsc	(___awdiv@dividend+1)^0,7,c
  1686  00131C  EF94  F009         	goto	u1890
  1687  001320  EF92  F009         	goto	u1891
  1688  001324                     u1891:
  1689  001324  EF9A  F009         	goto	l2091
  1690  001328                     u1890:
  1691  001328  6C19               	negf	___awdiv@dividend^0,c
  1692  00132A  1E1A               	comf	(___awdiv@dividend+1)^0,f,c
  1693  00132C  B0D8               	btfsc	status,0,c
  1694  00132E  2A1A               	incf	(___awdiv@dividend+1)^0,f,c
  1695  001330  0E01               	movlw	1
  1696  001332  1A1E               	xorwf	___awdiv@sign^0,f,c
  1697  001334                     l2091:
  1698  001334  0E00               	movlw	0
  1699  001336  6E20               	movwf	(___awdiv@quotient+1)^0,c
  1700  001338  0E00               	movlw	0
  1701  00133A  6E1F               	movwf	___awdiv@quotient^0,c
  1702  00133C  501B               	movf	___awdiv@divisor^0,w,c
  1703  00133E  101C               	iorwf	(___awdiv@divisor+1)^0,w,c
  1704  001340  B4D8               	btfsc	status,2,c
  1705  001342  EFA5  F009         	goto	u1901
  1706  001346  EFA7  F009         	goto	u1900
  1707  00134A                     u1901:
  1708  00134A  EFCF  F009         	goto	l2113
  1709  00134E                     u1900:
  1710  00134E  0E01               	movlw	1
  1711  001350  6E1D               	movwf	___awdiv@counter^0,c
  1712  001352  EFAF  F009         	goto	l2099
  1713  001356                     l2097:
  1714  001356  90D8               	bcf	status,0,c
  1715  001358  361B               	rlcf	___awdiv@divisor^0,f,c
  1716  00135A  361C               	rlcf	(___awdiv@divisor+1)^0,f,c
  1717  00135C  2A1D               	incf	___awdiv@counter^0,f,c
  1718  00135E                     l2099:
  1719  00135E  AE1C               	btfss	(___awdiv@divisor+1)^0,7,c
  1720  001360  EFB4  F009         	goto	u1911
  1721  001364  EFB6  F009         	goto	u1910
  1722  001368                     u1911:
  1723  001368  EFAB  F009         	goto	l2097
  1724  00136C                     u1910:
  1725  00136C                     l2101:
  1726  00136C  90D8               	bcf	status,0,c
  1727  00136E  361F               	rlcf	___awdiv@quotient^0,f,c
  1728  001370  3620               	rlcf	(___awdiv@quotient+1)^0,f,c
  1729  001372  501B               	movf	___awdiv@divisor^0,w,c
  1730  001374  5C19               	subwf	___awdiv@dividend^0,w,c
  1731  001376  501C               	movf	(___awdiv@divisor+1)^0,w,c
  1732  001378  581A               	subwfb	(___awdiv@dividend+1)^0,w,c
  1733  00137A  A0D8               	btfss	status,0,c
  1734  00137C  EFC2  F009         	goto	u1921
  1735  001380  EFC4  F009         	goto	u1920
  1736  001384                     u1921:
  1737  001384  EFC9  F009         	goto	l2109
  1738  001388                     u1920:
  1739  001388  501B               	movf	___awdiv@divisor^0,w,c
  1740  00138A  5E19               	subwf	___awdiv@dividend^0,f,c
  1741  00138C  501C               	movf	(___awdiv@divisor+1)^0,w,c
  1742  00138E  5A1A               	subwfb	(___awdiv@dividend+1)^0,f,c
  1743  001390  801F               	bsf	___awdiv@quotient^0,0,c
  1744  001392                     l2109:
  1745  001392  90D8               	bcf	status,0,c
  1746  001394  321C               	rrcf	(___awdiv@divisor+1)^0,f,c
  1747  001396  321B               	rrcf	___awdiv@divisor^0,f,c
  1748  001398  2E1D               	decfsz	___awdiv@counter^0,f,c
  1749  00139A  EFB6  F009         	goto	l2101
  1750  00139E                     l2113:
  1751  00139E  501E               	movf	___awdiv@sign^0,w,c
  1752  0013A0  B4D8               	btfsc	status,2,c
  1753  0013A2  EFD5  F009         	goto	u1931
  1754  0013A6  EFD7  F009         	goto	u1930
  1755  0013AA                     u1931:
  1756  0013AA  EFDB  F009         	goto	l2117
  1757  0013AE                     u1930:
  1758  0013AE  6C1F               	negf	___awdiv@quotient^0,c
  1759  0013B0  1E20               	comf	(___awdiv@quotient+1)^0,f,c
  1760  0013B2  B0D8               	btfsc	status,0,c
  1761  0013B4  2A20               	incf	(___awdiv@quotient+1)^0,f,c
  1762  0013B6                     l2117:
  1763  0013B6  C01F  F019         	movff	___awdiv@quotient,?___awdiv
  1764  0013BA  C020  F01A         	movff	___awdiv@quotient+1,?___awdiv+1
  1765  0013BE  0012               	return		;funcret
  1766  0013C0                     __end_of___awdiv:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _lcdInit *****************
  1770 ;; Defined at:
  1771 ;;		line 72 in file "lcd.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1785 ;;      Params:         0       0       0       0       0       0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0
  1788 ;;      Totals:         0       0       0       0       0       0       0
  1789 ;;Total ram usage:        0 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 5
  1792 ;; This function calls:
  1793 ;;		_delayMicro
  1794 ;;		_delayMili
  1795 ;;		_lcdCommand
  1796 ;;		_pinMode
  1797 ;;		_pushNibble
  1798 ;;		_soInit
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text10
  1805  0013C0                     __ptext10:
  1806                           	callstack 0
  1807  0013C0                     _lcdInit:
  1808                           	callstack 25
  1809  0013C0                     
  1810                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  1811  0013C0  0E00               	movlw	0
  1812  0013C2  6E1A               	movwf	(pinMode@pin+1)^0,c
  1813  0013C4  0E1C               	movlw	28
  1814  0013C6  6E19               	movwf	pinMode@pin^0,c
  1815  0013C8  0E00               	movlw	0
  1816  0013CA  6E1C               	movwf	(pinMode@type+1)^0,c
  1817  0013CC  0E00               	movlw	0
  1818  0013CE  6E1B               	movwf	pinMode@type^0,c
  1819  0013D0  EC13  F003         	call	_pinMode	;wreg free
  1820                           
  1821                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  1822  0013D4  0E00               	movlw	0
  1823  0013D6  6E1A               	movwf	(pinMode@pin+1)^0,c
  1824  0013D8  0E1D               	movlw	29
  1825  0013DA  6E19               	movwf	pinMode@pin^0,c
  1826  0013DC  0E00               	movlw	0
  1827  0013DE  6E1C               	movwf	(pinMode@type+1)^0,c
  1828  0013E0  0E00               	movlw	0
  1829  0013E2  6E1B               	movwf	pinMode@type^0,c
  1830  0013E4  EC13  F003         	call	_pinMode	;wreg free
  1831                           
  1832                           ;lcd.c: 75:  soInit();
  1833  0013E8  EC31  F00C         	call	_soInit	;wreg free
  1834                           
  1835                           ;lcd.c: 76:  delayMili(15);
  1836  0013EC  0E00               	movlw	0
  1837  0013EE  6E1A               	movwf	(delayMili@a+1)^0,c
  1838  0013F0  0E0F               	movlw	15
  1839  0013F2  6E19               	movwf	delayMili@a^0,c
  1840  0013F4  EC69  F00C         	call	_delayMili	;wreg free
  1841                           
  1842                           ;lcd.c: 78:  pushNibble(0x03, 0);
  1843  0013F8  0E00               	movlw	0
  1844  0013FA  6E23               	movwf	(pushNibble@rs+1)^0,c
  1845  0013FC  0E00               	movlw	0
  1846  0013FE  6E22               	movwf	pushNibble@rs^0,c
  1847  001400  0E03               	movlw	3
  1848  001402  ECAB  F00C         	call	_pushNibble
  1849                           
  1850                           ;lcd.c: 79:  delayMili(5);
  1851  001406  0E00               	movlw	0
  1852  001408  6E1A               	movwf	(delayMili@a+1)^0,c
  1853  00140A  0E05               	movlw	5
  1854  00140C  6E19               	movwf	delayMili@a^0,c
  1855  00140E  EC69  F00C         	call	_delayMili	;wreg free
  1856                           
  1857                           ;lcd.c: 80:  pushNibble(0x03, 0);
  1858  001412  0E00               	movlw	0
  1859  001414  6E23               	movwf	(pushNibble@rs+1)^0,c
  1860  001416  0E00               	movlw	0
  1861  001418  6E22               	movwf	pushNibble@rs^0,c
  1862  00141A  0E03               	movlw	3
  1863  00141C  ECAB  F00C         	call	_pushNibble
  1864  001420                     
  1865                           ;lcd.c: 81:  delayMicro(160);
  1866  001420  0E00               	movlw	0
  1867  001422  6E1A               	movwf	(delayMicro@a+1)^0,c
  1868  001424  0EA0               	movlw	160
  1869  001426  6E19               	movwf	delayMicro@a^0,c
  1870  001428  ECF0  F00C         	call	_delayMicro	;wreg free
  1871  00142C                     
  1872                           ;lcd.c: 82:  pushNibble(0x03, 0);
  1873  00142C  0E00               	movlw	0
  1874  00142E  6E23               	movwf	(pushNibble@rs+1)^0,c
  1875  001430  0E00               	movlw	0
  1876  001432  6E22               	movwf	pushNibble@rs^0,c
  1877  001434  0E03               	movlw	3
  1878  001436  ECAB  F00C         	call	_pushNibble
  1879                           
  1880                           ;lcd.c: 83:  delayMicro(160);
  1881  00143A  0E00               	movlw	0
  1882  00143C  6E1A               	movwf	(delayMicro@a+1)^0,c
  1883  00143E  0EA0               	movlw	160
  1884  001440  6E19               	movwf	delayMicro@a^0,c
  1885  001442  ECF0  F00C         	call	_delayMicro	;wreg free
  1886  001446                     
  1887                           ;lcd.c: 85:  pushNibble(0x02, 0);
  1888  001446  0E00               	movlw	0
  1889  001448  6E23               	movwf	(pushNibble@rs+1)^0,c
  1890  00144A  0E00               	movlw	0
  1891  00144C  6E22               	movwf	pushNibble@rs^0,c
  1892  00144E  0E02               	movlw	2
  1893  001450  ECAB  F00C         	call	_pushNibble
  1894  001454                     
  1895                           ;lcd.c: 86:  delayMili(10);
  1896  001454  0E00               	movlw	0
  1897  001456  6E1A               	movwf	(delayMili@a+1)^0,c
  1898  001458  0E0A               	movlw	10
  1899  00145A  6E19               	movwf	delayMili@a^0,c
  1900  00145C  EC69  F00C         	call	_delayMili	;wreg free
  1901  001460                     
  1902                           ;lcd.c: 88:  lcdCommand(0x28);
  1903  001460  0E28               	movlw	40
  1904  001462  ECCD  F00C         	call	_lcdCommand
  1905  001466                     
  1906                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  1907  001466  0E0C               	movlw	12
  1908  001468  ECCD  F00C         	call	_lcdCommand
  1909  00146C                     
  1910                           ;lcd.c: 90:  lcdCommand(0x01);
  1911  00146C  0E01               	movlw	1
  1912  00146E  ECCD  F00C         	call	_lcdCommand
  1913  001472  0012               	return		;funcret
  1914  001474                     __end_of_lcdInit:
  1915                           	callstack 0
  1916                           
  1917 ;; *************** function _pushNibble *****************
  1918 ;; Defined at:
  1919 ;;		line 25 in file "lcd.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  value           1    wreg     unsigned char 
  1922 ;;  rs              2    9[COMRAM] int 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  value           1   11[COMRAM] unsigned char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1934 ;;      Params:         2       0       0       0       0       0       0
  1935 ;;      Locals:         1       0       0       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0
  1937 ;;      Totals:         3       0       0       0       0       0       0
  1938 ;;Total ram usage:        3 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 3
  1941 ;; This function calls:
  1942 ;;		_digitalWrite
  1943 ;;		_pulseEnablePin
  1944 ;;		_soWrite
  1945 ;; This function is called by:
  1946 ;;		_lcdInit
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text11
  1951  001956                     __ptext11:
  1952                           	callstack 0
  1953  001956                     _pushNibble:
  1954                           	callstack 26
  1955                           
  1956                           ;incstack = 0
  1957                           ;pushNibble@value stored from wreg
  1958  001956  6E24               	movwf	pushNibble@value^0,c
  1959  001958                     
  1960                           ;lcd.c: 26:  soWrite(value);
  1961  001958  C024  F01F         	movff	pushNibble@value,soWrite@value
  1962  00195C  6A20               	clrf	(soWrite@value+1)^0,c
  1963  00195E  ECE9  F00B         	call	_soWrite	;wreg free
  1964                           
  1965                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  1966  001962  0E00               	movlw	0
  1967  001964  6E1A               	movwf	(digitalWrite@pin+1)^0,c
  1968  001966  0E1D               	movlw	29
  1969  001968  6E19               	movwf	digitalWrite@pin^0,c
  1970  00196A  C022  F01B         	movff	pushNibble@rs,digitalWrite@value
  1971  00196E  C023  F01C         	movff	pushNibble@rs+1,digitalWrite@value+1
  1972  001972  EC3A  F004         	call	_digitalWrite	;wreg free
  1973                           
  1974                           ;lcd.c: 28:  pulseEnablePin();
  1975  001976  EC10  F00C         	call	_pulseEnablePin	;wreg free
  1976  00197A  0012               	return		;funcret
  1977  00197C                     __end_of_pushNibble:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _lcdCommand *****************
  1981 ;; Defined at:
  1982 ;;		line 40 in file "lcd.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  value           1    wreg     unsigned char 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  value           1   13[COMRAM] unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0, cstack
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1996 ;;      Params:         0       0       0       0       0       0       0
  1997 ;;      Locals:         1       0       0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0
  1999 ;;      Totals:         1       0       0       0       0       0       0
  2000 ;;Total ram usage:        1 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 4
  2003 ;; This function calls:
  2004 ;;		_delayMili
  2005 ;;		_pushByte
  2006 ;; This function is called by:
  2007 ;;		_main
  2008 ;;		_lcdInit
  2009 ;;		_lcdPosition
  2010 ;;		_printf
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text12
  2015  00199A                     __ptext12:
  2016                           	callstack 0
  2017  00199A                     _lcdCommand:
  2018                           	callstack 25
  2019                           
  2020                           ;incstack = 0
  2021                           ;lcdCommand@value stored from wreg
  2022  00199A  6E26               	movwf	lcdCommand@value^0,c
  2023  00199C                     
  2024                           ;lcd.c: 41:  pushByte(value, 0);
  2025  00199C  0E00               	movlw	0
  2026  00199E  6E23               	movwf	(pushByte@rs+1)^0,c
  2027  0019A0  0E00               	movlw	0
  2028  0019A2  6E22               	movwf	pushByte@rs^0,c
  2029  0019A4  5026               	movf	lcdCommand@value^0,w,c
  2030  0019A6  EC3A  F00B         	call	_pushByte
  2031                           
  2032                           ;lcd.c: 42:  delayMili(2);
  2033  0019AA  0E00               	movlw	0
  2034  0019AC  6E1A               	movwf	(delayMili@a+1)^0,c
  2035  0019AE  0E02               	movlw	2
  2036  0019B0  6E19               	movwf	delayMili@a^0,c
  2037  0019B2  EC69  F00C         	call	_delayMili	;wreg free
  2038  0019B6  0012               	return		;funcret
  2039  0019B8                     __end_of_lcdCommand:
  2040                           	callstack 0
  2041                           
  2042 ;; *************** function _pushByte *****************
  2043 ;; Defined at:
  2044 ;;		line 31 in file "lcd.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  value           1    wreg     unsigned char 
  2047 ;;  rs              2    9[COMRAM] int 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  value           1   12[COMRAM] unsigned char 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2059 ;;      Params:         2       0       0       0       0       0       0
  2060 ;;      Locals:         1       0       0       0       0       0       0
  2061 ;;      Temps:          1       0       0       0       0       0       0
  2062 ;;      Totals:         4       0       0       0       0       0       0
  2063 ;;Total ram usage:        4 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 3
  2066 ;; This function calls:
  2067 ;;		_digitalWrite
  2068 ;;		_pulseEnablePin
  2069 ;;		_soWrite
  2070 ;; This function is called by:
  2071 ;;		_lcdCommand
  2072 ;;		_lcdChar
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text13
  2077  001674                     __ptext13:
  2078                           	callstack 0
  2079  001674                     _pushByte:
  2080                           	callstack 25
  2081                           
  2082                           ;incstack = 0
  2083                           ;pushByte@value stored from wreg
  2084  001674  6E25               	movwf	pushByte@value^0,c
  2085  001676                     
  2086                           ;lcd.c: 32:  soWrite(value >> 4);
  2087  001676  C025  F024         	movff	pushByte@value,??_pushByte
  2088  00167A  3A24               	swapf	??_pushByte^0,f,c
  2089  00167C  0E0F               	movlw	15
  2090  00167E  1624               	andwf	??_pushByte^0,f,c
  2091  001680  5024               	movf	??_pushByte^0,w,c
  2092  001682  6E1F               	movwf	soWrite@value^0,c
  2093  001684  6A20               	clrf	(soWrite@value+1)^0,c
  2094  001686  ECE9  F00B         	call	_soWrite	;wreg free
  2095                           
  2096                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  2097  00168A  0E00               	movlw	0
  2098  00168C  6E1A               	movwf	(digitalWrite@pin+1)^0,c
  2099  00168E  0E1D               	movlw	29
  2100  001690  6E19               	movwf	digitalWrite@pin^0,c
  2101  001692  C022  F01B         	movff	pushByte@rs,digitalWrite@value
  2102  001696  C023  F01C         	movff	pushByte@rs+1,digitalWrite@value+1
  2103  00169A  EC3A  F004         	call	_digitalWrite	;wreg free
  2104                           
  2105                           ;lcd.c: 34:  pulseEnablePin();
  2106  00169E  EC10  F00C         	call	_pulseEnablePin	;wreg free
  2107                           
  2108                           ;lcd.c: 36:  soWrite(value & 0x0F);
  2109  0016A2  C025  F024         	movff	pushByte@value,??_pushByte
  2110  0016A6  0E0F               	movlw	15
  2111  0016A8  1624               	andwf	??_pushByte^0,f,c
  2112  0016AA  5024               	movf	??_pushByte^0,w,c
  2113  0016AC  6E1F               	movwf	soWrite@value^0,c
  2114  0016AE  6A20               	clrf	(soWrite@value+1)^0,c
  2115  0016B0  ECE9  F00B         	call	_soWrite	;wreg free
  2116                           
  2117                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  2118  0016B4  0E00               	movlw	0
  2119  0016B6  6E1A               	movwf	(digitalWrite@pin+1)^0,c
  2120  0016B8  0E1D               	movlw	29
  2121  0016BA  6E19               	movwf	digitalWrite@pin^0,c
  2122  0016BC  C022  F01B         	movff	pushByte@rs,digitalWrite@value
  2123  0016C0  C023  F01C         	movff	pushByte@rs+1,digitalWrite@value+1
  2124  0016C4  EC3A  F004         	call	_digitalWrite	;wreg free
  2125                           
  2126                           ;lcd.c: 38:  pulseEnablePin();
  2127  0016C8  EC10  F00C         	call	_pulseEnablePin	;wreg free
  2128  0016CC  0012               	return		;funcret
  2129  0016CE                     __end_of_pushByte:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _pulseEnablePin *****************
  2133 ;; Defined at:
  2134 ;;		line 18 in file "lcd.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2148 ;;      Params:         0       0       0       0       0       0       0
  2149 ;;      Locals:         0       0       0       0       0       0       0
  2150 ;;      Temps:          0       0       0       0       0       0       0
  2151 ;;      Totals:         0       0       0       0       0       0       0
  2152 ;;Total ram usage:        0 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 1
  2155 ;; This function calls:
  2156 ;;		_delayMicro
  2157 ;;		_digitalWrite
  2158 ;; This function is called by:
  2159 ;;		_pushNibble
  2160 ;;		_pushByte
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text14
  2165  001820                     __ptext14:
  2166                           	callstack 0
  2167  001820                     _pulseEnablePin:
  2168                           	callstack 26
  2169  001820                     
  2170                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  2171  001820  0E00               	movlw	0
  2172  001822  6E1A               	movwf	(digitalWrite@pin+1)^0,c
  2173  001824  0E1C               	movlw	28
  2174  001826  6E19               	movwf	digitalWrite@pin^0,c
  2175  001828  0E00               	movlw	0
  2176  00182A  6E1C               	movwf	(digitalWrite@value+1)^0,c
  2177  00182C  0E01               	movlw	1
  2178  00182E  6E1B               	movwf	digitalWrite@value^0,c
  2179  001830  EC3A  F004         	call	_digitalWrite	;wreg free
  2180  001834                     
  2181                           ;lcd.c: 20:  delayMicro(5);
  2182  001834  0E00               	movlw	0
  2183  001836  6E1A               	movwf	(delayMicro@a+1)^0,c
  2184  001838  0E05               	movlw	5
  2185  00183A  6E19               	movwf	delayMicro@a^0,c
  2186  00183C  ECF0  F00C         	call	_delayMicro	;wreg free
  2187  001840                     
  2188                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  2189  001840  0E00               	movlw	0
  2190  001842  6E1A               	movwf	(digitalWrite@pin+1)^0,c
  2191  001844  0E1C               	movlw	28
  2192  001846  6E19               	movwf	digitalWrite@pin^0,c
  2193  001848  0E00               	movlw	0
  2194  00184A  6E1C               	movwf	(digitalWrite@value+1)^0,c
  2195  00184C  0E00               	movlw	0
  2196  00184E  6E1B               	movwf	digitalWrite@value^0,c
  2197  001850  EC3A  F004         	call	_digitalWrite	;wreg free
  2198                           
  2199                           ;lcd.c: 22:  delayMicro(5);
  2200  001854  0E00               	movlw	0
  2201  001856  6E1A               	movwf	(delayMicro@a+1)^0,c
  2202  001858  0E05               	movlw	5
  2203  00185A  6E19               	movwf	delayMicro@a^0,c
  2204  00185C  ECF0  F00C         	call	_delayMicro	;wreg free
  2205  001860  0012               	return		;funcret
  2206  001862                     __end_of_pulseEnablePin:
  2207                           	callstack 0
  2208                           
  2209 ;; *************** function _delayMicro *****************
  2210 ;; Defined at:
  2211 ;;		line 5 in file "lcd.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  a               2    0[COMRAM] int 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  i               2    0        volatile int 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		None
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2225 ;;      Params:         2       0       0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0       0       0
  2228 ;;      Totals:         2       0       0       0       0       0       0
  2229 ;;Total ram usage:        2 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_pulseEnablePin
  2235 ;;		_lcdChar
  2236 ;;		_lcdInit
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text15
  2241  0019E0                     __ptext15:
  2242                           	callstack 0
  2243  0019E0                     _delayMicro:
  2244                           	callstack 26
  2245  0019E0  0012               	return		;funcret
  2246  0019E2                     __end_of_delayMicro:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _delayMili *****************
  2250 ;; Defined at:
  2251 ;;		line 10 in file "lcd.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  a               2    0[COMRAM] int 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  i               2    3[COMRAM] volatile int 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2265 ;;      Params:         2       0       0       0       0       0       0
  2266 ;;      Locals:         2       0       0       0       0       0       0
  2267 ;;      Temps:          1       0       0       0       0       0       0
  2268 ;;      Totals:         5       0       0       0       0       0       0
  2269 ;;Total ram usage:        5 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_lcdCommand
  2275 ;;		_lcdInit
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text16
  2280  0018D2                     __ptext16:
  2281                           	callstack 0
  2282  0018D2                     _delayMili:
  2283                           	callstack 28
  2284  0018D2                     
  2285                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  2286  0018D2  0E00               	movlw	0
  2287  0018D4  6E1D               	movwf	(delayMili@i+1)^0,c	;volatile
  2288  0018D6  0E00               	movlw	0
  2289  0018D8  6E1C               	movwf	delayMili@i^0,c	;volatile
  2290  0018DA  EF71  F00C         	goto	l2011
  2291  0018DE                     l2009:
  2292                           
  2293                           ;lcd.c: 15:  }
  2294  0018DE  4A1C               	infsnz	delayMili@i^0,f,c	;volatile
  2295  0018E0  2A1D               	incf	(delayMili@i+1)^0,f,c	;volatile
  2296  0018E2                     l2011:
  2297  0018E2  5019               	movf	delayMili@a^0,w,c
  2298  0018E4  5C1C               	subwf	delayMili@i^0,w,c	;volatile
  2299  0018E6  501D               	movf	(delayMili@i+1)^0,w,c	;volatile
  2300  0018E8  0A80               	xorlw	128
  2301  0018EA  6E1B               	movwf	??_delayMili^0,c
  2302  0018EC  501A               	movf	(delayMili@a+1)^0,w,c
  2303  0018EE  0A80               	xorlw	128
  2304  0018F0  581B               	subwfb	??_delayMili^0,w,c
  2305  0018F2  A0D8               	btfss	status,0,c
  2306  0018F4  EF7E  F00C         	goto	u1731
  2307  0018F8  EF80  F00C         	goto	u1730
  2308  0018FC                     u1731:
  2309  0018FC  EF6F  F00C         	goto	l2009
  2310  001900                     u1730:
  2311  001900  0012               	return		;funcret
  2312  001902                     __end_of_delayMili:
  2313                           	callstack 0
  2314                           
  2315 ;; *************** function _kpInit *****************
  2316 ;; Defined at:
  2317 ;;		line 54 in file "keypad.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2331 ;;      Params:         0       0       0       0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0       0       0
  2334 ;;      Totals:         0       0       0       0       0       0       0
  2335 ;;Total ram usage:        0 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 2
  2338 ;; This function calls:
  2339 ;;		_pinMode
  2340 ;;		_soInit
  2341 ;; This function is called by:
  2342 ;;		_main
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text17
  2347  0018A0                     __ptext17:
  2348                           	callstack 0
  2349  0018A0                     _kpInit:
  2350                           	callstack 28
  2351  0018A0                     
  2352                           ;keypad.c: 55:   soInit();
  2353  0018A0  EC31  F00C         	call	_soInit	;wreg free
  2354                           
  2355                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  2356  0018A4  0E00               	movlw	0
  2357  0018A6  6E1A               	movwf	(pinMode@pin+1)^0,c
  2358  0018A8  0E0A               	movlw	10
  2359  0018AA  6E19               	movwf	pinMode@pin^0,c
  2360  0018AC  0E00               	movlw	0
  2361  0018AE  6E1C               	movwf	(pinMode@type+1)^0,c
  2362  0018B0  0E01               	movlw	1
  2363  0018B2  6E1B               	movwf	pinMode@type^0,c
  2364  0018B4  EC13  F003         	call	_pinMode	;wreg free
  2365                           
  2366                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  2367  0018B8  0E00               	movlw	0
  2368  0018BA  6E1A               	movwf	(pinMode@pin+1)^0,c
  2369  0018BC  0E09               	movlw	9
  2370  0018BE  6E19               	movwf	pinMode@pin^0,c
  2371  0018C0  0E00               	movlw	0
  2372  0018C2  6E1C               	movwf	(pinMode@type+1)^0,c
  2373  0018C4  0E01               	movlw	1
  2374  0018C6  6E1B               	movwf	pinMode@type^0,c
  2375  0018C8  EC13  F003         	call	_pinMode	;wreg free
  2376  0018CC                     
  2377                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  2378  0018CC  0E0C               	movlw	12
  2379  0018CE  6EC1               	movwf	193,c	;volatile
  2380  0018D0  0012               	return		;funcret
  2381  0018D2                     __end_of_kpInit:
  2382                           	callstack 0
  2383                           
  2384 ;; *************** function _soInit *****************
  2385 ;; Defined at:
  2386 ;;		line 3 in file "so.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2400 ;;      Params:         0       0       0       0       0       0       0
  2401 ;;      Locals:         0       0       0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0
  2403 ;;      Totals:         0       0       0       0       0       0       0
  2404 ;;Total ram usage:        0 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 1
  2407 ;; This function calls:
  2408 ;;		_pinMode
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;;		_kpInit
  2412 ;;		_lcdInit
  2413 ;;		_ssdInit
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text18
  2418  001862                     __ptext18:
  2419                           	callstack 0
  2420  001862                     _soInit:
  2421                           	callstack 28
  2422  001862                     
  2423                           ;so.c: 4:  pinMode(PIN_D7, 0);
  2424  001862  0E00               	movlw	0
  2425  001864  6E1A               	movwf	(pinMode@pin+1)^0,c
  2426  001866  0E1F               	movlw	31
  2427  001868  6E19               	movwf	pinMode@pin^0,c
  2428  00186A  0E00               	movlw	0
  2429  00186C  6E1C               	movwf	(pinMode@type+1)^0,c
  2430  00186E  0E00               	movlw	0
  2431  001870  6E1B               	movwf	pinMode@type^0,c
  2432  001872  EC13  F003         	call	_pinMode	;wreg free
  2433                           
  2434                           ;so.c: 5:  pinMode(PIN_B0, 0);
  2435  001876  0E00               	movlw	0
  2436  001878  6E1A               	movwf	(pinMode@pin+1)^0,c
  2437  00187A  0E08               	movlw	8
  2438  00187C  6E19               	movwf	pinMode@pin^0,c
  2439  00187E  0E00               	movlw	0
  2440  001880  6E1C               	movwf	(pinMode@type+1)^0,c
  2441  001882  0E00               	movlw	0
  2442  001884  6E1B               	movwf	pinMode@type^0,c
  2443  001886  EC13  F003         	call	_pinMode	;wreg free
  2444                           
  2445                           ;so.c: 6:  pinMode(PIN_D6, 0);
  2446  00188A  0E00               	movlw	0
  2447  00188C  6E1A               	movwf	(pinMode@pin+1)^0,c
  2448  00188E  0E1E               	movlw	30
  2449  001890  6E19               	movwf	pinMode@pin^0,c
  2450  001892  0E00               	movlw	0
  2451  001894  6E1C               	movwf	(pinMode@type+1)^0,c
  2452  001896  0E00               	movlw	0
  2453  001898  6E1B               	movwf	pinMode@type^0,c
  2454  00189A  EC13  F003         	call	_pinMode	;wreg free
  2455  00189E  0012               	return		;funcret
  2456  0018A0                     __end_of_soInit:
  2457                           	callstack 0
  2458                           
  2459 ;; *************** function _pinMode *****************
  2460 ;; Defined at:
  2461 ;;		line 54 in file "io.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  pin             2    0[COMRAM] int 
  2464 ;;  type            2    2[COMRAM] int 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2476 ;;      Params:         4       0       0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0
  2478 ;;      Temps:          2       0       0       0       0       0       0
  2479 ;;      Totals:         6       0       0       0       0       0       0
  2480 ;;Total ram usage:        6 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_kpInit
  2486 ;;		_lcdInit
  2487 ;;		_soInit
  2488 ;;		_ssdInit
  2489 ;;		_i2cInit
  2490 ;;		_read_SCL
  2491 ;;		_read_SDA
  2492 ;;		_clear_SCL
  2493 ;;		_clear_SDA
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text19
  2498  000626                     __ptext19:
  2499                           	callstack 0
  2500  000626                     _pinMode:
  2501                           	callstack 28
  2502  000626                     
  2503                           ;io.c: 56:     if(pin <8){
  2504  000626  BE1A               	btfsc	(pinMode@pin+1)^0,7,c
  2505  000628  EF21  F003         	goto	u1530
  2506  00062C  501A               	movf	(pinMode@pin+1)^0,w,c
  2507  00062E  E107               	bnz	u1531
  2508  000630  0E08               	movlw	8
  2509  000632  5C19               	subwf	pinMode@pin^0,w,c
  2510  000634  B0D8               	btfsc	status,0,c
  2511  000636  EF1F  F003         	goto	u1531
  2512  00063A  EF21  F003         	goto	u1530
  2513  00063E                     u1531:
  2514  00063E  EF4B  F003         	goto	l1975
  2515  000642                     u1530:
  2516  000642                     
  2517                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2518  000642  501B               	movf	pinMode@type^0,w,c
  2519  000644  101C               	iorwf	(pinMode@type+1)^0,w,c
  2520  000646  B4D8               	btfsc	status,2,c
  2521  000648  EF28  F003         	goto	u1541
  2522  00064C  EF2A  F003         	goto	u1540
  2523  000650                     u1541:
  2524  000650  EF3A  F003         	goto	l1973
  2525  000654                     u1540:
  2526  000654  C019  F01D         	movff	pinMode@pin,??_pinMode
  2527  000658  0E01               	movlw	1
  2528  00065A  6E1E               	movwf	(??_pinMode+1)^0,c
  2529  00065C  2A1D               	incf	??_pinMode^0,f,c
  2530  00065E  EF33  F003         	goto	u1554
  2531  000662                     u1555:
  2532  000662  90D8               	bcf	status,0,c
  2533  000664  361E               	rlcf	(??_pinMode+1)^0,f,c
  2534  000666                     u1554:
  2535  000666  2E1D               	decfsz	??_pinMode^0,f,c
  2536  000668  EF31  F003         	goto	u1555
  2537  00066C  501E               	movf	(??_pinMode+1)^0,w,c
  2538  00066E  1292               	iorwf	146,f,c	;volatile
  2539  000670  EF39  F004         	goto	l251
  2540  000674                     l1973:
  2541  000674  C019  F01D         	movff	pinMode@pin,??_pinMode
  2542  000678  0E01               	movlw	1
  2543  00067A  6E1E               	movwf	(??_pinMode+1)^0,c
  2544  00067C  2A1D               	incf	??_pinMode^0,f,c
  2545  00067E  EF43  F003         	goto	u1564
  2546  000682                     u1565:
  2547  000682  90D8               	bcf	status,0,c
  2548  000684  361E               	rlcf	(??_pinMode+1)^0,f,c
  2549  000686                     u1564:
  2550  000686  2E1D               	decfsz	??_pinMode^0,f,c
  2551  000688  EF41  F003         	goto	u1565
  2552  00068C  501E               	movf	(??_pinMode+1)^0,w,c
  2553  00068E  0AFF               	xorlw	255
  2554  000690  1692               	andwf	146,f,c	;volatile
  2555  000692  EF39  F004         	goto	l251
  2556  000696                     l1975:
  2557  000696  BE1A               	btfsc	(pinMode@pin+1)^0,7,c
  2558  000698  EF59  F003         	goto	u1570
  2559  00069C  501A               	movf	(pinMode@pin+1)^0,w,c
  2560  00069E  E107               	bnz	u1571
  2561  0006A0  0E10               	movlw	16
  2562  0006A2  5C19               	subwf	pinMode@pin^0,w,c
  2563  0006A4  B0D8               	btfsc	status,0,c
  2564  0006A6  EF57  F003         	goto	u1571
  2565  0006AA  EF59  F003         	goto	u1570
  2566  0006AE                     u1571:
  2567  0006AE  EF87  F003         	goto	l1983
  2568  0006B2                     u1570:
  2569  0006B2                     
  2570                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2571  0006B2  501B               	movf	pinMode@type^0,w,c
  2572  0006B4  101C               	iorwf	(pinMode@type+1)^0,w,c
  2573  0006B6  B4D8               	btfsc	status,2,c
  2574  0006B8  EF60  F003         	goto	u1581
  2575  0006BC  EF62  F003         	goto	u1580
  2576  0006C0                     u1581:
  2577  0006C0  EF74  F003         	goto	l1981
  2578  0006C4                     u1580:
  2579  0006C4  C019  F01D         	movff	pinMode@pin,??_pinMode
  2580  0006C8  0EF8               	movlw	-8
  2581  0006CA  261D               	addwf	??_pinMode^0,f,c
  2582  0006CC  0E01               	movlw	1
  2583  0006CE  6E1E               	movwf	(??_pinMode+1)^0,c
  2584  0006D0  2A1D               	incf	??_pinMode^0,f,c
  2585  0006D2  EF6D  F003         	goto	u1594
  2586  0006D6                     u1595:
  2587  0006D6  90D8               	bcf	status,0,c
  2588  0006D8  361E               	rlcf	(??_pinMode+1)^0,f,c
  2589  0006DA                     u1594:
  2590  0006DA  2E1D               	decfsz	??_pinMode^0,f,c
  2591  0006DC  EF6B  F003         	goto	u1595
  2592  0006E0  501E               	movf	(??_pinMode+1)^0,w,c
  2593  0006E2  1293               	iorwf	147,f,c	;volatile
  2594  0006E4  EF39  F004         	goto	l251
  2595  0006E8                     l1981:
  2596  0006E8  C019  F01D         	movff	pinMode@pin,??_pinMode
  2597  0006EC  0EF8               	movlw	-8
  2598  0006EE  261D               	addwf	??_pinMode^0,f,c
  2599  0006F0  0E01               	movlw	1
  2600  0006F2  6E1E               	movwf	(??_pinMode+1)^0,c
  2601  0006F4  2A1D               	incf	??_pinMode^0,f,c
  2602  0006F6  EF7F  F003         	goto	u1604
  2603  0006FA                     u1605:
  2604  0006FA  90D8               	bcf	status,0,c
  2605  0006FC  361E               	rlcf	(??_pinMode+1)^0,f,c
  2606  0006FE                     u1604:
  2607  0006FE  2E1D               	decfsz	??_pinMode^0,f,c
  2608  000700  EF7D  F003         	goto	u1605
  2609  000704  501E               	movf	(??_pinMode+1)^0,w,c
  2610  000706  0AFF               	xorlw	255
  2611  000708  1693               	andwf	147,f,c	;volatile
  2612  00070A  EF39  F004         	goto	l251
  2613  00070E                     l1983:
  2614  00070E  BE1A               	btfsc	(pinMode@pin+1)^0,7,c
  2615  000710  EF95  F003         	goto	u1610
  2616  000714  501A               	movf	(pinMode@pin+1)^0,w,c
  2617  000716  E107               	bnz	u1611
  2618  000718  0E18               	movlw	24
  2619  00071A  5C19               	subwf	pinMode@pin^0,w,c
  2620  00071C  B0D8               	btfsc	status,0,c
  2621  00071E  EF93  F003         	goto	u1611
  2622  000722  EF95  F003         	goto	u1610
  2623  000726                     u1611:
  2624  000726  EFC3  F003         	goto	l1991
  2625  00072A                     u1610:
  2626  00072A                     
  2627                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  2628  00072A  501B               	movf	pinMode@type^0,w,c
  2629  00072C  101C               	iorwf	(pinMode@type+1)^0,w,c
  2630  00072E  B4D8               	btfsc	status,2,c
  2631  000730  EF9C  F003         	goto	u1621
  2632  000734  EF9E  F003         	goto	u1620
  2633  000738                     u1621:
  2634  000738  EFB0  F003         	goto	l1989
  2635  00073C                     u1620:
  2636  00073C  C019  F01D         	movff	pinMode@pin,??_pinMode
  2637  000740  0EF0               	movlw	-16
  2638  000742  261D               	addwf	??_pinMode^0,f,c
  2639  000744  0E01               	movlw	1
  2640  000746  6E1E               	movwf	(??_pinMode+1)^0,c
  2641  000748  2A1D               	incf	??_pinMode^0,f,c
  2642  00074A  EFA9  F003         	goto	u1634
  2643  00074E                     u1635:
  2644  00074E  90D8               	bcf	status,0,c
  2645  000750  361E               	rlcf	(??_pinMode+1)^0,f,c
  2646  000752                     u1634:
  2647  000752  2E1D               	decfsz	??_pinMode^0,f,c
  2648  000754  EFA7  F003         	goto	u1635
  2649  000758  501E               	movf	(??_pinMode+1)^0,w,c
  2650  00075A  1294               	iorwf	148,f,c	;volatile
  2651  00075C  EF39  F004         	goto	l251
  2652  000760                     l1989:
  2653  000760  C019  F01D         	movff	pinMode@pin,??_pinMode
  2654  000764  0EF0               	movlw	-16
  2655  000766  261D               	addwf	??_pinMode^0,f,c
  2656  000768  0E01               	movlw	1
  2657  00076A  6E1E               	movwf	(??_pinMode+1)^0,c
  2658  00076C  2A1D               	incf	??_pinMode^0,f,c
  2659  00076E  EFBB  F003         	goto	u1644
  2660  000772                     u1645:
  2661  000772  90D8               	bcf	status,0,c
  2662  000774  361E               	rlcf	(??_pinMode+1)^0,f,c
  2663  000776                     u1644:
  2664  000776  2E1D               	decfsz	??_pinMode^0,f,c
  2665  000778  EFB9  F003         	goto	u1645
  2666  00077C  501E               	movf	(??_pinMode+1)^0,w,c
  2667  00077E  0AFF               	xorlw	255
  2668  000780  1694               	andwf	148,f,c	;volatile
  2669  000782  EF39  F004         	goto	l251
  2670  000786                     l1991:
  2671  000786  BE1A               	btfsc	(pinMode@pin+1)^0,7,c
  2672  000788  EFD1  F003         	goto	u1650
  2673  00078C  501A               	movf	(pinMode@pin+1)^0,w,c
  2674  00078E  E107               	bnz	u1651
  2675  000790  0E20               	movlw	32
  2676  000792  5C19               	subwf	pinMode@pin^0,w,c
  2677  000794  B0D8               	btfsc	status,0,c
  2678  000796  EFCF  F003         	goto	u1651
  2679  00079A  EFD1  F003         	goto	u1650
  2680  00079E                     u1651:
  2681  00079E  EFFF  F003         	goto	l1999
  2682  0007A2                     u1650:
  2683  0007A2                     
  2684                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  2685  0007A2  501B               	movf	pinMode@type^0,w,c
  2686  0007A4  101C               	iorwf	(pinMode@type+1)^0,w,c
  2687  0007A6  B4D8               	btfsc	status,2,c
  2688  0007A8  EFD8  F003         	goto	u1661
  2689  0007AC  EFDA  F003         	goto	u1660
  2690  0007B0                     u1661:
  2691  0007B0  EFEC  F003         	goto	l1997
  2692  0007B4                     u1660:
  2693  0007B4  C019  F01D         	movff	pinMode@pin,??_pinMode
  2694  0007B8  0EE8               	movlw	-24
  2695  0007BA  261D               	addwf	??_pinMode^0,f,c
  2696  0007BC  0E01               	movlw	1
  2697  0007BE  6E1E               	movwf	(??_pinMode+1)^0,c
  2698  0007C0  2A1D               	incf	??_pinMode^0,f,c
  2699  0007C2  EFE5  F003         	goto	u1674
  2700  0007C6                     u1675:
  2701  0007C6  90D8               	bcf	status,0,c
  2702  0007C8  361E               	rlcf	(??_pinMode+1)^0,f,c
  2703  0007CA                     u1674:
  2704  0007CA  2E1D               	decfsz	??_pinMode^0,f,c
  2705  0007CC  EFE3  F003         	goto	u1675
  2706  0007D0  501E               	movf	(??_pinMode+1)^0,w,c
  2707  0007D2  1295               	iorwf	149,f,c	;volatile
  2708  0007D4  EF39  F004         	goto	l251
  2709  0007D8                     l1997:
  2710  0007D8  C019  F01D         	movff	pinMode@pin,??_pinMode
  2711  0007DC  0EE8               	movlw	-24
  2712  0007DE  261D               	addwf	??_pinMode^0,f,c
  2713  0007E0  0E01               	movlw	1
  2714  0007E2  6E1E               	movwf	(??_pinMode+1)^0,c
  2715  0007E4  2A1D               	incf	??_pinMode^0,f,c
  2716  0007E6  EFF7  F003         	goto	u1684
  2717  0007EA                     u1685:
  2718  0007EA  90D8               	bcf	status,0,c
  2719  0007EC  361E               	rlcf	(??_pinMode+1)^0,f,c
  2720  0007EE                     u1684:
  2721  0007EE  2E1D               	decfsz	??_pinMode^0,f,c
  2722  0007F0  EFF5  F003         	goto	u1685
  2723  0007F4  501E               	movf	(??_pinMode+1)^0,w,c
  2724  0007F6  0AFF               	xorlw	255
  2725  0007F8  1695               	andwf	149,f,c	;volatile
  2726  0007FA  EF39  F004         	goto	l251
  2727  0007FE                     l1999:
  2728  0007FE  BE1A               	btfsc	(pinMode@pin+1)^0,7,c
  2729  000800  EF0D  F004         	goto	u1690
  2730  000804  501A               	movf	(pinMode@pin+1)^0,w,c
  2731  000806  E107               	bnz	u1691
  2732  000808  0E28               	movlw	40
  2733  00080A  5C19               	subwf	pinMode@pin^0,w,c
  2734  00080C  B0D8               	btfsc	status,0,c
  2735  00080E  EF0B  F004         	goto	u1691
  2736  000812  EF0D  F004         	goto	u1690
  2737  000816                     u1691:
  2738  000816  EF39  F004         	goto	l251
  2739  00081A                     u1690:
  2740  00081A                     
  2741                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  2742  00081A  501B               	movf	pinMode@type^0,w,c
  2743  00081C  101C               	iorwf	(pinMode@type+1)^0,w,c
  2744  00081E  B4D8               	btfsc	status,2,c
  2745  000820  EF14  F004         	goto	u1701
  2746  000824  EF16  F004         	goto	u1700
  2747  000828                     u1701:
  2748  000828  EF28  F004         	goto	l2005
  2749  00082C                     u1700:
  2750  00082C  C019  F01D         	movff	pinMode@pin,??_pinMode
  2751  000830  0EE0               	movlw	-32
  2752  000832  261D               	addwf	??_pinMode^0,f,c
  2753  000834  0E01               	movlw	1
  2754  000836  6E1E               	movwf	(??_pinMode+1)^0,c
  2755  000838  2A1D               	incf	??_pinMode^0,f,c
  2756  00083A  EF21  F004         	goto	u1714
  2757  00083E                     u1715:
  2758  00083E  90D8               	bcf	status,0,c
  2759  000840  361E               	rlcf	(??_pinMode+1)^0,f,c
  2760  000842                     u1714:
  2761  000842  2E1D               	decfsz	??_pinMode^0,f,c
  2762  000844  EF1F  F004         	goto	u1715
  2763  000848  501E               	movf	(??_pinMode+1)^0,w,c
  2764  00084A  1296               	iorwf	150,f,c	;volatile
  2765  00084C  EF39  F004         	goto	l251
  2766  000850                     l2005:
  2767  000850  C019  F01D         	movff	pinMode@pin,??_pinMode
  2768  000854  0EE0               	movlw	-32
  2769  000856  261D               	addwf	??_pinMode^0,f,c
  2770  000858  0E01               	movlw	1
  2771  00085A  6E1E               	movwf	(??_pinMode+1)^0,c
  2772  00085C  2A1D               	incf	??_pinMode^0,f,c
  2773  00085E  EF33  F004         	goto	u1724
  2774  000862                     u1725:
  2775  000862  90D8               	bcf	status,0,c
  2776  000864  361E               	rlcf	(??_pinMode+1)^0,f,c
  2777  000866                     u1724:
  2778  000866  2E1D               	decfsz	??_pinMode^0,f,c
  2779  000868  EF31  F004         	goto	u1725
  2780  00086C  501E               	movf	(??_pinMode+1)^0,w,c
  2781  00086E  0AFF               	xorlw	255
  2782  000870  1696               	andwf	150,f,c	;volatile
  2783  000872                     l251:
  2784  000872  0012               	return		;funcret
  2785  000874                     __end_of_pinMode:
  2786                           	callstack 0
  2787                           
  2788 ;; *************** function _kpDebounce *****************
  2789 ;; Defined at:
  2790 ;;		line 27 in file "keypad.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  i               2   12[COMRAM] int 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, status,2, status,0, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2804 ;;      Params:         0       0       0       0       0       0       0
  2805 ;;      Locals:         2       0       0       0       0       0       0
  2806 ;;      Temps:          3       0       0       0       0       0       0
  2807 ;;      Totals:         5       0       0       0       0       0       0
  2808 ;;Total ram usage:        5 bytes
  2809 ;; Hardware stack levels used: 1
  2810 ;; Hardware stack levels required when called: 3
  2811 ;; This function calls:
  2812 ;;		_digitalRead
  2813 ;;		_soWrite
  2814 ;; This function is called by:
  2815 ;;		_main
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text20
  2820  0011C6                     __ptext20:
  2821                           	callstack 0
  2822  0011C6                     _kpDebounce:
  2823                           	callstack 27
  2824  0011C6                     
  2825                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  2826  0011C6  0E00               	movlw	0
  2827  0011C8  6E04               	movwf	(kpDebounce@newRead+1)^0,c
  2828  0011CA  0E00               	movlw	0
  2829  0011CC  6E03               	movwf	kpDebounce@newRead^0,c
  2830                           
  2831                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  2832  0011CE  0E00               	movlw	0
  2833  0011D0  6E26               	movwf	(kpDebounce@i+1)^0,c
  2834  0011D2  0E00               	movlw	0
  2835  0011D4  6E25               	movwf	kpDebounce@i^0,c
  2836  0011D6                     l2253:
  2837  0011D6  BE26               	btfsc	(kpDebounce@i+1)^0,7,c
  2838  0011D8  EFF7  F008         	goto	u2151
  2839  0011DC  5026               	movf	(kpDebounce@i+1)^0,w,c
  2840  0011DE  E109               	bnz	u2150
  2841  0011E0  0E05               	movlw	5
  2842  0011E2  5C25               	subwf	kpDebounce@i^0,w,c
  2843  0011E4  A0D8               	btfss	status,0,c
  2844  0011E6  EFF7  F008         	goto	u2151
  2845  0011EA  EFF9  F008         	goto	u2150
  2846  0011EE                     u2151:
  2847  0011EE  EFFB  F008         	goto	l2257
  2848  0011F2                     u2150:
  2849  0011F2  EF5C  F009         	goto	l2269
  2850  0011F6                     l2257:
  2851                           
  2852                           ;keypad.c: 35:       soWrite(1<<(i+3));
  2853  0011F6  C025  F022         	movff	kpDebounce@i,??_kpDebounce
  2854  0011FA  0E03               	movlw	3
  2855  0011FC  2622               	addwf	??_kpDebounce^0,f,c
  2856  0011FE  0E01               	movlw	1
  2857  001200  6E23               	movwf	(??_kpDebounce+1)^0,c
  2858  001202  0E00               	movlw	0
  2859  001204  6E24               	movwf	(??_kpDebounce+2)^0,c
  2860  001206  2A22               	incf	??_kpDebounce^0,f,c
  2861  001208  EF09  F009         	goto	u2164
  2862  00120C                     u2165:
  2863  00120C  90D8               	bcf	status,0,c
  2864  00120E  3623               	rlcf	(??_kpDebounce+1)^0,f,c
  2865  001210  3624               	rlcf	(??_kpDebounce+2)^0,f,c
  2866  001212                     u2164:
  2867  001212  2E22               	decfsz	??_kpDebounce^0,f,c
  2868  001214  EF06  F009         	goto	u2165
  2869  001218  C023  F01F         	movff	??_kpDebounce+1,soWrite@value
  2870  00121C  C024  F020         	movff	??_kpDebounce+2,soWrite@value+1
  2871  001220  ECE9  F00B         	call	_soWrite	;wreg free
  2872                           
  2873                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  2874  001224  0E00               	movlw	0
  2875  001226  6E1A               	movwf	(digitalRead@pin+1)^0,c
  2876  001228  0E0A               	movlw	10
  2877  00122A  6E19               	movwf	digitalRead@pin^0,c
  2878  00122C  EC2E  F008         	call	_digitalRead	;wreg free
  2879  001230  5019               	movf	?_digitalRead^0,w,c
  2880  001232  101A               	iorwf	(?_digitalRead+1)^0,w,c
  2881  001234  B4D8               	btfsc	status,2,c
  2882  001236  EF1F  F009         	goto	u2171
  2883  00123A  EF21  F009         	goto	u2170
  2884  00123E                     u2171:
  2885  00123E  EF34  F009         	goto	l2261
  2886  001242                     u2170:
  2887  001242                     
  2888                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  2889  001242  C025  F022         	movff	kpDebounce@i,??_kpDebounce
  2890  001246  0E01               	movlw	1
  2891  001248  6E23               	movwf	(??_kpDebounce+1)^0,c
  2892  00124A  0E00               	movlw	0
  2893  00124C  6E24               	movwf	(??_kpDebounce+2)^0,c
  2894  00124E  2A22               	incf	??_kpDebounce^0,f,c
  2895  001250  EF2D  F009         	goto	u2184
  2896  001254                     u2185:
  2897  001254  90D8               	bcf	status,0,c
  2898  001256  3623               	rlcf	(??_kpDebounce+1)^0,f,c
  2899  001258  3624               	rlcf	(??_kpDebounce+2)^0,f,c
  2900  00125A                     u2184:
  2901  00125A  2E22               	decfsz	??_kpDebounce^0,f,c
  2902  00125C  EF2A  F009         	goto	u2185
  2903  001260  5023               	movf	(??_kpDebounce+1)^0,w,c
  2904  001262  1203               	iorwf	kpDebounce@newRead^0,f,c
  2905  001264  5024               	movf	(??_kpDebounce+2)^0,w,c
  2906  001266  1204               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2907  001268                     l2261:
  2908                           
  2909                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  2910  001268  0E00               	movlw	0
  2911  00126A  6E1A               	movwf	(digitalRead@pin+1)^0,c
  2912  00126C  0E09               	movlw	9
  2913  00126E  6E19               	movwf	digitalRead@pin^0,c
  2914  001270  EC2E  F008         	call	_digitalRead	;wreg free
  2915  001274  5019               	movf	?_digitalRead^0,w,c
  2916  001276  101A               	iorwf	(?_digitalRead+1)^0,w,c
  2917  001278  B4D8               	btfsc	status,2,c
  2918  00127A  EF41  F009         	goto	u2191
  2919  00127E  EF43  F009         	goto	u2190
  2920  001282                     u2191:
  2921  001282  EF58  F009         	goto	l2265
  2922  001286                     u2190:
  2923  001286                     
  2924                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  2925  001286  C025  F022         	movff	kpDebounce@i,??_kpDebounce
  2926  00128A  0E05               	movlw	5
  2927  00128C  2622               	addwf	??_kpDebounce^0,f,c
  2928  00128E  0E01               	movlw	1
  2929  001290  6E23               	movwf	(??_kpDebounce+1)^0,c
  2930  001292  0E00               	movlw	0
  2931  001294  6E24               	movwf	(??_kpDebounce+2)^0,c
  2932  001296  2A22               	incf	??_kpDebounce^0,f,c
  2933  001298  EF51  F009         	goto	u2204
  2934  00129C                     u2205:
  2935  00129C  90D8               	bcf	status,0,c
  2936  00129E  3623               	rlcf	(??_kpDebounce+1)^0,f,c
  2937  0012A0  3624               	rlcf	(??_kpDebounce+2)^0,f,c
  2938  0012A2                     u2204:
  2939  0012A2  2E22               	decfsz	??_kpDebounce^0,f,c
  2940  0012A4  EF4E  F009         	goto	u2205
  2941  0012A8  5023               	movf	(??_kpDebounce+1)^0,w,c
  2942  0012AA  1203               	iorwf	kpDebounce@newRead^0,f,c
  2943  0012AC  5024               	movf	(??_kpDebounce+2)^0,w,c
  2944  0012AE  1204               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2945  0012B0                     l2265:
  2946                           
  2947                           ;keypad.c: 42:     }
  2948  0012B0  4A25               	infsnz	kpDebounce@i^0,f,c
  2949  0012B2  2A26               	incf	(kpDebounce@i+1)^0,f,c
  2950  0012B4  EFEB  F008         	goto	l2253
  2951  0012B8                     l2269:
  2952                           
  2953                           ;keypad.c: 43:     if (oldRead == newRead) {
  2954  0012B8  5003               	movf	kpDebounce@newRead^0,w,c
  2955  0012BA  1801               	xorwf	kpDebounce@oldRead^0,w,c
  2956  0012BC  E107               	bnz	u2211
  2957  0012BE  5004               	movf	(kpDebounce@newRead+1)^0,w,c
  2958  0012C0  1802               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  2959  0012C2  A4D8               	btfss	status,2,c
  2960  0012C4  EF66  F009         	goto	u2211
  2961  0012C8  EF68  F009         	goto	u2210
  2962  0012CC                     u2211:
  2963  0012CC  EF6B  F009         	goto	l2273
  2964  0012D0                     u2210:
  2965  0012D0                     
  2966                           ;keypad.c: 44:         tempo--;
  2967  0012D0  0614               	decf	kpDebounce@tempo^0,f,c
  2968                           
  2969                           ;keypad.c: 45:     } else {
  2970  0012D2  EF71  F009         	goto	l288
  2971  0012D6                     l2273:
  2972                           
  2973                           ;keypad.c: 46:         tempo = 1;
  2974  0012D6  0E01               	movlw	1
  2975  0012D8  6E14               	movwf	kpDebounce@tempo^0,c
  2976  0012DA                     
  2977                           ;keypad.c: 47:         oldRead = newRead;
  2978  0012DA  C003  F001         	movff	kpDebounce@newRead,kpDebounce@oldRead
  2979  0012DE  C004  F002         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  2980  0012E2                     l288:
  2981                           
  2982                           ;keypad.c: 49:     if (tempo == 0) {
  2983  0012E2  5014               	movf	kpDebounce@tempo^0,w,c
  2984  0012E4  A4D8               	btfss	status,2,c
  2985  0012E6  EF77  F009         	goto	u2221
  2986  0012EA  EF79  F009         	goto	u2220
  2987  0012EE                     u2221:
  2988  0012EE  EF7D  F009         	goto	l290
  2989  0012F2                     u2220:
  2990  0012F2                     
  2991                           ;keypad.c: 50:         keys = oldRead;
  2992  0012F2  C001  F005         	movff	kpDebounce@oldRead,_keys
  2993  0012F6  C002  F006         	movff	kpDebounce@oldRead+1,_keys+1
  2994  0012FA                     l290:
  2995  0012FA  0012               	return		;funcret
  2996  0012FC                     __end_of_kpDebounce:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _soWrite *****************
  3000 ;; Defined at:
  3001 ;;		line 18 in file "so.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  value           2    6[COMRAM] int 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  i               1    8[COMRAM] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3015 ;;      Params:         2       0       0       0       0       0       0
  3016 ;;      Locals:         1       0       0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0
  3018 ;;      Totals:         3       0       0       0       0       0       0
  3019 ;;Total ram usage:        3 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 2
  3022 ;; This function calls:
  3023 ;;		_PulseClockData
  3024 ;;		_PulseEnClock
  3025 ;;		_digitalWrite
  3026 ;; This function is called by:
  3027 ;;		_kpDebounce
  3028 ;;		_pushNibble
  3029 ;;		_pushByte
  3030 ;;		_ssdUpdate
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text21
  3035  0017D2                     __ptext21:
  3036                           	callstack 0
  3037  0017D2                     _soWrite:
  3038                           	callstack 27
  3039  0017D2                     
  3040                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  3041  0017D2  0E00               	movlw	0
  3042  0017D4  6E1A               	movwf	(digitalWrite@pin+1)^0,c
  3043  0017D6  0E08               	movlw	8
  3044  0017D8  6E19               	movwf	digitalWrite@pin^0,c
  3045  0017DA  0E00               	movlw	0
  3046  0017DC  6E1C               	movwf	(digitalWrite@value+1)^0,c
  3047  0017DE  0E00               	movlw	0
  3048  0017E0  6E1B               	movwf	digitalWrite@value^0,c
  3049  0017E2  EC3A  F004         	call	_digitalWrite	;wreg free
  3050  0017E6                     
  3051                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  3052  0017E6  0E00               	movlw	0
  3053  0017E8  6E21               	movwf	soWrite@i^0,c
  3054  0017EA                     l1951:
  3055                           
  3056                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  3057  0017EA  0E00               	movlw	0
  3058  0017EC  6E1A               	movwf	(digitalWrite@pin+1)^0,c
  3059  0017EE  0E1E               	movlw	30
  3060  0017F0  6E19               	movwf	digitalWrite@pin^0,c
  3061  0017F2  0E80               	movlw	128
  3062  0017F4  141F               	andwf	soWrite@value^0,w,c
  3063  0017F6  6E1B               	movwf	digitalWrite@value^0,c
  3064  0017F8  6A1C               	clrf	(digitalWrite@value+1)^0,c
  3065  0017FA  EC3A  F004         	call	_digitalWrite	;wreg free
  3066                           
  3067                           ;so.c: 23:   PulseClockData();
  3068  0017FE  EC96  F00C         	call	_PulseClockData	;wreg free
  3069  001802                     
  3070                           ;so.c: 24:   value <<= 1;
  3071  001802  90D8               	bcf	status,0,c
  3072  001804  361F               	rlcf	soWrite@value^0,f,c
  3073  001806  3620               	rlcf	(soWrite@value+1)^0,f,c
  3074  001808                     
  3075                           ;so.c: 25:  }
  3076  001808  2A21               	incf	soWrite@i^0,f,c
  3077  00180A  0E07               	movlw	7
  3078  00180C  6421               	cpfsgt	soWrite@i^0,c
  3079  00180E  EF0B  F00C         	goto	u1521
  3080  001812  EF0D  F00C         	goto	u1520
  3081  001816                     u1521:
  3082  001816  EFF5  F00B         	goto	l1951
  3083  00181A                     u1520:
  3084  00181A                     
  3085                           ;so.c: 26:  PulseEnClock();
  3086  00181A  EC81  F00C         	call	_PulseEnClock	;wreg free
  3087  00181E  0012               	return		;funcret
  3088  001820                     __end_of_soWrite:
  3089                           	callstack 0
  3090                           
  3091 ;; *************** function _PulseEnClock *****************
  3092 ;; Defined at:
  3093 ;;		line 9 in file "so.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;		None
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;		None
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3107 ;;      Params:         0       0       0       0       0       0       0
  3108 ;;      Locals:         0       0       0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0
  3110 ;;      Totals:         0       0       0       0       0       0       0
  3111 ;;Total ram usage:        0 bytes
  3112 ;; Hardware stack levels used: 1
  3113 ;; Hardware stack levels required when called: 1
  3114 ;; This function calls:
  3115 ;;		_digitalWrite
  3116 ;; This function is called by:
  3117 ;;		_soWrite
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text22
  3122  001902                     __ptext22:
  3123                           	callstack 0
  3124  001902                     _PulseEnClock:
  3125                           	callstack 27
  3126  001902                     
  3127                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  3128  001902  0E00               	movlw	0
  3129  001904  6E1A               	movwf	(digitalWrite@pin+1)^0,c
  3130  001906  0E1F               	movlw	31
  3131  001908  6E19               	movwf	digitalWrite@pin^0,c
  3132  00190A  0E00               	movlw	0
  3133  00190C  6E1C               	movwf	(digitalWrite@value+1)^0,c
  3134  00190E  0E01               	movlw	1
  3135  001910  6E1B               	movwf	digitalWrite@value^0,c
  3136  001912  EC3A  F004         	call	_digitalWrite	;wreg free
  3137                           
  3138                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  3139  001916  0E00               	movlw	0
  3140  001918  6E1A               	movwf	(digitalWrite@pin+1)^0,c
  3141  00191A  0E1F               	movlw	31
  3142  00191C  6E19               	movwf	digitalWrite@pin^0,c
  3143  00191E  0E00               	movlw	0
  3144  001920  6E1C               	movwf	(digitalWrite@value+1)^0,c
  3145  001922  0E00               	movlw	0
  3146  001924  6E1B               	movwf	digitalWrite@value^0,c
  3147  001926  EC3A  F004         	call	_digitalWrite	;wreg free
  3148  00192A  0012               	return		;funcret
  3149  00192C                     __end_of_PulseEnClock:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _PulseClockData *****************
  3153 ;; Defined at:
  3154 ;;		line 14 in file "so.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;		None
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg, status,2, status,0, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3168 ;;      Params:         0       0       0       0       0       0       0
  3169 ;;      Locals:         0       0       0       0       0       0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0
  3171 ;;      Totals:         0       0       0       0       0       0       0
  3172 ;;Total ram usage:        0 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; Hardware stack levels required when called: 1
  3175 ;; This function calls:
  3176 ;;		_digitalWrite
  3177 ;; This function is called by:
  3178 ;;		_soWrite
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text23
  3183  00192C                     __ptext23:
  3184                           	callstack 0
  3185  00192C                     _PulseClockData:
  3186                           	callstack 27
  3187  00192C                     
  3188                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  3189  00192C  0E00               	movlw	0
  3190  00192E  6E1A               	movwf	(digitalWrite@pin+1)^0,c
  3191  001930  0E08               	movlw	8
  3192  001932  6E19               	movwf	digitalWrite@pin^0,c
  3193  001934  0E00               	movlw	0
  3194  001936  6E1C               	movwf	(digitalWrite@value+1)^0,c
  3195  001938  0E01               	movlw	1
  3196  00193A  6E1B               	movwf	digitalWrite@value^0,c
  3197  00193C  EC3A  F004         	call	_digitalWrite	;wreg free
  3198                           
  3199                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  3200  001940  0E00               	movlw	0
  3201  001942  6E1A               	movwf	(digitalWrite@pin+1)^0,c
  3202  001944  0E08               	movlw	8
  3203  001946  6E19               	movwf	digitalWrite@pin^0,c
  3204  001948  0E00               	movlw	0
  3205  00194A  6E1C               	movwf	(digitalWrite@value+1)^0,c
  3206  00194C  0E00               	movlw	0
  3207  00194E  6E1B               	movwf	digitalWrite@value^0,c
  3208  001950  EC3A  F004         	call	_digitalWrite	;wreg free
  3209  001954  0012               	return		;funcret
  3210  001956                     __end_of_PulseClockData:
  3211                           	callstack 0
  3212                           
  3213 ;; *************** function _digitalWrite *****************
  3214 ;; Defined at:
  3215 ;;		line 14 in file "io.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  pin             2    0[COMRAM] int 
  3218 ;;  value           2    2[COMRAM] int 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3230 ;;      Params:         4       0       0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0       0       0
  3232 ;;      Temps:          2       0       0       0       0       0       0
  3233 ;;      Totals:         6       0       0       0       0       0       0
  3234 ;;Total ram usage:        6 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_pulseEnablePin
  3240 ;;		_pushNibble
  3241 ;;		_pushByte
  3242 ;;		_PulseEnClock
  3243 ;;		_PulseClockData
  3244 ;;		_soWrite
  3245 ;;		_ssdUpdate
  3246 ;;		_clear_SCL
  3247 ;;		_clear_SDA
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text24
  3252  000874                     __ptext24:
  3253                           	callstack 0
  3254  000874                     _digitalWrite:
  3255                           	callstack 28
  3256  000874                     
  3257                           ;io.c: 16:     if(pin <8){
  3258  000874  BE1A               	btfsc	(digitalWrite@pin+1)^0,7,c
  3259  000876  EF48  F004         	goto	u1320
  3260  00087A  501A               	movf	(digitalWrite@pin+1)^0,w,c
  3261  00087C  E107               	bnz	u1321
  3262  00087E  0E08               	movlw	8
  3263  000880  5C19               	subwf	digitalWrite@pin^0,w,c
  3264  000882  B0D8               	btfsc	status,0,c
  3265  000884  EF46  F004         	goto	u1321
  3266  000888  EF48  F004         	goto	u1320
  3267  00088C                     u1321:
  3268  00088C  EF72  F004         	goto	l1907
  3269  000890                     u1320:
  3270  000890                     
  3271                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3272  000890  501B               	movf	digitalWrite@value^0,w,c
  3273  000892  101C               	iorwf	(digitalWrite@value+1)^0,w,c
  3274  000894  B4D8               	btfsc	status,2,c
  3275  000896  EF4F  F004         	goto	u1331
  3276  00089A  EF51  F004         	goto	u1330
  3277  00089E                     u1331:
  3278  00089E  EF61  F004         	goto	l1905
  3279  0008A2                     u1330:
  3280  0008A2  C019  F01D         	movff	digitalWrite@pin,??_digitalWrite
  3281  0008A6  0E01               	movlw	1
  3282  0008A8  6E1E               	movwf	(??_digitalWrite+1)^0,c
  3283  0008AA  2A1D               	incf	??_digitalWrite^0,f,c
  3284  0008AC  EF5A  F004         	goto	u1344
  3285  0008B0                     u1345:
  3286  0008B0  90D8               	bcf	status,0,c
  3287  0008B2  361E               	rlcf	(??_digitalWrite+1)^0,f,c
  3288  0008B4                     u1344:
  3289  0008B4  2E1D               	decfsz	??_digitalWrite^0,f,c
  3290  0008B6  EF58  F004         	goto	u1345
  3291  0008BA  501E               	movf	(??_digitalWrite+1)^0,w,c
  3292  0008BC  1280               	iorwf	128,f,c	;volatile
  3293  0008BE  EF60  F005         	goto	l217
  3294  0008C2                     l1905:
  3295  0008C2  C019  F01D         	movff	digitalWrite@pin,??_digitalWrite
  3296  0008C6  0E01               	movlw	1
  3297  0008C8  6E1E               	movwf	(??_digitalWrite+1)^0,c
  3298  0008CA  2A1D               	incf	??_digitalWrite^0,f,c
  3299  0008CC  EF6A  F004         	goto	u1354
  3300  0008D0                     u1355:
  3301  0008D0  90D8               	bcf	status,0,c
  3302  0008D2  361E               	rlcf	(??_digitalWrite+1)^0,f,c
  3303  0008D4                     u1354:
  3304  0008D4  2E1D               	decfsz	??_digitalWrite^0,f,c
  3305  0008D6  EF68  F004         	goto	u1355
  3306  0008DA  501E               	movf	(??_digitalWrite+1)^0,w,c
  3307  0008DC  0AFF               	xorlw	255
  3308  0008DE  1680               	andwf	128,f,c	;volatile
  3309  0008E0  EF60  F005         	goto	l217
  3310  0008E4                     l1907:
  3311  0008E4  BE1A               	btfsc	(digitalWrite@pin+1)^0,7,c
  3312  0008E6  EF80  F004         	goto	u1360
  3313  0008EA  501A               	movf	(digitalWrite@pin+1)^0,w,c
  3314  0008EC  E107               	bnz	u1361
  3315  0008EE  0E10               	movlw	16
  3316  0008F0  5C19               	subwf	digitalWrite@pin^0,w,c
  3317  0008F2  B0D8               	btfsc	status,0,c
  3318  0008F4  EF7E  F004         	goto	u1361
  3319  0008F8  EF80  F004         	goto	u1360
  3320  0008FC                     u1361:
  3321  0008FC  EFAE  F004         	goto	l1915
  3322  000900                     u1360:
  3323  000900                     
  3324                           ;io.c: 20:         pin -=8;
  3325  000900  0EF8               	movlw	248
  3326  000902  2619               	addwf	digitalWrite@pin^0,f,c
  3327  000904  0EFF               	movlw	255
  3328  000906  221A               	addwfc	(digitalWrite@pin+1)^0,f,c
  3329                           
  3330                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3331  000908  501B               	movf	digitalWrite@value^0,w,c
  3332  00090A  101C               	iorwf	(digitalWrite@value+1)^0,w,c
  3333  00090C  B4D8               	btfsc	status,2,c
  3334  00090E  EF8B  F004         	goto	u1371
  3335  000912  EF8D  F004         	goto	u1370
  3336  000916                     u1371:
  3337  000916  EF9D  F004         	goto	l1913
  3338  00091A                     u1370:
  3339  00091A  C019  F01D         	movff	digitalWrite@pin,??_digitalWrite
  3340  00091E  0E01               	movlw	1
  3341  000920  6E1E               	movwf	(??_digitalWrite+1)^0,c
  3342  000922  2A1D               	incf	??_digitalWrite^0,f,c
  3343  000924  EF96  F004         	goto	u1384
  3344  000928                     u1385:
  3345  000928  90D8               	bcf	status,0,c
  3346  00092A  361E               	rlcf	(??_digitalWrite+1)^0,f,c
  3347  00092C                     u1384:
  3348  00092C  2E1D               	decfsz	??_digitalWrite^0,f,c
  3349  00092E  EF94  F004         	goto	u1385
  3350  000932  501E               	movf	(??_digitalWrite+1)^0,w,c
  3351  000934  1281               	iorwf	129,f,c	;volatile
  3352  000936  EF60  F005         	goto	l217
  3353  00093A                     l1913:
  3354  00093A  C019  F01D         	movff	digitalWrite@pin,??_digitalWrite
  3355  00093E  0E01               	movlw	1
  3356  000940  6E1E               	movwf	(??_digitalWrite+1)^0,c
  3357  000942  2A1D               	incf	??_digitalWrite^0,f,c
  3358  000944  EFA6  F004         	goto	u1394
  3359  000948                     u1395:
  3360  000948  90D8               	bcf	status,0,c
  3361  00094A  361E               	rlcf	(??_digitalWrite+1)^0,f,c
  3362  00094C                     u1394:
  3363  00094C  2E1D               	decfsz	??_digitalWrite^0,f,c
  3364  00094E  EFA4  F004         	goto	u1395
  3365  000952  501E               	movf	(??_digitalWrite+1)^0,w,c
  3366  000954  0AFF               	xorlw	255
  3367  000956  1681               	andwf	129,f,c	;volatile
  3368  000958  EF60  F005         	goto	l217
  3369  00095C                     l1915:
  3370  00095C  BE1A               	btfsc	(digitalWrite@pin+1)^0,7,c
  3371  00095E  EFBC  F004         	goto	u1400
  3372  000962  501A               	movf	(digitalWrite@pin+1)^0,w,c
  3373  000964  E107               	bnz	u1401
  3374  000966  0E18               	movlw	24
  3375  000968  5C19               	subwf	digitalWrite@pin^0,w,c
  3376  00096A  B0D8               	btfsc	status,0,c
  3377  00096C  EFBA  F004         	goto	u1401
  3378  000970  EFBC  F004         	goto	u1400
  3379  000974                     u1401:
  3380  000974  EFEA  F004         	goto	l1923
  3381  000978                     u1400:
  3382  000978                     
  3383                           ;io.c: 24:         pin -=16;
  3384  000978  0EF0               	movlw	240
  3385  00097A  2619               	addwf	digitalWrite@pin^0,f,c
  3386  00097C  0EFF               	movlw	255
  3387  00097E  221A               	addwfc	(digitalWrite@pin+1)^0,f,c
  3388                           
  3389                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  3390  000980  501B               	movf	digitalWrite@value^0,w,c
  3391  000982  101C               	iorwf	(digitalWrite@value+1)^0,w,c
  3392  000984  B4D8               	btfsc	status,2,c
  3393  000986  EFC7  F004         	goto	u1411
  3394  00098A  EFC9  F004         	goto	u1410
  3395  00098E                     u1411:
  3396  00098E  EFD9  F004         	goto	l1921
  3397  000992                     u1410:
  3398  000992  C019  F01D         	movff	digitalWrite@pin,??_digitalWrite
  3399  000996  0E01               	movlw	1
  3400  000998  6E1E               	movwf	(??_digitalWrite+1)^0,c
  3401  00099A  2A1D               	incf	??_digitalWrite^0,f,c
  3402  00099C  EFD2  F004         	goto	u1424
  3403  0009A0                     u1425:
  3404  0009A0  90D8               	bcf	status,0,c
  3405  0009A2  361E               	rlcf	(??_digitalWrite+1)^0,f,c
  3406  0009A4                     u1424:
  3407  0009A4  2E1D               	decfsz	??_digitalWrite^0,f,c
  3408  0009A6  EFD0  F004         	goto	u1425
  3409  0009AA  501E               	movf	(??_digitalWrite+1)^0,w,c
  3410  0009AC  1282               	iorwf	130,f,c	;volatile
  3411  0009AE  EF60  F005         	goto	l217
  3412  0009B2                     l1921:
  3413  0009B2  C019  F01D         	movff	digitalWrite@pin,??_digitalWrite
  3414  0009B6  0E01               	movlw	1
  3415  0009B8  6E1E               	movwf	(??_digitalWrite+1)^0,c
  3416  0009BA  2A1D               	incf	??_digitalWrite^0,f,c
  3417  0009BC  EFE2  F004         	goto	u1434
  3418  0009C0                     u1435:
  3419  0009C0  90D8               	bcf	status,0,c
  3420  0009C2  361E               	rlcf	(??_digitalWrite+1)^0,f,c
  3421  0009C4                     u1434:
  3422  0009C4  2E1D               	decfsz	??_digitalWrite^0,f,c
  3423  0009C6  EFE0  F004         	goto	u1435
  3424  0009CA  501E               	movf	(??_digitalWrite+1)^0,w,c
  3425  0009CC  0AFF               	xorlw	255
  3426  0009CE  1682               	andwf	130,f,c	;volatile
  3427  0009D0  EF60  F005         	goto	l217
  3428  0009D4                     l1923:
  3429  0009D4  BE1A               	btfsc	(digitalWrite@pin+1)^0,7,c
  3430  0009D6  EFF8  F004         	goto	u1440
  3431  0009DA  501A               	movf	(digitalWrite@pin+1)^0,w,c
  3432  0009DC  E107               	bnz	u1441
  3433  0009DE  0E20               	movlw	32
  3434  0009E0  5C19               	subwf	digitalWrite@pin^0,w,c
  3435  0009E2  B0D8               	btfsc	status,0,c
  3436  0009E4  EFF6  F004         	goto	u1441
  3437  0009E8  EFF8  F004         	goto	u1440
  3438  0009EC                     u1441:
  3439  0009EC  EF26  F005         	goto	l1931
  3440  0009F0                     u1440:
  3441  0009F0                     
  3442                           ;io.c: 28:         pin -=24;
  3443  0009F0  0EE8               	movlw	232
  3444  0009F2  2619               	addwf	digitalWrite@pin^0,f,c
  3445  0009F4  0EFF               	movlw	255
  3446  0009F6  221A               	addwfc	(digitalWrite@pin+1)^0,f,c
  3447                           
  3448                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  3449  0009F8  501B               	movf	digitalWrite@value^0,w,c
  3450  0009FA  101C               	iorwf	(digitalWrite@value+1)^0,w,c
  3451  0009FC  B4D8               	btfsc	status,2,c
  3452  0009FE  EF03  F005         	goto	u1451
  3453  000A02  EF05  F005         	goto	u1450
  3454  000A06                     u1451:
  3455  000A06  EF15  F005         	goto	l1929
  3456  000A0A                     u1450:
  3457  000A0A  C019  F01D         	movff	digitalWrite@pin,??_digitalWrite
  3458  000A0E  0E01               	movlw	1
  3459  000A10  6E1E               	movwf	(??_digitalWrite+1)^0,c
  3460  000A12  2A1D               	incf	??_digitalWrite^0,f,c
  3461  000A14  EF0E  F005         	goto	u1464
  3462  000A18                     u1465:
  3463  000A18  90D8               	bcf	status,0,c
  3464  000A1A  361E               	rlcf	(??_digitalWrite+1)^0,f,c
  3465  000A1C                     u1464:
  3466  000A1C  2E1D               	decfsz	??_digitalWrite^0,f,c
  3467  000A1E  EF0C  F005         	goto	u1465
  3468  000A22  501E               	movf	(??_digitalWrite+1)^0,w,c
  3469  000A24  1283               	iorwf	131,f,c	;volatile
  3470  000A26  EF60  F005         	goto	l217
  3471  000A2A                     l1929:
  3472  000A2A  C019  F01D         	movff	digitalWrite@pin,??_digitalWrite
  3473  000A2E  0E01               	movlw	1
  3474  000A30  6E1E               	movwf	(??_digitalWrite+1)^0,c
  3475  000A32  2A1D               	incf	??_digitalWrite^0,f,c
  3476  000A34  EF1E  F005         	goto	u1474
  3477  000A38                     u1475:
  3478  000A38  90D8               	bcf	status,0,c
  3479  000A3A  361E               	rlcf	(??_digitalWrite+1)^0,f,c
  3480  000A3C                     u1474:
  3481  000A3C  2E1D               	decfsz	??_digitalWrite^0,f,c
  3482  000A3E  EF1C  F005         	goto	u1475
  3483  000A42  501E               	movf	(??_digitalWrite+1)^0,w,c
  3484  000A44  0AFF               	xorlw	255
  3485  000A46  1683               	andwf	131,f,c	;volatile
  3486  000A48  EF60  F005         	goto	l217
  3487  000A4C                     l1931:
  3488  000A4C  BE1A               	btfsc	(digitalWrite@pin+1)^0,7,c
  3489  000A4E  EF34  F005         	goto	u1480
  3490  000A52  501A               	movf	(digitalWrite@pin+1)^0,w,c
  3491  000A54  E107               	bnz	u1481
  3492  000A56  0E28               	movlw	40
  3493  000A58  5C19               	subwf	digitalWrite@pin^0,w,c
  3494  000A5A  B0D8               	btfsc	status,0,c
  3495  000A5C  EF32  F005         	goto	u1481
  3496  000A60  EF34  F005         	goto	u1480
  3497  000A64                     u1481:
  3498  000A64  EF60  F005         	goto	l217
  3499  000A68                     u1480:
  3500  000A68                     
  3501                           ;io.c: 32:         pin -=32;
  3502  000A68  0EE0               	movlw	224
  3503  000A6A  2619               	addwf	digitalWrite@pin^0,f,c
  3504  000A6C  0EFF               	movlw	255
  3505  000A6E  221A               	addwfc	(digitalWrite@pin+1)^0,f,c
  3506                           
  3507                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  3508  000A70  501B               	movf	digitalWrite@value^0,w,c
  3509  000A72  101C               	iorwf	(digitalWrite@value+1)^0,w,c
  3510  000A74  B4D8               	btfsc	status,2,c
  3511  000A76  EF3F  F005         	goto	u1491
  3512  000A7A  EF41  F005         	goto	u1490
  3513  000A7E                     u1491:
  3514  000A7E  EF51  F005         	goto	l1937
  3515  000A82                     u1490:
  3516  000A82  C019  F01D         	movff	digitalWrite@pin,??_digitalWrite
  3517  000A86  0E01               	movlw	1
  3518  000A88  6E1E               	movwf	(??_digitalWrite+1)^0,c
  3519  000A8A  2A1D               	incf	??_digitalWrite^0,f,c
  3520  000A8C  EF4A  F005         	goto	u1504
  3521  000A90                     u1505:
  3522  000A90  90D8               	bcf	status,0,c
  3523  000A92  361E               	rlcf	(??_digitalWrite+1)^0,f,c
  3524  000A94                     u1504:
  3525  000A94  2E1D               	decfsz	??_digitalWrite^0,f,c
  3526  000A96  EF48  F005         	goto	u1505
  3527  000A9A  501E               	movf	(??_digitalWrite+1)^0,w,c
  3528  000A9C  1284               	iorwf	132,f,c	;volatile
  3529  000A9E  EF60  F005         	goto	l217
  3530  000AA2                     l1937:
  3531  000AA2  C019  F01D         	movff	digitalWrite@pin,??_digitalWrite
  3532  000AA6  0E01               	movlw	1
  3533  000AA8  6E1E               	movwf	(??_digitalWrite+1)^0,c
  3534  000AAA  2A1D               	incf	??_digitalWrite^0,f,c
  3535  000AAC  EF5A  F005         	goto	u1514
  3536  000AB0                     u1515:
  3537  000AB0  90D8               	bcf	status,0,c
  3538  000AB2  361E               	rlcf	(??_digitalWrite+1)^0,f,c
  3539  000AB4                     u1514:
  3540  000AB4  2E1D               	decfsz	??_digitalWrite^0,f,c
  3541  000AB6  EF58  F005         	goto	u1515
  3542  000ABA  501E               	movf	(??_digitalWrite+1)^0,w,c
  3543  000ABC  0AFF               	xorlw	255
  3544  000ABE  1684               	andwf	132,f,c	;volatile
  3545  000AC0                     l217:
  3546  000AC0  0012               	return		;funcret
  3547  000AC2                     __end_of_digitalWrite:
  3548                           	callstack 0
  3549                           
  3550 ;; *************** function _digitalRead *****************
  3551 ;; Defined at:
  3552 ;;		line 39 in file "io.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  pin             2    0[COMRAM] int 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  2    0[COMRAM] int 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3566 ;;      Params:         2       0       0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0       0       0
  3568 ;;      Temps:          3       0       0       0       0       0       0
  3569 ;;      Totals:         5       0       0       0       0       0       0
  3570 ;;Total ram usage:        5 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_kpDebounce
  3576 ;;		_read_SCL
  3577 ;;		_read_SDA
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text25
  3582  00105C                     __ptext25:
  3583                           	callstack 0
  3584  00105C                     _digitalRead:
  3585                           	callstack 29
  3586  00105C                     
  3587                           ;io.c: 40:     if(pin <8){
  3588  00105C  BE1A               	btfsc	(digitalRead@pin+1)^0,7,c
  3589  00105E  EF3C  F008         	goto	u1760
  3590  001062  501A               	movf	(digitalRead@pin+1)^0,w,c
  3591  001064  E107               	bnz	u1761
  3592  001066  0E08               	movlw	8
  3593  001068  5C19               	subwf	digitalRead@pin^0,w,c
  3594  00106A  B0D8               	btfsc	status,0,c
  3595  00106C  EF3A  F008         	goto	u1761
  3596  001070  EF3C  F008         	goto	u1760
  3597  001074                     u1761:
  3598  001074  EF50  F008         	goto	l2033
  3599  001078                     u1760:
  3600  001078                     
  3601                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  3602  001078  C019  F01B         	movff	digitalRead@pin,??_digitalRead
  3603  00107C  0E01               	movlw	1
  3604  00107E  6E1C               	movwf	(??_digitalRead+1)^0,c
  3605  001080  2A1B               	incf	??_digitalRead^0,f,c
  3606  001082  EF45  F008         	goto	u1774
  3607  001086                     u1775:
  3608  001086  90D8               	bcf	status,0,c
  3609  001088  361C               	rlcf	(??_digitalRead+1)^0,f,c
  3610  00108A                     u1774:
  3611  00108A  2E1B               	decfsz	??_digitalRead^0,f,c
  3612  00108C  EF43  F008         	goto	u1775
  3613  001090  501C               	movf	(??_digitalRead+1)^0,w,c
  3614  001092  1480               	andwf	128,w,c	;volatile
  3615  001094  6E1D               	movwf	(??_digitalRead+2)^0,c
  3616  001096  501D               	movf	(??_digitalRead+2)^0,w,c
  3617  001098  6E19               	movwf	?_digitalRead^0,c
  3618  00109A  6A1A               	clrf	(?_digitalRead+1)^0,c
  3619  00109C  EFE2  F008         	goto	l221
  3620  0010A0                     l2033:
  3621  0010A0  BE1A               	btfsc	(digitalRead@pin+1)^0,7,c
  3622  0010A2  EF5E  F008         	goto	u1780
  3623  0010A6  501A               	movf	(digitalRead@pin+1)^0,w,c
  3624  0010A8  E107               	bnz	u1781
  3625  0010AA  0E10               	movlw	16
  3626  0010AC  5C19               	subwf	digitalRead@pin^0,w,c
  3627  0010AE  B0D8               	btfsc	status,0,c
  3628  0010B0  EF5C  F008         	goto	u1781
  3629  0010B4  EF5E  F008         	goto	u1780
  3630  0010B8                     u1781:
  3631  0010B8  EF74  F008         	goto	l2041
  3632  0010BC                     u1780:
  3633  0010BC                     
  3634                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  3635  0010BC  C019  F01B         	movff	digitalRead@pin,??_digitalRead
  3636  0010C0  0EF8               	movlw	-8
  3637  0010C2  261B               	addwf	??_digitalRead^0,f,c
  3638  0010C4  0E01               	movlw	1
  3639  0010C6  6E1C               	movwf	(??_digitalRead+1)^0,c
  3640  0010C8  2A1B               	incf	??_digitalRead^0,f,c
  3641  0010CA  EF69  F008         	goto	u1794
  3642  0010CE                     u1795:
  3643  0010CE  90D8               	bcf	status,0,c
  3644  0010D0  361C               	rlcf	(??_digitalRead+1)^0,f,c
  3645  0010D2                     u1794:
  3646  0010D2  2E1B               	decfsz	??_digitalRead^0,f,c
  3647  0010D4  EF67  F008         	goto	u1795
  3648  0010D8  501C               	movf	(??_digitalRead+1)^0,w,c
  3649  0010DA  1481               	andwf	129,w,c	;volatile
  3650  0010DC  6E1D               	movwf	(??_digitalRead+2)^0,c
  3651  0010DE  501D               	movf	(??_digitalRead+2)^0,w,c
  3652  0010E0  6E19               	movwf	?_digitalRead^0,c
  3653  0010E2  6A1A               	clrf	(?_digitalRead+1)^0,c
  3654  0010E4  EFE2  F008         	goto	l221
  3655  0010E8                     l2041:
  3656  0010E8  BE1A               	btfsc	(digitalRead@pin+1)^0,7,c
  3657  0010EA  EF82  F008         	goto	u1800
  3658  0010EE  501A               	movf	(digitalRead@pin+1)^0,w,c
  3659  0010F0  E107               	bnz	u1801
  3660  0010F2  0E18               	movlw	24
  3661  0010F4  5C19               	subwf	digitalRead@pin^0,w,c
  3662  0010F6  B0D8               	btfsc	status,0,c
  3663  0010F8  EF80  F008         	goto	u1801
  3664  0010FC  EF82  F008         	goto	u1800
  3665  001100                     u1801:
  3666  001100  EF98  F008         	goto	l2049
  3667  001104                     u1800:
  3668  001104                     
  3669                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  3670  001104  C019  F01B         	movff	digitalRead@pin,??_digitalRead
  3671  001108  0EF0               	movlw	-16
  3672  00110A  261B               	addwf	??_digitalRead^0,f,c
  3673  00110C  0E01               	movlw	1
  3674  00110E  6E1C               	movwf	(??_digitalRead+1)^0,c
  3675  001110  2A1B               	incf	??_digitalRead^0,f,c
  3676  001112  EF8D  F008         	goto	u1814
  3677  001116                     u1815:
  3678  001116  90D8               	bcf	status,0,c
  3679  001118  361C               	rlcf	(??_digitalRead+1)^0,f,c
  3680  00111A                     u1814:
  3681  00111A  2E1B               	decfsz	??_digitalRead^0,f,c
  3682  00111C  EF8B  F008         	goto	u1815
  3683  001120  501C               	movf	(??_digitalRead+1)^0,w,c
  3684  001122  1482               	andwf	130,w,c	;volatile
  3685  001124  6E1D               	movwf	(??_digitalRead+2)^0,c
  3686  001126  501D               	movf	(??_digitalRead+2)^0,w,c
  3687  001128  6E19               	movwf	?_digitalRead^0,c
  3688  00112A  6A1A               	clrf	(?_digitalRead+1)^0,c
  3689  00112C  EFE2  F008         	goto	l221
  3690  001130                     l2049:
  3691  001130  BE1A               	btfsc	(digitalRead@pin+1)^0,7,c
  3692  001132  EFA6  F008         	goto	u1820
  3693  001136  501A               	movf	(digitalRead@pin+1)^0,w,c
  3694  001138  E107               	bnz	u1821
  3695  00113A  0E20               	movlw	32
  3696  00113C  5C19               	subwf	digitalRead@pin^0,w,c
  3697  00113E  B0D8               	btfsc	status,0,c
  3698  001140  EFA4  F008         	goto	u1821
  3699  001144  EFA6  F008         	goto	u1820
  3700  001148                     u1821:
  3701  001148  EFBC  F008         	goto	l2057
  3702  00114C                     u1820:
  3703  00114C                     
  3704                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  3705  00114C  C019  F01B         	movff	digitalRead@pin,??_digitalRead
  3706  001150  0EE8               	movlw	-24
  3707  001152  261B               	addwf	??_digitalRead^0,f,c
  3708  001154  0E01               	movlw	1
  3709  001156  6E1C               	movwf	(??_digitalRead+1)^0,c
  3710  001158  2A1B               	incf	??_digitalRead^0,f,c
  3711  00115A  EFB1  F008         	goto	u1834
  3712  00115E                     u1835:
  3713  00115E  90D8               	bcf	status,0,c
  3714  001160  361C               	rlcf	(??_digitalRead+1)^0,f,c
  3715  001162                     u1834:
  3716  001162  2E1B               	decfsz	??_digitalRead^0,f,c
  3717  001164  EFAF  F008         	goto	u1835
  3718  001168  501C               	movf	(??_digitalRead+1)^0,w,c
  3719  00116A  1483               	andwf	131,w,c	;volatile
  3720  00116C  6E1D               	movwf	(??_digitalRead+2)^0,c
  3721  00116E  501D               	movf	(??_digitalRead+2)^0,w,c
  3722  001170  6E19               	movwf	?_digitalRead^0,c
  3723  001172  6A1A               	clrf	(?_digitalRead+1)^0,c
  3724  001174  EFE2  F008         	goto	l221
  3725  001178                     l2057:
  3726  001178  BE1A               	btfsc	(digitalRead@pin+1)^0,7,c
  3727  00117A  EFCA  F008         	goto	u1840
  3728  00117E  501A               	movf	(digitalRead@pin+1)^0,w,c
  3729  001180  E107               	bnz	u1841
  3730  001182  0E28               	movlw	40
  3731  001184  5C19               	subwf	digitalRead@pin^0,w,c
  3732  001186  B0D8               	btfsc	status,0,c
  3733  001188  EFC8  F008         	goto	u1841
  3734  00118C  EFCA  F008         	goto	u1840
  3735  001190                     u1841:
  3736  001190  EFE0  F008         	goto	l226
  3737  001194                     u1840:
  3738  001194                     
  3739                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  3740  001194  C019  F01B         	movff	digitalRead@pin,??_digitalRead
  3741  001198  0EE0               	movlw	-32
  3742  00119A  261B               	addwf	??_digitalRead^0,f,c
  3743  00119C  0E01               	movlw	1
  3744  00119E  6E1C               	movwf	(??_digitalRead+1)^0,c
  3745  0011A0  2A1B               	incf	??_digitalRead^0,f,c
  3746  0011A2  EFD5  F008         	goto	u1854
  3747  0011A6                     u1855:
  3748  0011A6  90D8               	bcf	status,0,c
  3749  0011A8  361C               	rlcf	(??_digitalRead+1)^0,f,c
  3750  0011AA                     u1854:
  3751  0011AA  2E1B               	decfsz	??_digitalRead^0,f,c
  3752  0011AC  EFD3  F008         	goto	u1855
  3753  0011B0  501C               	movf	(??_digitalRead+1)^0,w,c
  3754  0011B2  1484               	andwf	132,w,c	;volatile
  3755  0011B4  6E1D               	movwf	(??_digitalRead+2)^0,c
  3756  0011B6  501D               	movf	(??_digitalRead+2)^0,w,c
  3757  0011B8  6E19               	movwf	?_digitalRead^0,c
  3758  0011BA  6A1A               	clrf	(?_digitalRead+1)^0,c
  3759  0011BC  EFE2  F008         	goto	l221
  3760  0011C0                     l226:
  3761  0011C0                     
  3762                           ;io.c: 51:     return -1;
  3763  0011C0  6819               	setf	?_digitalRead^0,c
  3764  0011C2  681A               	setf	(?_digitalRead+1)^0,c
  3765  0011C4                     l221:
  3766  0011C4  0012               	return		;funcret
  3767  0011C6                     __end_of_digitalRead:
  3768                           	callstack 0
  3769                           
  3770 ;; *************** function _atraso_ms *****************
  3771 ;; Defined at:
  3772 ;;		line 2 in file "atraso.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  num             2    0[COMRAM] unsigned int 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  i               2    2[COMRAM] int 
  3777 ;;  k               1    5[COMRAM] volatile unsigned char 
  3778 ;;  j               1    4[COMRAM] volatile unsigned char 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3788 ;;      Params:         2       0       0       0       0       0       0
  3789 ;;      Locals:         4       0       0       0       0       0       0
  3790 ;;      Temps:          0       0       0       0       0       0       0
  3791 ;;      Totals:         6       0       0       0       0       0       0
  3792 ;;Total ram usage:        6 bytes
  3793 ;; Hardware stack levels used: 1
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text26
  3802  001610                     __ptext26:
  3803                           	callstack 0
  3804  001610                     _atraso_ms:
  3805                           	callstack 30
  3806  001610                     
  3807                           ;atraso.c: 3:     volatile unsigned char j, k;;atraso.c: 4:     for (int i = 0; i < num;
      +                           i++) {
  3808  001610  0E00               	movlw	0
  3809  001612  6E1C               	movwf	(atraso_ms@i+1)^0,c
  3810  001614  0E00               	movlw	0
  3811  001616  6E1B               	movwf	atraso_ms@i^0,c
  3812  001618  EF2E  F00B         	goto	l2369
  3813  00161C                     l2347:
  3814                           
  3815                           ;atraso.c: 5:         for (j = 0; j < 41; j++) {
  3816  00161C  0E00               	movlw	0
  3817  00161E  6E1D               	movwf	atraso_ms@j^0,c	;volatile
  3818  001620                     l2349:
  3819  001620  0E28               	movlw	40
  3820  001622  641D               	cpfsgt	atraso_ms@j^0,c	;volatile
  3821  001624  EF16  F00B         	goto	u2291
  3822  001628  EF18  F00B         	goto	u2290
  3823  00162C                     u2291:
  3824  00162C  EF1A  F00B         	goto	l2353
  3825  001630                     u2290:
  3826  001630  EF2C  F00B         	goto	l2367
  3827  001634                     l2353:
  3828                           
  3829                           ;atraso.c: 6:             for (k = 0; k < 3; k++);
  3830  001634  0E00               	movlw	0
  3831  001636  6E1E               	movwf	atraso_ms@k^0,c	;volatile
  3832  001638                     l2355:
  3833  001638  0E02               	movlw	2
  3834  00163A  641E               	cpfsgt	atraso_ms@k^0,c	;volatile
  3835  00163C  EF22  F00B         	goto	u2301
  3836  001640  EF24  F00B         	goto	u2300
  3837  001644                     u2301:
  3838  001644  EF26  F00B         	goto	l2359
  3839  001648                     u2300:
  3840  001648  EF29  F00B         	goto	l2363
  3841  00164C                     l2359:
  3842  00164C  2A1E               	incf	atraso_ms@k^0,f,c	;volatile
  3843  00164E  EF1C  F00B         	goto	l2355
  3844  001652                     l2363:
  3845                           
  3846                           ;atraso.c: 7:         }
  3847  001652  2A1D               	incf	atraso_ms@j^0,f,c	;volatile
  3848  001654  EF10  F00B         	goto	l2349
  3849  001658                     l2367:
  3850                           
  3851                           ;atraso.c: 9:     }
  3852  001658  4A1B               	infsnz	atraso_ms@i^0,f,c
  3853  00165A  2A1C               	incf	(atraso_ms@i+1)^0,f,c
  3854  00165C                     l2369:
  3855  00165C  5019               	movf	atraso_ms@num^0,w,c
  3856  00165E  5C1B               	subwf	atraso_ms@i^0,w,c
  3857  001660  501A               	movf	(atraso_ms@num+1)^0,w,c
  3858  001662  581C               	subwfb	(atraso_ms@i+1)^0,w,c
  3859  001664  A0D8               	btfss	status,0,c
  3860  001666  EF37  F00B         	goto	u2311
  3861  00166A  EF39  F00B         	goto	u2310
  3862  00166E                     u2311:
  3863  00166E  EF0E  F00B         	goto	l2347
  3864  001672                     u2310:
  3865  001672  0012               	return		;funcret
  3866  001674                     __end_of_atraso_ms:
  3867                           	callstack 0
  3868                           
  3869 ;; *************** function _LeTeclado *****************
  3870 ;; Defined at:
  3871 ;;		line 24 in file "main.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;		None
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3885 ;;      Params:         0       0       0       0       0       0       0
  3886 ;;      Locals:         0       0       0       0       0       0       0
  3887 ;;      Temps:          2       0       0       0       0       0       0
  3888 ;;      Totals:         2       0       0       0       0       0       0
  3889 ;;Total ram usage:        2 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 1
  3892 ;; This function calls:
  3893 ;;		_kpRead
  3894 ;;		_kpReadKey
  3895 ;; This function is called by:
  3896 ;;		_main
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text27
  3901  000AC2                     __ptext27:
  3902                           	callstack 0
  3903  000AC2                     _LeTeclado:
  3904                           	callstack 29
  3905  000AC2                     
  3906                           ;main.c: 25:     if(kpRead() != leitura){
  3907  000AC2  ECE7  F00C         	call	_kpRead	;wreg free
  3908  000AC6  500D               	movf	_leitura^0,w,c
  3909  000AC8  1819               	xorwf	?_kpRead^0,w,c
  3910  000ACA  E109               	bnz	u2000
  3911  000ACC  500E               	movf	(_leitura+1)^0,w,c
  3912  000ACE  181A               	xorwf	(?_kpRead+1)^0,w,c
  3913  000AD0  B4D8               	btfsc	status,2,c
  3914  000AD2  EF6D  F005         	goto	u2001
  3915  000AD6  EF6F  F005         	goto	u2000
  3916  000ADA                     u2001:
  3917  000ADA  EF7A  F006         	goto	l73
  3918  000ADE                     u2000:
  3919  000ADE                     
  3920                           ;main.c: 26:         leitura = kpRead();
  3921  000ADE  ECE7  F00C         	call	_kpRead	;wreg free
  3922  000AE2  C019  F00D         	movff	?_kpRead,_leitura
  3923  000AE6  C01A  F00E         	movff	?_kpRead+1,_leitura+1
  3924                           
  3925                           ;main.c: 28:         switch(kpReadKey()){
  3926  000AEA  EF38  F006         	goto	l2217
  3927  000AEE                     l2161:
  3928                           
  3929                           ;main.c: 30:                 if(estado == 0){
  3930  000AEE  5017               	movf	_estado^0,w,c
  3931  000AF0  A4D8               	btfss	status,2,c
  3932  000AF2  EF7D  F005         	goto	u2011
  3933  000AF6  EF7F  F005         	goto	u2010
  3934  000AFA                     u2011:
  3935  000AFA  EF88  F005         	goto	l2167
  3936  000AFE                     u2010:
  3937  000AFE                     
  3938                           ;main.c: 31:                     vel = 100;
  3939  000AFE  0E00               	movlw	0
  3940  000B00  6E08               	movwf	(_vel+1)^0,c
  3941  000B02  0E64               	movlw	100
  3942  000B04  6E07               	movwf	_vel^0,c
  3943                           
  3944                           ;main.c: 32:                     estado = 1;
  3945  000B06  0E01               	movlw	1
  3946  000B08  6E17               	movwf	_estado^0,c
  3947  000B0A                     l2165:
  3948                           
  3949                           ;main.c: 33:                     PORTD = 0xFF;
  3950  000B0A  6883               	setf	131,c	;volatile
  3951                           
  3952                           ;main.c: 34:                 }else if((estado != 3)&&(falha == 0)){
  3953  000B0C  EF9D  F005         	goto	l2175
  3954  000B10                     l2167:
  3955  000B10  0E03               	movlw	3
  3956  000B12  1817               	xorwf	_estado^0,w,c
  3957  000B14  B4D8               	btfsc	status,2,c
  3958  000B16  EF8F  F005         	goto	u2021
  3959  000B1A  EF91  F005         	goto	u2020
  3960  000B1E                     u2021:
  3961  000B1E  EF9D  F005         	goto	l2175
  3962  000B22                     u2020:
  3963  000B22  5016               	movf	_falha^0,w,c
  3964  000B24  A4D8               	btfss	status,2,c
  3965  000B26  EF97  F005         	goto	u2031
  3966  000B2A  EF99  F005         	goto	u2030
  3967  000B2E                     u2031:
  3968  000B2E  EF9D  F005         	goto	l2175
  3969  000B32                     u2030:
  3970  000B32                     
  3971                           ;main.c: 35:                     estado = 3;
  3972  000B32  0E03               	movlw	3
  3973  000B34  6E17               	movwf	_estado^0,c
  3974  000B36  EF85  F005         	goto	l2165
  3975  000B3A                     l2175:
  3976                           
  3977                           ;main.c: 38:                 if(vel>0)alt = alt + vel;
  3978  000B3A  5007               	movf	_vel^0,w,c
  3979  000B3C  1008               	iorwf	(_vel+1)^0,w,c
  3980  000B3E  B4D8               	btfsc	status,2,c
  3981  000B40  EFA4  F005         	goto	u2041
  3982  000B44  EFA6  F005         	goto	u2040
  3983  000B48                     u2041:
  3984  000B48  EFAC  F005         	goto	l55
  3985  000B4C                     u2040:
  3986  000B4C                     l2177:
  3987  000B4C  5007               	movf	_vel^0,w,c
  3988  000B4E  2409               	addwf	_alt^0,w,c
  3989  000B50  6E09               	movwf	_alt^0,c
  3990  000B52  5008               	movf	(_vel+1)^0,w,c
  3991  000B54  200A               	addwfc	(_alt+1)^0,w,c
  3992  000B56  6E0A               	movwf	(_alt+1)^0,c
  3993  000B58                     l55:
  3994                           
  3995                           ;main.c: 39:                 tempo = tempo + 1;
  3996  000B58  0E01               	movlw	1
  3997  000B5A  240B               	addwf	_tempo^0,w,c
  3998  000B5C  6E0B               	movwf	_tempo^0,c
  3999  000B5E  0E00               	movlw	0
  4000  000B60  200C               	addwfc	(_tempo+1)^0,w,c
  4001  000B62  6E0C               	movwf	(_tempo+1)^0,c
  4002                           
  4003                           ;main.c: 40:                 break;
  4004  000B64  EF5A  F006         	goto	l2219
  4005  000B68                     l2179:
  4006                           
  4007                           ;main.c: 42:                 if((alt<1500)&&(vel<401)){
  4008  000B68  0EDC               	movlw	220
  4009  000B6A  5C09               	subwf	_alt^0,w,c
  4010  000B6C  0E05               	movlw	5
  4011  000B6E  580A               	subwfb	(_alt+1)^0,w,c
  4012  000B70  B0D8               	btfsc	status,0,c
  4013  000B72  EFBD  F005         	goto	u2051
  4014  000B76  EFBF  F005         	goto	u2050
  4015  000B7A                     u2051:
  4016  000B7A  EFD0  F005         	goto	l58
  4017  000B7E                     u2050:
  4018  000B7E  0E91               	movlw	145
  4019  000B80  5C07               	subwf	_vel^0,w,c
  4020  000B82  0E01               	movlw	1
  4021  000B84  5808               	subwfb	(_vel+1)^0,w,c
  4022  000B86  B0D8               	btfsc	status,0,c
  4023  000B88  EFC8  F005         	goto	u2061
  4024  000B8C  EFCA  F005         	goto	u2060
  4025  000B90                     u2061:
  4026  000B90  EFD0  F005         	goto	l58
  4027  000B94                     u2060:
  4028  000B94                     
  4029                           ;main.c: 43:                     vel = vel + 50;
  4030  000B94  0E32               	movlw	50
  4031  000B96  2407               	addwf	_vel^0,w,c
  4032  000B98  6E07               	movwf	_vel^0,c
  4033  000B9A  0E00               	movlw	0
  4034  000B9C  2008               	addwfc	(_vel+1)^0,w,c
  4035  000B9E  6E08               	movwf	(_vel+1)^0,c
  4036  000BA0                     l58:
  4037                           
  4038                           ;main.c: 45:                 if(vel>0)alt = alt + vel;
  4039  000BA0  5007               	movf	_vel^0,w,c
  4040  000BA2  1008               	iorwf	(_vel+1)^0,w,c
  4041  000BA4  B4D8               	btfsc	status,2,c
  4042  000BA6  EFD7  F005         	goto	u2071
  4043  000BAA  EFD9  F005         	goto	u2070
  4044  000BAE                     u2071:
  4045  000BAE  EFAC  F005         	goto	l55
  4046  000BB2                     u2070:
  4047  000BB2  EFA6  F005         	goto	l2177
  4048  000BB6                     l2187:
  4049                           
  4050                           ;main.c: 49:                 if(vel>49){
  4051  000BB6  5008               	movf	(_vel+1)^0,w,c
  4052  000BB8  E109               	bnz	u2080
  4053  000BBA  0E32               	movlw	50
  4054  000BBC  5C07               	subwf	_vel^0,w,c
  4055  000BBE  A0D8               	btfss	status,0,c
  4056  000BC0  EFE4  F005         	goto	u2081
  4057  000BC4  EFE6  F005         	goto	u2080
  4058  000BC8                     u2081:
  4059  000BC8  EFEE  F005         	goto	l2191
  4060  000BCC                     u2080:
  4061  000BCC                     
  4062                           ;main.c: 50:                     vel = vel - 50;
  4063  000BCC  0ECE               	movlw	206
  4064  000BCE  2407               	addwf	_vel^0,w,c
  4065  000BD0  6E07               	movwf	_vel^0,c
  4066  000BD2  0EFF               	movlw	255
  4067  000BD4  2008               	addwfc	(_vel+1)^0,w,c
  4068  000BD6  6E08               	movwf	(_vel+1)^0,c
  4069                           
  4070                           ;main.c: 51:                 }else{
  4071  000BD8  EFF2  F005         	goto	l2193
  4072  000BDC                     l2191:
  4073                           
  4074                           ;main.c: 52:                     vel = 0;
  4075  000BDC  0E00               	movlw	0
  4076  000BDE  6E08               	movwf	(_vel+1)^0,c
  4077  000BE0  0E00               	movlw	0
  4078  000BE2  6E07               	movwf	_vel^0,c
  4079  000BE4                     l2193:
  4080                           
  4081                           ;main.c: 54:                 if(vel>0)alt = alt + vel;
  4082  000BE4  5007               	movf	_vel^0,w,c
  4083  000BE6  1008               	iorwf	(_vel+1)^0,w,c
  4084  000BE8  B4D8               	btfsc	status,2,c
  4085  000BEA  EFF9  F005         	goto	u2091
  4086  000BEE  EFFB  F005         	goto	u2090
  4087  000BF2                     u2091:
  4088  000BF2  EFAC  F005         	goto	l55
  4089  000BF6                     u2090:
  4090  000BF6  EFA6  F005         	goto	l2177
  4091  000BFA                     l2197:
  4092                           
  4093                           ;main.c: 58:                 if(vel>2){
  4094  000BFA  5008               	movf	(_vel+1)^0,w,c
  4095  000BFC  E109               	bnz	u2100
  4096  000BFE  0E03               	movlw	3
  4097  000C00  5C07               	subwf	_vel^0,w,c
  4098  000C02  A0D8               	btfss	status,0,c
  4099  000C04  EF06  F006         	goto	u2101
  4100  000C08  EF08  F006         	goto	u2100
  4101  000C0C                     u2101:
  4102  000C0C  EF10  F006         	goto	l2201
  4103  000C10                     u2100:
  4104  000C10                     
  4105                           ;main.c: 59:                     vel = vel - 3;
  4106  000C10  0EFD               	movlw	253
  4107  000C12  2407               	addwf	_vel^0,w,c
  4108  000C14  6E07               	movwf	_vel^0,c
  4109  000C16  0EFF               	movlw	255
  4110  000C18  2008               	addwfc	(_vel+1)^0,w,c
  4111  000C1A  6E08               	movwf	(_vel+1)^0,c
  4112                           
  4113                           ;main.c: 60:                 }else{
  4114  000C1C  EF14  F006         	goto	l2203
  4115  000C20                     l2201:
  4116                           
  4117                           ;main.c: 61:                     vel = 0;
  4118  000C20  0E00               	movlw	0
  4119  000C22  6E08               	movwf	(_vel+1)^0,c
  4120  000C24  0E00               	movlw	0
  4121  000C26  6E07               	movwf	_vel^0,c
  4122  000C28                     l2203:
  4123                           
  4124                           ;main.c: 63:                 if(vel>0)alt = alt + vel;
  4125  000C28  5007               	movf	_vel^0,w,c
  4126  000C2A  1008               	iorwf	(_vel+1)^0,w,c
  4127  000C2C  B4D8               	btfsc	status,2,c
  4128  000C2E  EF1B  F006         	goto	u2111
  4129  000C32  EF1D  F006         	goto	u2110
  4130  000C36                     u2111:
  4131  000C36  EFAC  F005         	goto	l55
  4132  000C3A                     u2110:
  4133  000C3A  EFA6  F005         	goto	l2177
  4134  000C3E                     l2207:
  4135                           
  4136                           ;main.c: 67:                 falha = 1;
  4137  000C3E  0E01               	movlw	1
  4138  000C40  6E16               	movwf	_falha^0,c
  4139  000C42                     
  4140                           ;main.c: 68:                 tempo = tempo + 1;
  4141  000C42  0E01               	movlw	1
  4142  000C44  240B               	addwf	_tempo^0,w,c
  4143  000C46  6E0B               	movwf	_tempo^0,c
  4144  000C48  0E00               	movlw	0
  4145  000C4A  200C               	addwfc	(_tempo+1)^0,w,c
  4146  000C4C  6E0C               	movwf	(_tempo+1)^0,c
  4147  000C4E                     
  4148                           ;main.c: 69:                 if(vel>0)alt = alt + vel;
  4149  000C4E  5007               	movf	_vel^0,w,c
  4150  000C50  1008               	iorwf	(_vel+1)^0,w,c
  4151  000C52  B4D8               	btfsc	status,2,c
  4152  000C54  EF2E  F006         	goto	u2121
  4153  000C58  EF30  F006         	goto	u2120
  4154  000C5C                     u2121:
  4155  000C5C  EF5A  F006         	goto	l2219
  4156  000C60                     u2120:
  4157  000C60  5007               	movf	_vel^0,w,c
  4158  000C62  2409               	addwf	_alt^0,w,c
  4159  000C64  6E09               	movwf	_alt^0,c
  4160  000C66  5008               	movf	(_vel+1)^0,w,c
  4161  000C68  200A               	addwfc	(_alt+1)^0,w,c
  4162  000C6A  6E0A               	movwf	(_alt+1)^0,c
  4163  000C6C  EF5A  F006         	goto	l2219
  4164  000C70                     l2217:
  4165  000C70  EC92  F00A         	call	_kpReadKey	;wreg free
  4166  000C74  6E1E               	movwf	??_LeTeclado^0,c
  4167  000C76  6A1F               	clrf	(??_LeTeclado+1)^0,c
  4168                           
  4169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4170                           ; Switch size 1, requested type "simple"
  4171                           ; Number of cases is 1, Range of values is 0 to 0
  4172                           ; switch strategies available:
  4173                           ; Name         Instructions Cycles
  4174                           ; simple_byte            4     3 (average)
  4175                           ;	Chosen strategy is simple_byte
  4176  000C78  501F               	movf	(??_LeTeclado+1)^0,w,c
  4177  000C7A  0A00               	xorlw	0	; case 0
  4178  000C7C  B4D8               	btfsc	status,2,c
  4179  000C7E  EF43  F006         	goto	l2621
  4180  000C82  EF5A  F006         	goto	l2219
  4181  000C86                     l2621:
  4182                           
  4183                           ; Switch size 1, requested type "simple"
  4184                           ; Number of cases is 5, Range of values is 68 to 85
  4185                           ; switch strategies available:
  4186                           ; Name         Instructions Cycles
  4187                           ; simple_byte           16     9 (average)
  4188                           ;	Chosen strategy is simple_byte
  4189  000C86  501E               	movf	??_LeTeclado^0,w,c
  4190  000C88  0A44               	xorlw	68	; case 68
  4191  000C8A  B4D8               	btfsc	status,2,c
  4192  000C8C  EFDB  F005         	goto	l2187
  4193  000C90  0A08               	xorlw	8	; case 76
  4194  000C92  B4D8               	btfsc	status,2,c
  4195  000C94  EFB4  F005         	goto	l2179
  4196  000C98  0A1E               	xorlw	30	; case 82
  4197  000C9A  B4D8               	btfsc	status,2,c
  4198  000C9C  EFFD  F005         	goto	l2197
  4199  000CA0  0A01               	xorlw	1	; case 83
  4200  000CA2  B4D8               	btfsc	status,2,c
  4201  000CA4  EF1F  F006         	goto	l2207
  4202  000CA8  0A06               	xorlw	6	; case 85
  4203  000CAA  B4D8               	btfsc	status,2,c
  4204  000CAC  EF77  F005         	goto	l2161
  4205  000CB0  EF5A  F006         	goto	l2219
  4206  000CB4                     l2219:
  4207                           
  4208                           ;main.c: 74:         if(estado == 2){
  4209  000CB4  0E02               	movlw	2
  4210  000CB6  1817               	xorwf	_estado^0,w,c
  4211  000CB8  A4D8               	btfss	status,2,c
  4212  000CBA  EF61  F006         	goto	u2131
  4213  000CBE  EF63  F006         	goto	u2130
  4214  000CC2                     u2131:
  4215  000CC2  EF7A  F006         	goto	l73
  4216  000CC6                     u2130:
  4217  000CC6                     
  4218                           ;main.c: 75:             alt=alt-10;
  4219  000CC6  0EF6               	movlw	246
  4220  000CC8  2409               	addwf	_alt^0,w,c
  4221  000CCA  6E09               	movwf	_alt^0,c
  4222  000CCC  0EFF               	movlw	255
  4223  000CCE  200A               	addwfc	(_alt+1)^0,w,c
  4224  000CD0  6E0A               	movwf	(_alt+1)^0,c
  4225                           
  4226                           ;main.c: 76:             if(vel<50){
  4227  000CD2  5008               	movf	(_vel+1)^0,w,c
  4228  000CD4  E107               	bnz	u2141
  4229  000CD6  0E32               	movlw	50
  4230  000CD8  5C07               	subwf	_vel^0,w,c
  4231  000CDA  B0D8               	btfsc	status,0,c
  4232  000CDC  EF72  F006         	goto	u2141
  4233  000CE0  EF74  F006         	goto	u2140
  4234  000CE4                     u2141:
  4235  000CE4  EF7A  F006         	goto	l73
  4236  000CE8                     u2140:
  4237  000CE8                     
  4238                           ;main.c: 77:                 alt=alt-40;
  4239  000CE8  0ED8               	movlw	216
  4240  000CEA  2409               	addwf	_alt^0,w,c
  4241  000CEC  6E09               	movwf	_alt^0,c
  4242  000CEE  0EFF               	movlw	255
  4243  000CF0  200A               	addwfc	(_alt+1)^0,w,c
  4244  000CF2  6E0A               	movwf	(_alt+1)^0,c
  4245  000CF4                     l73:
  4246  000CF4  0012               	return		;funcret
  4247  000CF6                     __end_of_LeTeclado:
  4248                           	callstack 0
  4249                           
  4250 ;; *************** function _kpReadKey *****************
  4251 ;; Defined at:
  4252 ;;		line 17 in file "keypad.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  i               2    3[COMRAM] int 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      unsigned char 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4266 ;;      Params:         0       0       0       0       0       0       0
  4267 ;;      Locals:         2       0       0       0       0       0       0
  4268 ;;      Temps:          3       0       0       0       0       0       0
  4269 ;;      Totals:         5       0       0       0       0       0       0
  4270 ;;Total ram usage:        5 bytes
  4271 ;; Hardware stack levels used: 1
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_LeTeclado
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text28
  4280  001524                     __ptext28:
  4281                           	callstack 0
  4282  001524                     _kpReadKey:
  4283                           	callstack 29
  4284  001524                     
  4285                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  4286  001524  0E00               	movlw	0
  4287  001526  6E1D               	movwf	(kpReadKey@i+1)^0,c
  4288  001528  0E00               	movlw	0
  4289  00152A  6E1C               	movwf	kpReadKey@i^0,c
  4290  00152C                     l1243:
  4291                           
  4292                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  4293  00152C  C01C  F019         	movff	kpReadKey@i,??_kpReadKey
  4294  001530  0E01               	movlw	1
  4295  001532  6E1A               	movwf	(??_kpReadKey+1)^0,c
  4296  001534  0E00               	movlw	0
  4297  001536  6E1B               	movwf	(??_kpReadKey+2)^0,c
  4298  001538  2A19               	incf	??_kpReadKey^0,f,c
  4299  00153A  EFA2  F00A         	goto	u434
  4300  00153E                     u435:
  4301  00153E  90D8               	bcf	status,0,c
  4302  001540  361A               	rlcf	(??_kpReadKey+1)^0,f,c
  4303  001542  361B               	rlcf	(??_kpReadKey+2)^0,f,c
  4304  001544                     u434:
  4305  001544  2E19               	decfsz	??_kpReadKey^0,f,c
  4306  001546  EF9F  F00A         	goto	u435
  4307  00154A  5005               	movf	_keys^0,w,c
  4308  00154C  161A               	andwf	(??_kpReadKey+1)^0,f,c
  4309  00154E  5006               	movf	(_keys+1)^0,w,c
  4310  001550  161B               	andwf	(??_kpReadKey+2)^0,f,c
  4311  001552  501A               	movf	(??_kpReadKey+1)^0,w,c
  4312  001554  101B               	iorwf	(??_kpReadKey+2)^0,w,c
  4313  001556  B4D8               	btfsc	status,2,c
  4314  001558  EFB0  F00A         	goto	u441
  4315  00155C  EFB2  F00A         	goto	u440
  4316  001560                     u441:
  4317  001560  EFBC  F00A         	goto	l1249
  4318  001564                     u440:
  4319  001564                     
  4320                           ;keypad.c: 21:    return charKey[i];
  4321  001564  0E11               	movlw	low _charKey
  4322  001566  241C               	addwf	kpReadKey@i^0,w,c
  4323  001568  6EF6               	movwf	tblptrl,c
  4324  00156A  0E06               	movlw	high _charKey
  4325  00156C  201D               	addwfc	(kpReadKey@i+1)^0,w,c
  4326  00156E  6EF7               	movwf	tblptrh,c
  4327  001570                     	if	0	;There are less than 3 active tblptr bytes
  4328  001570                     	endif
  4329  001570  0008               	tblrd		*
  4330  001572  50F5               	movf	tablat,w,c
  4331  001574  EFCD  F00A         	goto	l274
  4332  001578                     l1249:
  4333                           
  4334                           ;keypad.c: 23:  }
  4335  001578  4A1C               	infsnz	kpReadKey@i^0,f,c
  4336  00157A  2A1D               	incf	(kpReadKey@i+1)^0,f,c
  4337  00157C  BE1D               	btfsc	(kpReadKey@i+1)^0,7,c
  4338  00157E  EFCA  F00A         	goto	u451
  4339  001582  501D               	movf	(kpReadKey@i+1)^0,w,c
  4340  001584  E109               	bnz	u450
  4341  001586  0E0A               	movlw	10
  4342  001588  5C1C               	subwf	kpReadKey@i^0,w,c
  4343  00158A  A0D8               	btfss	status,0,c
  4344  00158C  EFCA  F00A         	goto	u451
  4345  001590  EFCC  F00A         	goto	u450
  4346  001594                     u451:
  4347  001594  EF96  F00A         	goto	l1243
  4348  001598                     u450:
  4349  001598                     
  4350                           ;keypad.c: 25:  return 0;
  4351  001598  0E00               	movlw	0
  4352  00159A                     l274:
  4353  00159A  0012               	return		;funcret
  4354  00159C                     __end_of_kpReadKey:
  4355                           	callstack 0
  4356                           
  4357 ;; *************** function _kpRead *****************
  4358 ;; Defined at:
  4359 ;;		line 14 in file "keypad.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;		None
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  2    0[COMRAM] unsigned int 
  4366 ;; Registers used:
  4367 ;;		None
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4373 ;;      Params:         2       0       0       0       0       0       0
  4374 ;;      Locals:         0       0       0       0       0       0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0
  4376 ;;      Totals:         2       0       0       0       0       0       0
  4377 ;;Total ram usage:        2 bytes
  4378 ;; Hardware stack levels used: 1
  4379 ;; This function calls:
  4380 ;;		Nothing
  4381 ;; This function is called by:
  4382 ;;		_LeTeclado
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text29
  4387  0019CE                     __ptext29:
  4388                           	callstack 0
  4389  0019CE                     _kpRead:
  4390                           	callstack 29
  4391  0019CE                     
  4392                           ;keypad.c: 15:     return keys;
  4393  0019CE  C005  F019         	movff	_keys,?_kpRead
  4394  0019D2  C006  F01A         	movff	_keys+1,?_kpRead+1
  4395  0019D6  0012               	return		;funcret
  4396  0019D8                     __end_of_kpRead:
  4397                           	callstack 0
  4398                           
  4399                           	psect	rparam
  4400  0000                     
  4401                           	psect	idloc
  4402                           
  4403                           ;Config register IDLOC0 @ 0x200000
  4404                           ;	unspecified, using default values
  4405  200000                     	org	2097152
  4406  200000  FF                 	db	255
  4407                           
  4408                           ;Config register IDLOC1 @ 0x200001
  4409                           ;	unspecified, using default values
  4410  200001                     	org	2097153
  4411  200001  FF                 	db	255
  4412                           
  4413                           ;Config register IDLOC2 @ 0x200002
  4414                           ;	unspecified, using default values
  4415  200002                     	org	2097154
  4416  200002  FF                 	db	255
  4417                           
  4418                           ;Config register IDLOC3 @ 0x200003
  4419                           ;	unspecified, using default values
  4420  200003                     	org	2097155
  4421  200003  FF                 	db	255
  4422                           
  4423                           ;Config register IDLOC4 @ 0x200004
  4424                           ;	unspecified, using default values
  4425  200004                     	org	2097156
  4426  200004  FF                 	db	255
  4427                           
  4428                           ;Config register IDLOC5 @ 0x200005
  4429                           ;	unspecified, using default values
  4430  200005                     	org	2097157
  4431  200005  FF                 	db	255
  4432                           
  4433                           ;Config register IDLOC6 @ 0x200006
  4434                           ;	unspecified, using default values
  4435  200006                     	org	2097158
  4436  200006  FF                 	db	255
  4437                           
  4438                           ;Config register IDLOC7 @ 0x200007
  4439                           ;	unspecified, using default values
  4440  200007                     	org	2097159
  4441  200007  FF                 	db	255
  4442                           
  4443                           	psect	config
  4444                           
  4445                           ; Padding undefined space
  4446  300000                     	org	3145728
  4447  300000  FF                 	db	255
  4448                           
  4449                           ;Config register CONFIG1H @ 0x300001
  4450                           ;	Oscillator Selection bits
  4451                           ;	OSC = HS, HS oscillator
  4452                           ;	Fail-Safe Clock Monitor Enable bit
  4453                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4454                           ;	Internal/External Oscillator Switchover bit
  4455                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4456  300001                     	org	3145729
  4457  300001  02                 	db	2
  4458                           
  4459                           ;Config register CONFIG2L @ 0x300002
  4460                           ;	Power-up Timer Enable bit
  4461                           ;	PWRT = OFF, PWRT disabled
  4462                           ;	Brown-out Reset Enable bits
  4463                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4464                           ;	Brown Out Reset Voltage bits
  4465                           ;	BORV = 0x2E, user specified literal
  4466  300002                     	org	3145730
  4467  300002  71                 	db	369
  4468                           
  4469                           ;Config register CONFIG2H @ 0x300003
  4470                           ;	Watchdog Timer Enable bit
  4471                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4472                           ;	Watchdog Timer Postscale Select bits
  4473                           ;	WDTPS = 1, 1:1
  4474  300003                     	org	3145731
  4475  300003  00                 	db	0
  4476                           
  4477                           ; Padding undefined space
  4478  300004                     	org	3145732
  4479  300004  FF                 	db	255
  4480                           
  4481                           ;Config register CONFIG3H @ 0x300005
  4482                           ;	CCP2 MUX bit
  4483                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4484                           ;	PORTB A/D Enable bit
  4485                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4486                           ;	Low-Power Timer1 Oscillator Enable bit
  4487                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4488                           ;	MCLR Pin Enable bit
  4489                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4490  300005                     	org	3145733
  4491  300005  83                 	db	131
  4492                           
  4493                           ;Config register CONFIG4L @ 0x300006
  4494                           ;	Stack Full/Underflow Reset Enable bit
  4495                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4496                           ;	Single-Supply ICSP Enable bit
  4497                           ;	LVP = OFF, Single-Supply ICSP disabled
  4498                           ;	Extended Instruction Set Enable bit
  4499                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4500                           ;	Background Debugger Enable bit
  4501                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4502  300006                     	org	3145734
  4503  300006  80                 	db	128
  4504                           
  4505                           ; Padding undefined space
  4506  300007                     	org	3145735
  4507  300007  FF                 	db	255
  4508                           
  4509                           ;Config register CONFIG5L @ 0x300008
  4510                           ;	Code Protection bit
  4511                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4512                           ;	Code Protection bit
  4513                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4514                           ;	Code Protection bit
  4515                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4516                           ;	Code Protection bit
  4517                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4518  300008                     	org	3145736
  4519  300008  0F                 	db	15
  4520                           
  4521                           ;Config register CONFIG5H @ 0x300009
  4522                           ;	Boot Block Code Protection bit
  4523                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4524                           ;	Data EEPROM Code Protection bit
  4525                           ;	CPD = OFF, Data EEPROM not code-protected
  4526  300009                     	org	3145737
  4527  300009  C0                 	db	192
  4528                           
  4529                           ;Config register CONFIG6L @ 0x30000A
  4530                           ;	Write Protection bit
  4531                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4532                           ;	Write Protection bit
  4533                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4534                           ;	Write Protection bit
  4535                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4536                           ;	Write Protection bit
  4537                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4538  30000A                     	org	3145738
  4539  30000A  0F                 	db	15
  4540                           
  4541                           ;Config register CONFIG6H @ 0x30000B
  4542                           ;	Configuration Register Write Protection bit
  4543                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4544                           ;	Boot Block Write Protection bit
  4545                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4546                           ;	Data EEPROM Write Protection bit
  4547                           ;	WRTD = OFF, Data EEPROM not write-protected
  4548  30000B                     	org	3145739
  4549  30000B  E0                 	db	224
  4550                           
  4551                           ;Config register CONFIG7L @ 0x30000C
  4552                           ;	Table Read Protection bit
  4553                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4554                           ;	Table Read Protection bit
  4555                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4556                           ;	Table Read Protection bit
  4557                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4558                           ;	Table Read Protection bit
  4559                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4560  30000C                     	org	3145740
  4561  30000C  0F                 	db	15
  4562                           
  4563                           ;Config register CONFIG7H @ 0x30000D
  4564                           ;	Boot Block Table Read Protection bit
  4565                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4566  30000D                     	org	3145741
  4567  30000D  40                 	db	64
  4568                           tosu	equ	0xFFF
  4569                           tosh	equ	0xFFE
  4570                           tosl	equ	0xFFD
  4571                           stkptr	equ	0xFFC
  4572                           pclatu	equ	0xFFB
  4573                           pclath	equ	0xFFA
  4574                           pcl	equ	0xFF9
  4575                           tblptru	equ	0xFF8
  4576                           tblptrh	equ	0xFF7
  4577                           tblptrl	equ	0xFF6
  4578                           tablat	equ	0xFF5
  4579                           prodh	equ	0xFF4
  4580                           prodl	equ	0xFF3
  4581                           indf0	equ	0xFEF
  4582                           postinc0	equ	0xFEE
  4583                           postdec0	equ	0xFED
  4584                           preinc0	equ	0xFEC
  4585                           plusw0	equ	0xFEB
  4586                           fsr0h	equ	0xFEA
  4587                           fsr0l	equ	0xFE9
  4588                           wreg	equ	0xFE8
  4589                           indf1	equ	0xFE7
  4590                           postinc1	equ	0xFE6
  4591                           postdec1	equ	0xFE5
  4592                           preinc1	equ	0xFE4
  4593                           plusw1	equ	0xFE3
  4594                           fsr1h	equ	0xFE2
  4595                           fsr1l	equ	0xFE1
  4596                           bsr	equ	0xFE0
  4597                           indf2	equ	0xFDF
  4598                           postinc2	equ	0xFDE
  4599                           postdec2	equ	0xFDD
  4600                           preinc2	equ	0xFDC
  4601                           plusw2	equ	0xFDB
  4602                           fsr2h	equ	0xFDA
  4603                           fsr2l	equ	0xFD9
  4604                           status	equ	0xFD8

Data Sizes:
    Strings     10
    Constant    26
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     24      48
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_lcdString
    _ssdUpdate->_soWrite
    _ssdInit->_pinMode
    _lcdString->_lcdChar
    _lcdNumber->___awmod
    _lcdNumber->_lcdChar
    _lcdChar->_pushByte
    ___awmod->___awdiv
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _LeTeclado->_kpReadKey

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  151422
                                             20 COMRAM     4     4      0
                          _LeTeclado
                          _atraso_ms
                         _kpDebounce
                             _kpInit
                         _lcdCommand
                            _lcdInit
                          _lcdNumber
                          _lcdString
                             _soInit
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   15297
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    6048
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     480
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _lcdString                                            6     4      2   20273
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (1) _lcdNumber                                            4     2      2   21325
                                             14 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   19955
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   46364
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   19661
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   19925
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   19553
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    4016
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    6048
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3024
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3024
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   12297
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   11661
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    3636
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    3636
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    3636
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            6     4      2     214
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _LeTeclado                                            2     2      0      60
                                              5 COMRAM     2     2      0
                             _kpRead
                          _kpReadKey
 ---------------------------------------------------------------------------------
 (2) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LeTeclado
     _kpRead
     _kpReadKey
   _atraso_ms
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdCommand
     _delayMili
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdNumber
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _lcdChar
       _delayMicro
       _pushByte
   _lcdString
     _lcdChar
   _soInit
   _ssdDigit
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
     _digitalWrite
     _soWrite
   _timerInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     18      30       1       37.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30      15        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 16:31:56 2021

         _pulseEnablePin 1820             lcdString@msg 0027                       l55 0B58  
                     l73 0CF4                       l58 0BA0             ___awdiv@sign 001E  
                     _v0 0018                       _v1 0011                       _v2 0010  
                     _v3 000F                      l221 11C4                      l222 11C0  
                    l310 1900                      l304 19E0                      l400 105A  
                    l217 0AC0                      l313 1860                      l226 11C0  
                    l322 19B6                      l330 1998                      l251 0872  
                    l403 177A                      l316 197A                      l342 160E  
                    l175 1672                      l319 16CC                      l352 189E  
                    l336 17D0                      l345 1472                      l274 159A  
                    l290 12FA                      l426 19DE                      l355 192A  
                    l363 181E                      l268 19D6                      l293 18D0  
                    l358 1954                      l390 1724                      l288 12E2  
                    l690 1522                      l677 13BE                      u440 1564  
                    u441 1560                      u450 1598                      u434 1544  
                    u451 1594                      u435 153E                      _alt 0009  
                    _vel 0007             ___awmod@sign 0026                      wreg 000FE8  
                   l2001 081A                     l2003 082C                     l2011 18E2  
                   l2005 0850                     l2013 1676                     l2101 136C  
                   l2015 19CE                     l2007 18D2                     l2111 1398  
                   l2103 1372                     l2201 0C20                     l2041 10E8  
                   l2033 10A0                     l2025 105C                     l2017 1862  
                   l2009 18DE                     l2105 1388                     l2113 139E  
                   l2121 1474                     l1251 157C                     l1243 152C  
                   l2211 0C4E                     l2203 0C28                     l2051 114C  
                   l2043 1104                     l2035 10BC                     l2027 1078  
                   l2019 199C                     l2115 13AE                     l2107 1390  
                   l2131 14A0                     l2123 1478                     l1253 1598  
                   l1245 1564                     l1237 1524                     l2221 0CC6  
                   l2213 0C60                     l2117 13B6                     l2109 1392  
                   l2141 14D8                     l2133 14A8                     l2125 1486  
                   l2301 16F8                     l2223 0CE8                     l2207 0C3E  
                   l2231 18CC                     l2071 1958                     l2151 1512  
                   l2143 14EE                     l2135 14BA                     l2127 148E  
                   l2303 170A                     l2311 0F50                     l1249 1578  
                   l2209 0C42                     l2161 0AEE                     l2217 0C70  
                   l2057 1178                     l2049 1130                     l2241 1454  
                   l2233 13C0                     l2081 130E                     l2153 151A  
                   l2145 14F6                     l2137 14C2                     l2129 1492  
                   l2073 197E                     l2305 170E                     l2321 0FB0  
                   l2313 0F68                     l2219 0CB4                     l2171 0B32  
                   l2163 0AFE                     l2059 1194                     l2251 11C6  
                   l2243 1460                     l2235 1420                     l2091 1334  
                   l2083 1316                     l2147 14FC                     l2139 14CA  
                   l2075 198C                     l2307 1720                     l2331 1004  
                   l2323 0FB8                     l2315 0F7C                     l2181 0B7E  
                   l2165 0B0A                     l2157 0AC2                     l2261 1268  
                   l2253 11D6                     l2229 18A0                     l2245 1466  
                   l2237 142C                     l2093 133C                     l2085 131A  
                   l2077 12FC                     l2149 1502                     l2333 1018  
                   l2325 0FD0                     l2317 0F84                     l2309 0EF0  
                   l2501 0E76                     l2191 0BDC                     l2183 0B94  
                   l2175 0B3A                     l2167 0B10                     l2159 0ADE  
                   l2271 12D0                     l2263 1286                     l2247 146C  
                   l2239 1446                     l2095 134E                     l2087 1328  
                   l2079 1300                     l2327 0FE4                     l2319 0F9C  
                   l2511 0EBA                     l2503 0E94                     l2193 0BE4  
                   l2177 0B4C                     l2169 0B22                     l2353 1634  
                   l2345 1610                     l2273 12D6                     l2265 12B0  
                   l2257 11F6                     l2097 1356                     l2089 1330  
                   l2281 1788                     l2249 1726                     l2329 0FEC  
                   l2513 0EC4                     l2505 0EA0                     l2441 0CF6  
                   l2187 0BB6                     l2179 0B68                     l2363 1652  
                   l2355 1638                     l2347 161C                     l2275 12DA  
                   l2259 1242                     l2099 135E                     l2291 15F4  
                   l2283 17A4                     l2339 1020                     l2515 0ECE  
                   l2507 0EAC                     l2451 0D16                     l2443 0D06  
                   l2621 0C86                     l2197 0BFA                     l2189 0BCC  
                   l2349 1620                     l1901 0890                     l2277 12F2  
                   l2269 12B8                     l2285 17A8                     l2293 16D0  
                   l1493 19D8                     l2517 0EDC                     l2509 0EB0  
                   l2461 0D54                     l2453 0D1A                     l2445 0D0A  
                   l2199 0C10                     l2359 164C                     l2367 1658  
                   l1911 091A                     l1903 08A2                     l2287 159C  
                   l2279 177C                     l2295 16E0                     l1495 19DC  
                   l2615 0DD8                     l2471 0DA6                     l2463 0D5C  
                   l2455 0D24                     l2447 0D0E                     l2369 165C  
                   l1921 09B2                     l1913 093A                     l1905 08C2  
                   l2289 15A8                     l2297 16E4                     l2617 0E22  
                   l2481 0DF6                     l2473 0DBC                     l2465 0D72  
                   l2457 0D3A                     l2449 0D12                     l1931 0A4C  
                   l1923 09D4                     l1915 095C                     l1907 08E4  
                   l2299 16F4                     l2619 1034                     l2483 0DFE  
                   l2491 0E40                     l2467 0D7A                     l2459 0D3E  
                   l1933 0A68                     l1925 09F0                     l1917 0978  
                   l1909 0900                     l1941 192C                     l2493 0E50  
                   l2485 0E06                     l2469 0D90                     l1935 0A82  
                   l1927 0A0A                     l1919 0992                     l1951 17EA  
                   l1943 17D2                     l2495 0E54                     l2479 0DC4  
                   l1937 0AA2                     l1929 0A2A                     l1953 1802  
                   l1945 17E6                     l1961 1820                     l2497 0E58  
                   l2489 0E0E                     l1939 1902                     l1955 1808  
                   l1971 0654                     l1963 1834                     l2499 0E6A  
                   l1957 180A                     l1981 06E8                     l1973 0674  
                   l1965 1840                     l1959 181A                     l1991 0786  
                   l1983 070E                     l1975 0696                     l1967 0626  
                   l1993 07A2                     l1985 072A                     l1977 06B2  
                   l1969 0642                     l1899 0874                     l1995 07B4  
                   l1987 073C                     l1979 06C4                     l1997 07D8  
                   l1989 0760                     l1999 07FE                     STR_1 0622  
                   STR_2 061B                     STR_3 061F                     u2000 0ADE  
                   u2001 0ADA                     u2010 0AFE                     u2011 0AFA  
                   u2100 0C10                     u2020 0B22                     u2101 0C0C  
                   u2021 0B1E                     u2110 0C3A                     u2030 0B32  
                   u2111 0C36                     u2031 0B2E                     u2120 0C60  
                   u2040 0B4C                     u1400 0978                     u1320 0890  
                   u2121 0C5C                     u2041 0B48                     u1401 0974  
                   u1321 088C                     u2130 0CC6                     u2050 0B7E  
                   u1410 0992                     u1330 08A2                     u2210 12D0  
                   u2131 0CC2                     u2051 0B7A                     u1411 098E  
                   u1331 089E                     u2211 12CC                     u2140 0CE8  
                   u2060 0B94                     u2300 1648                     u2220 12F2  
                   u2204 12A2                     u2141 0CE4                     u2061 0B90  
                   u2301 1644                     u2221 12EE                     u2205 129C  
                   u2070 0BB2                     u2310 1672                     u2150 11F2  
                   u2230 17D0                     u2071 0BAE                     u2311 166E  
                   u2151 11EE                     u2231 17CC                     u2080 0BCC  
                   u1504 0A94                     u1440 09F0                     u1424 09A4  
                   u1360 0900                     u1344 08B4                     u1520 181A  
                   u2240 160E                     u2400 0D54                     u2081 0BC8  
                   u1505 0A90                     u1441 09EC                     u1425 09A0  
                   u1361 08FC                     u1345 08B0                     u1521 1816  
                   u2241 160A                     u2401 0D50                     u2090 0BF6  
                   u1514 0AB4                     u1450 0A0A                     u1434 09C4  
                   u1370 091A                     u1354 08D4                     u2170 1242  
                   u1610 072A                     u1530 0642                     u2250 16E0  
                   u2410 0D72                     u2091 0BF2                     u1515 0AB0  
                   u1451 0A06                     u1435 09C0                     u1371 0916  
                   u1355 08D0                     u2171 123E                     u1611 0726  
                   u1531 063E                     u2251 16DC                     u2411 0D6E  
                   u2164 1212                     u1700 082C                     u1620 073C  
                   u1604 06FE                     u1540 0654                     u2260 16F4  
                   u2420 0D90                     u2165 120C                     u1701 0828  
                   u1621 0738                     u1605 06FA                     u1541 0650  
                   u2261 16F0                     u2421 0D8C                     u2190 1286  
                   u2270 170A                     u2430 0DA6                     u2191 1282  
                   u2271 1706                     u2431 0DA2                     u1800 1104  
                   u1480 0A68                     u1464 0A1C                     u1384 092C  
                   u2184 125A                     u2280 1720                     u2440 0DBC  
                   u1801 1100                     u1481 0A64                     u1465 0A18  
                   u1385 0928                     u2185 1254                     u2281 171C  
                   u2441 0DB8                     u2290 1630                     u1490 0A82  
                   u1474 0A3C                     u1394 094C                     u1714 0842  
                   u1650 07A2                     u1634 0752                     u1570 06B2  
                   u1554 0666                     u1730 1900                     u2450 0E50  
                   u2291 162C                     u1491 0A7E                     u1475 0A38  
                   u1395 0948                     u1715 083E                     u1651 079E  
                   u1635 074E                     u1571 06AE                     u1555 0662  
                   u1731 18FC                     u2451 0E4C                     u1820 114C  
                   u1724 0866                     u1660 07B4                     u1644 0776  
                   u1580 06C4                     u1564 0686                     u1900 134E  
                   u1821 1148                     u1725 0862                     u1661 07B0  
                   u1645 0772                     u1581 06C0                     u1565 0682  
                   u1901 134A                     u1814 111A                     u1910 136C  
                   u2390 0D3A                     u1815 1116                     u1911 1368  
                   u2391 0D36                     u1840 1194                     u1760 1078  
                   u1920 1388                     u1841 1190                     u1761 1074  
                   u1921 1384                     u1834 1162                     u1690 081A  
                   u1674 07CA                     u1594 06DA                     u1930 13AE  
                   u1835 115E                     u1691 0816                     u1675 07C6  
                   u1595 06D6                     u1931 13AA                     u1780 10BC  
                   u1684 07EE                     u1940 1486                     u1781 10B8  
                   u1685 07EA                     u1941 1482                     u1854 11AA  
                   u1774 108A                     u1950 14A0                     u1855 11A6  
                   u1775 1086                     u1951 149C                     u1880 130E  
                   u1960 14BA                     u1881 130A                     u1961 14B6  
                   u1794 10D2                     u1890 1328                     u1970 14D8  
                   u1795 10CE                     u1891 1324                     u1971 14D4  
                   u1980 14EE                     u1981 14EA                     u1990 1512  
                   u1991 150E                     _main 0CF6                     _keys 0005  
       ??_PulseClockData 001F                     start 0000          pushNibble@value 0024  
           ___param_bank 000000   __end_of_pulseEnablePin 1862                    ?_main 0019  
        __end_of___awdiv 13C0          __end_of___awmod 1524                    _T0CON 000FD5  
        ___awdiv@divisor 001B          ___awdiv@counter 001D                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
        __end_of_charKey 061B                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdChar 199A          __end_of_lcdInit 1474                    _falha 0016  
        __end_of_pinMode 0874                    _valor 0601                    _tempo 000B  
                  main@x 002F          __end_of_soWrite 1820                    tablat 000FF5  
        __end_of_ssdInit 177C                    status 000FD8             pushNibble@rs 0022  
   __end_of_digitalWrite 0AC2          __initialization 19B8          ?_pulseEnablePin 0019  
           __end_of_main 0EF0                   ??_main 002D       __size_of_LeTeclado 0234  
          __activetblptr 000002     __size_of_digitalRead 016A                   _ADCON1 000FC1  
       ___awdiv@dividend 0019             atraso_ms@num 0019                   _INTCON 000FF2  
              ??___awdiv 001D                ??___awmod 0025                   _kpInit 18A0  
                 _kpRead 19CE                   _estado 0017                   clear_0 19BE  
                 _soInit 1862         ___awdiv@quotient 001F          ___awmod@divisor 0023  
              ??_lcdChar 0026                   isa$std 000001                ??_lcdInit 0027  
        ___awmod@counter 0025         __end_of_ssdDigit 1726                ??_pinMode 001D  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_soWrite 0021                ??_ssdInit 001F  
       __end_of_pushByte 16CE               __accesstop 0080  __end_of__initialization 19C4  
      __end_of_LeTeclado 0CF6            ___rparam_used 000001            pushByte@value 0025  
            pinMode@type 001B           __pcstackCOMRAM 0019            __end_of_valor 0611  
     __size_of_delayMili 0030       __size_of_lcdNumber 0074       __size_of_lcdString 0056  
     __size_of_kpReadKey 0078       __size_of_atraso_ms 0064    __size_of_digitalWrite 024E  
             _delayMicro 19E0              _v0@ssd$F459 0012               _lcdCommand 199A  
                ?_kpInit 0019                  ?_kpRead 0019                  ?_soInit 0019  
             _kpDebounce 11C6       __size_of_timerInit 0008       __size_of_ssdUpdate 016C  
           _digitalWrite 0874        __end_of_delayMili 1902         ??_pulseEnablePin 001F  
                __Hparam 0000        __end_of_lcdNumber 1610                  __Lparam 0000  
              ?_ssdDigit 0019        __end_of_lcdString 17D2          kpDebounce@tempo 0014  
      __end_of_kpReadKey 159C                  ___awdiv 12FC                  ___awmod 1474  
              ?_pushByte 0022        __end_of_atraso_ms 1674             __psmallconst 0600  
        __size_of_kpInit 0032          __size_of_kpRead 000A                  _charKey 0611  
            ssdDigit@val 001A              ssdDigit@pos 0019                  __pcinit 19B8  
                _lcdChar 197C                  __ramtop 0600          __size_of_soInit 003E  
                _lcdInit 13C0                  __ptext0 0CF6                  __ptext1 19D8  
                __ptext2 0EF0                  __ptext3 1726                  __ptext4 16CE  
                __ptext5 177C                  __ptext6 159C                  __ptext7 197C  
                __ptext8 1474                  __ptext9 12FC                  _display 0013  
                _leitura 000D                  _pinMode 0626         ___awmod@dividend 0021  
             delayMili@a 0019               delayMili@i 001C                  _soWrite 17D2  
                _ssdInit 1726                  _started 0015     end_of_initialization 19C4  
          ?_PulseEnClock 0019            __Lmediumconst 0000           digitalRead@pin 0019  
            ?_delayMicro 0019        __end_of_timerInit 19E0        __end_of_ssdUpdate 105C  
             ??_ssdDigit 001A              ?_lcdCommand 0019                  postinc0 000FEE  
             ??_pushByte 0024  __size_of_PulseClockData 002A            ??_digitalRead 001B  
            ?_kpDebounce 0019               lcdNumber@i 0029               _pushNibble 1956  
             lcdString@i 002B           ??_PulseEnClock 001F               kpReadKey@i 001C  
              _LeTeclado 0AC2               atraso_ms@i 001B               atraso_ms@j 001D  
             atraso_ms@k 001E           __end_of_kpInit 18D2           __end_of_kpRead 19D8  
         __end_of_soInit 18A0      __size_of_delayMicro 0002      start_initialization 19B8  
    __end_of_digitalRead 11C6      __size_of_lcdCommand 001E      __size_of_kpDebounce 0136  
             ?_LeTeclado 0019        kpDebounce@oldRead 0001        kpDebounce@newRead 0003  
               ??_kpInit 001F                 ??_kpRead 001B                 ??_soInit 001F  
            __pbssCOMRAM 0001              ?_pushNibble 0022               pinMode@pin 0019  
              _delayMili 18D2                 ?___awdiv 0019                 ?___awmod 0021  
      __size_of_ssdDigit 0058           _PulseClockData 192C                _lcdNumber 159C  
   __end_of_PulseEnClock 192C                _lcdString 177C              _digitalRead 105C  
               ?_lcdChar 0019        __size_of_pushByte 005A                 ?_lcdInit 0019  
              _kpReadKey 1524                _atraso_ms 1610              __smallconst 0600  
               ?_pinMode 0019                 ?_soWrite 001F                 ?_ssdInit 0019  
           ??_delayMicro 001B               ?_delayMili 0019              ??_LeTeclado 001E  
 __end_of_PulseClockData 1956      __size_of_pushNibble 0026             ??_lcdCommand 0026  
              _timerInit 19D8                _ssdUpdate 0EF0               ?_lcdNumber 0027  
             ?_lcdString 0027             ??_kpDebounce 0022               ?_kpReadKey 0019  
             ?_atraso_ms 0019          lcdCommand@value 0026       __end_of_delayMicro 19E2  
     __end_of_lcdCommand 19B8               pushByte@rs 0022             lcdChar@value 0026  
     __end_of_kpDebounce 12FC                 __Hrparam 0000                 __Lrparam 0000  
        ?_PulseClockData 0019               ?_timerInit 0019               ?_ssdUpdate 0019  
       __size_of___awdiv 00C4         __size_of___awmod 00B0  __size_of_pulseEnablePin 0042  
         lcdNumber@value 0027         __size_of_lcdChar 001E         __size_of_lcdInit 00B4  
       __size_of_pinMode 024E                 __ptext10 13C0                 __ptext11 1956  
               __ptext20 11C6                 __ptext12 199A                 __ptext21 17D2  
               __ptext13 1674                 __ptext22 1902                 __ptext14 1820  
               __ptext23 192C                 __ptext15 19E0                 __ptext24 0874  
               __ptext16 18D2                 __ptext25 105C                 __ptext17 18A0  
               __ptext26 1610                 __ptext18 1862                 __ptext27 0AC2  
               __ptext19 0626                 __ptext28 1524                 __ptext29 19CE  
       __size_of_soWrite 004E         __size_of_ssdInit 0056            __size_of_main 01FA  
            ??_delayMili 001B    __size_of_PulseEnClock 002A                 _ssdDigit 16CE  
            delayMicro@a 0019                 isa$xinst 000000             soWrite@value 001F  
               _pushByte 1674              ??_lcdNumber 0029              ??_lcdString 0029  
            ??_kpReadKey 0019              ??_atraso_ms 001B             ??_pushNibble 0024  
          ?_digitalWrite 0019             _PulseEnClock 1902        digitalWrite@value 001B  
               soWrite@i 0021              ??_timerInit 0019              ??_ssdUpdate 0022  
     __end_of_pushNibble 197C             ?_digitalRead 0019              kpDebounce@i 0025  
         ??_digitalWrite 001D          digitalWrite@pin 0019  
